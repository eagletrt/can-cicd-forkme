// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secondary.proto

#include "secondary.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace secondary {
PROTOBUF_CONSTEXPR ImuAngularRate::ImuAngularRate(
    ::_pbi::ConstantInitialized)
  : ang_rate_x_(0u)
  , ang_rate_y_(0u)
  , ang_rate_z_(0u){}
struct ImuAngularRateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuAngularRateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuAngularRateDefaultTypeInternal() {}
  union {
    ImuAngularRate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuAngularRateDefaultTypeInternal _ImuAngularRate_default_instance_;
PROTOBUF_CONSTEXPR ImuAcceleration::ImuAcceleration(
    ::_pbi::ConstantInitialized)
  : accel_x_(0u)
  , accel_y_(0u)
  , accel_z_(0u){}
struct ImuAccelerationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImuAccelerationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImuAccelerationDefaultTypeInternal() {}
  union {
    ImuAcceleration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImuAccelerationDefaultTypeInternal _ImuAcceleration_default_instance_;
PROTOBUF_CONSTEXPR IrtsFl0::IrtsFl0(
    ::_pbi::ConstantInitialized)
  : channel1_(0u)
  , channel2_(0u)
  , channel3_(0u)
  , channel4_(0u){}
struct IrtsFl0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFl0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFl0DefaultTypeInternal() {}
  union {
    IrtsFl0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFl0DefaultTypeInternal _IrtsFl0_default_instance_;
PROTOBUF_CONSTEXPR IrtsFl1::IrtsFl1(
    ::_pbi::ConstantInitialized)
  : channel5_(0u)
  , channel6_(0u)
  , channel7_(0u)
  , channel8_(0u){}
struct IrtsFl1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFl1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFl1DefaultTypeInternal() {}
  union {
    IrtsFl1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFl1DefaultTypeInternal _IrtsFl1_default_instance_;
PROTOBUF_CONSTEXPR IrtsFl2::IrtsFl2(
    ::_pbi::ConstantInitialized)
  : channel9_(0u)
  , channel10_(0u)
  , channel11_(0u)
  , channel12_(0u){}
struct IrtsFl2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFl2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFl2DefaultTypeInternal() {}
  union {
    IrtsFl2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFl2DefaultTypeInternal _IrtsFl2_default_instance_;
PROTOBUF_CONSTEXPR IrtsFl3::IrtsFl3(
    ::_pbi::ConstantInitialized)
  : channel13_(0u)
  , channel14_(0u)
  , channel15_(0u)
  , channel16_(0u){}
struct IrtsFl3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFl3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFl3DefaultTypeInternal() {}
  union {
    IrtsFl3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFl3DefaultTypeInternal _IrtsFl3_default_instance_;
PROTOBUF_CONSTEXPR IrtsFr0::IrtsFr0(
    ::_pbi::ConstantInitialized)
  : channel1_(0u)
  , channel2_(0u)
  , channel3_(0u)
  , channel4_(0u){}
struct IrtsFr0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFr0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFr0DefaultTypeInternal() {}
  union {
    IrtsFr0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFr0DefaultTypeInternal _IrtsFr0_default_instance_;
PROTOBUF_CONSTEXPR IrtsFr1::IrtsFr1(
    ::_pbi::ConstantInitialized)
  : channel5_(0u)
  , channel6_(0u)
  , channel7_(0u)
  , channel8_(0u){}
struct IrtsFr1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFr1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFr1DefaultTypeInternal() {}
  union {
    IrtsFr1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFr1DefaultTypeInternal _IrtsFr1_default_instance_;
PROTOBUF_CONSTEXPR IrtsFr2::IrtsFr2(
    ::_pbi::ConstantInitialized)
  : channel9_(0u)
  , channel10_(0u)
  , channel11_(0u)
  , channel12_(0u){}
struct IrtsFr2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFr2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFr2DefaultTypeInternal() {}
  union {
    IrtsFr2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFr2DefaultTypeInternal _IrtsFr2_default_instance_;
PROTOBUF_CONSTEXPR IrtsFr3::IrtsFr3(
    ::_pbi::ConstantInitialized)
  : channel13_(0u)
  , channel14_(0u)
  , channel15_(0u)
  , channel16_(0u){}
struct IrtsFr3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsFr3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsFr3DefaultTypeInternal() {}
  union {
    IrtsFr3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsFr3DefaultTypeInternal _IrtsFr3_default_instance_;
PROTOBUF_CONSTEXPR IrtsRl0::IrtsRl0(
    ::_pbi::ConstantInitialized)
  : channel1_(0u)
  , channel2_(0u)
  , channel3_(0u)
  , channel4_(0u){}
struct IrtsRl0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRl0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRl0DefaultTypeInternal() {}
  union {
    IrtsRl0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRl0DefaultTypeInternal _IrtsRl0_default_instance_;
PROTOBUF_CONSTEXPR IrtsRl1::IrtsRl1(
    ::_pbi::ConstantInitialized)
  : channel5_(0u)
  , channel6_(0u)
  , channel7_(0u)
  , channel8_(0u){}
struct IrtsRl1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRl1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRl1DefaultTypeInternal() {}
  union {
    IrtsRl1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRl1DefaultTypeInternal _IrtsRl1_default_instance_;
PROTOBUF_CONSTEXPR IrtsRl2::IrtsRl2(
    ::_pbi::ConstantInitialized)
  : channel9_(0u)
  , channel10_(0u)
  , channel11_(0u)
  , channel12_(0u){}
struct IrtsRl2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRl2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRl2DefaultTypeInternal() {}
  union {
    IrtsRl2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRl2DefaultTypeInternal _IrtsRl2_default_instance_;
PROTOBUF_CONSTEXPR IrtsRl3::IrtsRl3(
    ::_pbi::ConstantInitialized)
  : channel13_(0u)
  , channel14_(0u)
  , channel15_(0u)
  , channel16_(0u){}
struct IrtsRl3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRl3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRl3DefaultTypeInternal() {}
  union {
    IrtsRl3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRl3DefaultTypeInternal _IrtsRl3_default_instance_;
PROTOBUF_CONSTEXPR IrtsRr0::IrtsRr0(
    ::_pbi::ConstantInitialized)
  : channel1_(0u)
  , channel2_(0u)
  , channel3_(0u)
  , channel4_(0u){}
struct IrtsRr0DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRr0DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRr0DefaultTypeInternal() {}
  union {
    IrtsRr0 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRr0DefaultTypeInternal _IrtsRr0_default_instance_;
PROTOBUF_CONSTEXPR IrtsRr1::IrtsRr1(
    ::_pbi::ConstantInitialized)
  : channel5_(0u)
  , channel6_(0u)
  , channel7_(0u)
  , channel8_(0u){}
struct IrtsRr1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRr1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRr1DefaultTypeInternal() {}
  union {
    IrtsRr1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRr1DefaultTypeInternal _IrtsRr1_default_instance_;
PROTOBUF_CONSTEXPR IrtsRr2::IrtsRr2(
    ::_pbi::ConstantInitialized)
  : channel9_(0u)
  , channel10_(0u)
  , channel11_(0u)
  , channel12_(0u){}
struct IrtsRr2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRr2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRr2DefaultTypeInternal() {}
  union {
    IrtsRr2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRr2DefaultTypeInternal _IrtsRr2_default_instance_;
PROTOBUF_CONSTEXPR IrtsRr3::IrtsRr3(
    ::_pbi::ConstantInitialized)
  : channel13_(0u)
  , channel14_(0u)
  , channel15_(0u)
  , channel16_(0u){}
struct IrtsRr3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrtsRr3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrtsRr3DefaultTypeInternal() {}
  union {
    IrtsRr3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrtsRr3DefaultTypeInternal _IrtsRr3_default_instance_;
PROTOBUF_CONSTEXPR GpsCoords::GpsCoords(
    ::_pbi::ConstantInitialized)
  : latitude_(0)
  , longitude_(0){}
struct GpsCoordsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsCoordsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsCoordsDefaultTypeInternal() {}
  union {
    GpsCoords _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsCoordsDefaultTypeInternal _GpsCoords_default_instance_;
PROTOBUF_CONSTEXPR GpsSpeed::GpsSpeed(
    ::_pbi::ConstantInitialized)
  : speed_(0u){}
struct GpsSpeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsSpeedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsSpeedDefaultTypeInternal() {}
  union {
    GpsSpeed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsSpeedDefaultTypeInternal _GpsSpeed_default_instance_;
PROTOBUF_CONSTEXPR LapCount::LapCount(
    ::_pbi::ConstantInitialized)
  : lap_count_(0u)
  , timestamp_(0u){}
struct LapCountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LapCountDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LapCountDefaultTypeInternal() {}
  union {
    LapCount _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LapCountDefaultTypeInternal _LapCount_default_instance_;
}  // namespace secondary
static ::_pb::Metadata file_level_metadata_secondary_2eproto[21];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_secondary_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_secondary_2eproto = nullptr;

const uint32_t TableStruct_secondary_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAngularRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAngularRate, ang_rate_x_),
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAngularRate, ang_rate_y_),
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAngularRate, ang_rate_z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAcceleration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAcceleration, accel_x_),
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAcceleration, accel_y_),
  PROTOBUF_FIELD_OFFSET(::secondary::ImuAcceleration, accel_z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl0, channel1_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl0, channel2_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl0, channel3_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl0, channel4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl1, channel5_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl1, channel6_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl1, channel7_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl1, channel8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl2, channel9_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl2, channel10_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl2, channel11_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl2, channel12_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl3, channel13_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl3, channel14_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl3, channel15_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFl3, channel16_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr0, channel1_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr0, channel2_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr0, channel3_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr0, channel4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr1, channel5_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr1, channel6_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr1, channel7_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr1, channel8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr2, channel9_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr2, channel10_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr2, channel11_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr2, channel12_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr3, channel13_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr3, channel14_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr3, channel15_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsFr3, channel16_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl0, channel1_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl0, channel2_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl0, channel3_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl0, channel4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl1, channel5_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl1, channel6_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl1, channel7_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl1, channel8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl2, channel9_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl2, channel10_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl2, channel11_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl2, channel12_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl3, channel13_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl3, channel14_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl3, channel15_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRl3, channel16_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr0, channel1_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr0, channel2_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr0, channel3_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr0, channel4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr1, channel5_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr1, channel6_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr1, channel7_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr1, channel8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr2, channel9_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr2, channel10_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr2, channel11_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr2, channel12_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr3, channel13_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr3, channel14_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr3, channel15_),
  PROTOBUF_FIELD_OFFSET(::secondary::IrtsRr3, channel16_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::GpsCoords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::GpsCoords, latitude_),
  PROTOBUF_FIELD_OFFSET(::secondary::GpsCoords, longitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::GpsSpeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::GpsSpeed, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::secondary::LapCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::secondary::LapCount, lap_count_),
  PROTOBUF_FIELD_OFFSET(::secondary::LapCount, timestamp_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::secondary::ImuAngularRate)},
  { 9, -1, -1, sizeof(::secondary::ImuAcceleration)},
  { 18, -1, -1, sizeof(::secondary::IrtsFl0)},
  { 28, -1, -1, sizeof(::secondary::IrtsFl1)},
  { 38, -1, -1, sizeof(::secondary::IrtsFl2)},
  { 48, -1, -1, sizeof(::secondary::IrtsFl3)},
  { 58, -1, -1, sizeof(::secondary::IrtsFr0)},
  { 68, -1, -1, sizeof(::secondary::IrtsFr1)},
  { 78, -1, -1, sizeof(::secondary::IrtsFr2)},
  { 88, -1, -1, sizeof(::secondary::IrtsFr3)},
  { 98, -1, -1, sizeof(::secondary::IrtsRl0)},
  { 108, -1, -1, sizeof(::secondary::IrtsRl1)},
  { 118, -1, -1, sizeof(::secondary::IrtsRl2)},
  { 128, -1, -1, sizeof(::secondary::IrtsRl3)},
  { 138, -1, -1, sizeof(::secondary::IrtsRr0)},
  { 148, -1, -1, sizeof(::secondary::IrtsRr1)},
  { 158, -1, -1, sizeof(::secondary::IrtsRr2)},
  { 168, -1, -1, sizeof(::secondary::IrtsRr3)},
  { 178, -1, -1, sizeof(::secondary::GpsCoords)},
  { 186, -1, -1, sizeof(::secondary::GpsSpeed)},
  { 193, -1, -1, sizeof(::secondary::LapCount)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::secondary::_ImuAngularRate_default_instance_._instance,
  &::secondary::_ImuAcceleration_default_instance_._instance,
  &::secondary::_IrtsFl0_default_instance_._instance,
  &::secondary::_IrtsFl1_default_instance_._instance,
  &::secondary::_IrtsFl2_default_instance_._instance,
  &::secondary::_IrtsFl3_default_instance_._instance,
  &::secondary::_IrtsFr0_default_instance_._instance,
  &::secondary::_IrtsFr1_default_instance_._instance,
  &::secondary::_IrtsFr2_default_instance_._instance,
  &::secondary::_IrtsFr3_default_instance_._instance,
  &::secondary::_IrtsRl0_default_instance_._instance,
  &::secondary::_IrtsRl1_default_instance_._instance,
  &::secondary::_IrtsRl2_default_instance_._instance,
  &::secondary::_IrtsRl3_default_instance_._instance,
  &::secondary::_IrtsRr0_default_instance_._instance,
  &::secondary::_IrtsRr1_default_instance_._instance,
  &::secondary::_IrtsRr2_default_instance_._instance,
  &::secondary::_IrtsRr3_default_instance_._instance,
  &::secondary::_GpsCoords_default_instance_._instance,
  &::secondary::_GpsSpeed_default_instance_._instance,
  &::secondary::_LapCount_default_instance_._instance,
};

const char descriptor_table_protodef_secondary_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017secondary.proto\022\tsecondary\"L\n\016ImuAngul"
  "arRate\022\022\n\nang_rate_x\030\001 \001(\r\022\022\n\nang_rate_y"
  "\030\002 \001(\r\022\022\n\nang_rate_z\030\003 \001(\r\"D\n\017ImuAcceler"
  "ation\022\017\n\007accel_x\030\001 \001(\r\022\017\n\007accel_y\030\002 \001(\r\022"
  "\017\n\007accel_z\030\003 \001(\r\"Q\n\007IrtsFl0\022\020\n\010channel1\030"
  "\001 \001(\r\022\020\n\010channel2\030\002 \001(\r\022\020\n\010channel3\030\003 \001("
  "\r\022\020\n\010channel4\030\004 \001(\r\"Q\n\007IrtsFl1\022\020\n\010channe"
  "l5\030\001 \001(\r\022\020\n\010channel6\030\002 \001(\r\022\020\n\010channel7\030\003"
  " \001(\r\022\020\n\010channel8\030\004 \001(\r\"T\n\007IrtsFl2\022\020\n\010cha"
  "nnel9\030\001 \001(\r\022\021\n\tchannel10\030\002 \001(\r\022\021\n\tchanne"
  "l11\030\003 \001(\r\022\021\n\tchannel12\030\004 \001(\r\"U\n\007IrtsFl3\022"
  "\021\n\tchannel13\030\001 \001(\r\022\021\n\tchannel14\030\002 \001(\r\022\021\n"
  "\tchannel15\030\003 \001(\r\022\021\n\tchannel16\030\004 \001(\r\"Q\n\007I"
  "rtsFr0\022\020\n\010channel1\030\001 \001(\r\022\020\n\010channel2\030\002 \001"
  "(\r\022\020\n\010channel3\030\003 \001(\r\022\020\n\010channel4\030\004 \001(\r\"Q"
  "\n\007IrtsFr1\022\020\n\010channel5\030\001 \001(\r\022\020\n\010channel6\030"
  "\002 \001(\r\022\020\n\010channel7\030\003 \001(\r\022\020\n\010channel8\030\004 \001("
  "\r\"T\n\007IrtsFr2\022\020\n\010channel9\030\001 \001(\r\022\021\n\tchanne"
  "l10\030\002 \001(\r\022\021\n\tchannel11\030\003 \001(\r\022\021\n\tchannel1"
  "2\030\004 \001(\r\"U\n\007IrtsFr3\022\021\n\tchannel13\030\001 \001(\r\022\021\n"
  "\tchannel14\030\002 \001(\r\022\021\n\tchannel15\030\003 \001(\r\022\021\n\tc"
  "hannel16\030\004 \001(\r\"Q\n\007IrtsRl0\022\020\n\010channel1\030\001 "
  "\001(\r\022\020\n\010channel2\030\002 \001(\r\022\020\n\010channel3\030\003 \001(\r\022"
  "\020\n\010channel4\030\004 \001(\r\"Q\n\007IrtsRl1\022\020\n\010channel5"
  "\030\001 \001(\r\022\020\n\010channel6\030\002 \001(\r\022\020\n\010channel7\030\003 \001"
  "(\r\022\020\n\010channel8\030\004 \001(\r\"T\n\007IrtsRl2\022\020\n\010chann"
  "el9\030\001 \001(\r\022\021\n\tchannel10\030\002 \001(\r\022\021\n\tchannel1"
  "1\030\003 \001(\r\022\021\n\tchannel12\030\004 \001(\r\"U\n\007IrtsRl3\022\021\n"
  "\tchannel13\030\001 \001(\r\022\021\n\tchannel14\030\002 \001(\r\022\021\n\tc"
  "hannel15\030\003 \001(\r\022\021\n\tchannel16\030\004 \001(\r\"Q\n\007Irt"
  "sRr0\022\020\n\010channel1\030\001 \001(\r\022\020\n\010channel2\030\002 \001(\r"
  "\022\020\n\010channel3\030\003 \001(\r\022\020\n\010channel4\030\004 \001(\r\"Q\n\007"
  "IrtsRr1\022\020\n\010channel5\030\001 \001(\r\022\020\n\010channel6\030\002 "
  "\001(\r\022\020\n\010channel7\030\003 \001(\r\022\020\n\010channel8\030\004 \001(\r\""
  "T\n\007IrtsRr2\022\020\n\010channel9\030\001 \001(\r\022\021\n\tchannel1"
  "0\030\002 \001(\r\022\021\n\tchannel11\030\003 \001(\r\022\021\n\tchannel12\030"
  "\004 \001(\r\"U\n\007IrtsRr3\022\021\n\tchannel13\030\001 \001(\r\022\021\n\tc"
  "hannel14\030\002 \001(\r\022\021\n\tchannel15\030\003 \001(\r\022\021\n\tcha"
  "nnel16\030\004 \001(\r\"0\n\tGpsCoords\022\020\n\010latitude\030\001 "
  "\001(\002\022\021\n\tlongitude\030\002 \001(\002\"\031\n\010GpsSpeed\022\r\n\005sp"
  "eed\030\001 \001(\r\"0\n\010LapCount\022\021\n\tlap_count\030\001 \001(\r"
  "\022\021\n\ttimestamp\030\002 \001(\rb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_secondary_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_secondary_2eproto = {
    false, false, 1667, descriptor_table_protodef_secondary_2eproto,
    "secondary.proto",
    &descriptor_table_secondary_2eproto_once, nullptr, 0, 21,
    schemas, file_default_instances, TableStruct_secondary_2eproto::offsets,
    file_level_metadata_secondary_2eproto, file_level_enum_descriptors_secondary_2eproto,
    file_level_service_descriptors_secondary_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_secondary_2eproto_getter() {
  return &descriptor_table_secondary_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_secondary_2eproto(&descriptor_table_secondary_2eproto);
namespace secondary {

// ===================================================================

class ImuAngularRate::_Internal {
 public:
};

ImuAngularRate::ImuAngularRate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.ImuAngularRate)
}
ImuAngularRate::ImuAngularRate(const ImuAngularRate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ang_rate_x_, &from.ang_rate_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&ang_rate_z_) -
    reinterpret_cast<char*>(&ang_rate_x_)) + sizeof(ang_rate_z_));
  // @@protoc_insertion_point(copy_constructor:secondary.ImuAngularRate)
}

inline void ImuAngularRate::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ang_rate_x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ang_rate_z_) -
    reinterpret_cast<char*>(&ang_rate_x_)) + sizeof(ang_rate_z_));
}

ImuAngularRate::~ImuAngularRate() {
  // @@protoc_insertion_point(destructor:secondary.ImuAngularRate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImuAngularRate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ImuAngularRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ImuAngularRate::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.ImuAngularRate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ang_rate_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ang_rate_z_) -
      reinterpret_cast<char*>(&ang_rate_x_)) + sizeof(ang_rate_z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImuAngularRate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ang_rate_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ang_rate_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ang_rate_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ang_rate_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ang_rate_z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ang_rate_z_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImuAngularRate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.ImuAngularRate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ang_rate_x = 1;
  if (this->_internal_ang_rate_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ang_rate_x(), target);
  }

  // uint32 ang_rate_y = 2;
  if (this->_internal_ang_rate_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ang_rate_y(), target);
  }

  // uint32 ang_rate_z = 3;
  if (this->_internal_ang_rate_z() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ang_rate_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.ImuAngularRate)
  return target;
}

size_t ImuAngularRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.ImuAngularRate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 ang_rate_x = 1;
  if (this->_internal_ang_rate_x() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ang_rate_x());
  }

  // uint32 ang_rate_y = 2;
  if (this->_internal_ang_rate_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ang_rate_y());
  }

  // uint32 ang_rate_z = 3;
  if (this->_internal_ang_rate_z() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ang_rate_z());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImuAngularRate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ImuAngularRate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImuAngularRate::GetClassData() const { return &_class_data_; }

void ImuAngularRate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ImuAngularRate *>(to)->MergeFrom(
      static_cast<const ImuAngularRate &>(from));
}


void ImuAngularRate::MergeFrom(const ImuAngularRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.ImuAngularRate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ang_rate_x() != 0) {
    _internal_set_ang_rate_x(from._internal_ang_rate_x());
  }
  if (from._internal_ang_rate_y() != 0) {
    _internal_set_ang_rate_y(from._internal_ang_rate_y());
  }
  if (from._internal_ang_rate_z() != 0) {
    _internal_set_ang_rate_z(from._internal_ang_rate_z());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImuAngularRate::CopyFrom(const ImuAngularRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.ImuAngularRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImuAngularRate::IsInitialized() const {
  return true;
}

void ImuAngularRate::InternalSwap(ImuAngularRate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImuAngularRate, ang_rate_z_)
      + sizeof(ImuAngularRate::ang_rate_z_)
      - PROTOBUF_FIELD_OFFSET(ImuAngularRate, ang_rate_x_)>(
          reinterpret_cast<char*>(&ang_rate_x_),
          reinterpret_cast<char*>(&other->ang_rate_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImuAngularRate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[0]);
}

// ===================================================================

class ImuAcceleration::_Internal {
 public:
};

ImuAcceleration::ImuAcceleration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.ImuAcceleration)
}
ImuAcceleration::ImuAcceleration(const ImuAcceleration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accel_x_, &from.accel_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&accel_z_) -
    reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
  // @@protoc_insertion_point(copy_constructor:secondary.ImuAcceleration)
}

inline void ImuAcceleration::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&accel_x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&accel_z_) -
    reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
}

ImuAcceleration::~ImuAcceleration() {
  // @@protoc_insertion_point(destructor:secondary.ImuAcceleration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImuAcceleration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ImuAcceleration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ImuAcceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.ImuAcceleration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accel_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accel_z_) -
      reinterpret_cast<char*>(&accel_x_)) + sizeof(accel_z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImuAcceleration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 accel_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          accel_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 accel_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          accel_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 accel_z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          accel_z_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImuAcceleration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.ImuAcceleration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 accel_x = 1;
  if (this->_internal_accel_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_accel_x(), target);
  }

  // uint32 accel_y = 2;
  if (this->_internal_accel_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_accel_y(), target);
  }

  // uint32 accel_z = 3;
  if (this->_internal_accel_z() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_accel_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.ImuAcceleration)
  return target;
}

size_t ImuAcceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.ImuAcceleration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 accel_x = 1;
  if (this->_internal_accel_x() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_accel_x());
  }

  // uint32 accel_y = 2;
  if (this->_internal_accel_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_accel_y());
  }

  // uint32 accel_z = 3;
  if (this->_internal_accel_z() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_accel_z());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImuAcceleration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ImuAcceleration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImuAcceleration::GetClassData() const { return &_class_data_; }

void ImuAcceleration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ImuAcceleration *>(to)->MergeFrom(
      static_cast<const ImuAcceleration &>(from));
}


void ImuAcceleration::MergeFrom(const ImuAcceleration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.ImuAcceleration)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_accel_x() != 0) {
    _internal_set_accel_x(from._internal_accel_x());
  }
  if (from._internal_accel_y() != 0) {
    _internal_set_accel_y(from._internal_accel_y());
  }
  if (from._internal_accel_z() != 0) {
    _internal_set_accel_z(from._internal_accel_z());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImuAcceleration::CopyFrom(const ImuAcceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.ImuAcceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImuAcceleration::IsInitialized() const {
  return true;
}

void ImuAcceleration::InternalSwap(ImuAcceleration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImuAcceleration, accel_z_)
      + sizeof(ImuAcceleration::accel_z_)
      - PROTOBUF_FIELD_OFFSET(ImuAcceleration, accel_x_)>(
          reinterpret_cast<char*>(&accel_x_),
          reinterpret_cast<char*>(&other->accel_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImuAcceleration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[1]);
}

// ===================================================================

class IrtsFl0::_Internal {
 public:
};

IrtsFl0::IrtsFl0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFl0)
}
IrtsFl0::IrtsFl0(const IrtsFl0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel1_, &from.channel1_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFl0)
}

inline void IrtsFl0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
}

IrtsFl0::~IrtsFl0() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFl0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFl0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFl0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFl0::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFl0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel4_) -
      reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFl0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFl0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFl0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel1(), target);
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel2(), target);
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel3(), target);
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFl0)
  return target;
}

size_t IrtsFl0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFl0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel1());
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel2());
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel3());
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFl0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFl0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFl0::GetClassData() const { return &_class_data_; }

void IrtsFl0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFl0 *>(to)->MergeFrom(
      static_cast<const IrtsFl0 &>(from));
}


void IrtsFl0::MergeFrom(const IrtsFl0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFl0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel1() != 0) {
    _internal_set_channel1(from._internal_channel1());
  }
  if (from._internal_channel2() != 0) {
    _internal_set_channel2(from._internal_channel2());
  }
  if (from._internal_channel3() != 0) {
    _internal_set_channel3(from._internal_channel3());
  }
  if (from._internal_channel4() != 0) {
    _internal_set_channel4(from._internal_channel4());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFl0::CopyFrom(const IrtsFl0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFl0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFl0::IsInitialized() const {
  return true;
}

void IrtsFl0::InternalSwap(IrtsFl0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFl0, channel4_)
      + sizeof(IrtsFl0::channel4_)
      - PROTOBUF_FIELD_OFFSET(IrtsFl0, channel1_)>(
          reinterpret_cast<char*>(&channel1_),
          reinterpret_cast<char*>(&other->channel1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFl0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[2]);
}

// ===================================================================

class IrtsFl1::_Internal {
 public:
};

IrtsFl1::IrtsFl1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFl1)
}
IrtsFl1::IrtsFl1(const IrtsFl1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel5_, &from.channel5_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFl1)
}

inline void IrtsFl1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel5_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
}

IrtsFl1::~IrtsFl1() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFl1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFl1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFl1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFl1::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFl1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel8_) -
      reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFl1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel5 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel6 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel7 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel8 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFl1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFl1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel5(), target);
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel6(), target);
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel7(), target);
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFl1)
  return target;
}

size_t IrtsFl1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFl1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel5());
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel6());
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel7());
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFl1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFl1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFl1::GetClassData() const { return &_class_data_; }

void IrtsFl1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFl1 *>(to)->MergeFrom(
      static_cast<const IrtsFl1 &>(from));
}


void IrtsFl1::MergeFrom(const IrtsFl1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFl1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel5() != 0) {
    _internal_set_channel5(from._internal_channel5());
  }
  if (from._internal_channel6() != 0) {
    _internal_set_channel6(from._internal_channel6());
  }
  if (from._internal_channel7() != 0) {
    _internal_set_channel7(from._internal_channel7());
  }
  if (from._internal_channel8() != 0) {
    _internal_set_channel8(from._internal_channel8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFl1::CopyFrom(const IrtsFl1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFl1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFl1::IsInitialized() const {
  return true;
}

void IrtsFl1::InternalSwap(IrtsFl1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFl1, channel8_)
      + sizeof(IrtsFl1::channel8_)
      - PROTOBUF_FIELD_OFFSET(IrtsFl1, channel5_)>(
          reinterpret_cast<char*>(&channel5_),
          reinterpret_cast<char*>(&other->channel5_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFl1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[3]);
}

// ===================================================================

class IrtsFl2::_Internal {
 public:
};

IrtsFl2::IrtsFl2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFl2)
}
IrtsFl2::IrtsFl2(const IrtsFl2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel9_, &from.channel9_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFl2)
}

inline void IrtsFl2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel9_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
}

IrtsFl2::~IrtsFl2() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFl2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFl2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFl2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFl2::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFl2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel12_) -
      reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFl2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel9 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel9_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel10 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel11 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel12 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFl2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFl2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel9(), target);
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel10(), target);
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel11(), target);
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel12(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFl2)
  return target;
}

size_t IrtsFl2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFl2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel9());
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel10());
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel11());
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel12());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFl2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFl2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFl2::GetClassData() const { return &_class_data_; }

void IrtsFl2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFl2 *>(to)->MergeFrom(
      static_cast<const IrtsFl2 &>(from));
}


void IrtsFl2::MergeFrom(const IrtsFl2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFl2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel9() != 0) {
    _internal_set_channel9(from._internal_channel9());
  }
  if (from._internal_channel10() != 0) {
    _internal_set_channel10(from._internal_channel10());
  }
  if (from._internal_channel11() != 0) {
    _internal_set_channel11(from._internal_channel11());
  }
  if (from._internal_channel12() != 0) {
    _internal_set_channel12(from._internal_channel12());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFl2::CopyFrom(const IrtsFl2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFl2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFl2::IsInitialized() const {
  return true;
}

void IrtsFl2::InternalSwap(IrtsFl2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFl2, channel12_)
      + sizeof(IrtsFl2::channel12_)
      - PROTOBUF_FIELD_OFFSET(IrtsFl2, channel9_)>(
          reinterpret_cast<char*>(&channel9_),
          reinterpret_cast<char*>(&other->channel9_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFl2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[4]);
}

// ===================================================================

class IrtsFl3::_Internal {
 public:
};

IrtsFl3::IrtsFl3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFl3)
}
IrtsFl3::IrtsFl3(const IrtsFl3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel13_, &from.channel13_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFl3)
}

inline void IrtsFl3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel13_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
}

IrtsFl3::~IrtsFl3() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFl3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFl3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFl3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFl3::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFl3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel13_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel16_) -
      reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFl3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel13 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel14 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel15 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel16 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFl3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFl3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel13(), target);
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel14(), target);
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel15(), target);
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel16(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFl3)
  return target;
}

size_t IrtsFl3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFl3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel13());
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel14());
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel15());
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel16());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFl3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFl3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFl3::GetClassData() const { return &_class_data_; }

void IrtsFl3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFl3 *>(to)->MergeFrom(
      static_cast<const IrtsFl3 &>(from));
}


void IrtsFl3::MergeFrom(const IrtsFl3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFl3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel13() != 0) {
    _internal_set_channel13(from._internal_channel13());
  }
  if (from._internal_channel14() != 0) {
    _internal_set_channel14(from._internal_channel14());
  }
  if (from._internal_channel15() != 0) {
    _internal_set_channel15(from._internal_channel15());
  }
  if (from._internal_channel16() != 0) {
    _internal_set_channel16(from._internal_channel16());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFl3::CopyFrom(const IrtsFl3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFl3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFl3::IsInitialized() const {
  return true;
}

void IrtsFl3::InternalSwap(IrtsFl3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFl3, channel16_)
      + sizeof(IrtsFl3::channel16_)
      - PROTOBUF_FIELD_OFFSET(IrtsFl3, channel13_)>(
          reinterpret_cast<char*>(&channel13_),
          reinterpret_cast<char*>(&other->channel13_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFl3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[5]);
}

// ===================================================================

class IrtsFr0::_Internal {
 public:
};

IrtsFr0::IrtsFr0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFr0)
}
IrtsFr0::IrtsFr0(const IrtsFr0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel1_, &from.channel1_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFr0)
}

inline void IrtsFr0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
}

IrtsFr0::~IrtsFr0() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFr0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFr0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFr0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFr0::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFr0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel4_) -
      reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFr0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFr0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFr0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel1(), target);
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel2(), target);
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel3(), target);
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFr0)
  return target;
}

size_t IrtsFr0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFr0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel1());
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel2());
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel3());
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFr0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFr0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFr0::GetClassData() const { return &_class_data_; }

void IrtsFr0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFr0 *>(to)->MergeFrom(
      static_cast<const IrtsFr0 &>(from));
}


void IrtsFr0::MergeFrom(const IrtsFr0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFr0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel1() != 0) {
    _internal_set_channel1(from._internal_channel1());
  }
  if (from._internal_channel2() != 0) {
    _internal_set_channel2(from._internal_channel2());
  }
  if (from._internal_channel3() != 0) {
    _internal_set_channel3(from._internal_channel3());
  }
  if (from._internal_channel4() != 0) {
    _internal_set_channel4(from._internal_channel4());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFr0::CopyFrom(const IrtsFr0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFr0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFr0::IsInitialized() const {
  return true;
}

void IrtsFr0::InternalSwap(IrtsFr0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFr0, channel4_)
      + sizeof(IrtsFr0::channel4_)
      - PROTOBUF_FIELD_OFFSET(IrtsFr0, channel1_)>(
          reinterpret_cast<char*>(&channel1_),
          reinterpret_cast<char*>(&other->channel1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFr0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[6]);
}

// ===================================================================

class IrtsFr1::_Internal {
 public:
};

IrtsFr1::IrtsFr1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFr1)
}
IrtsFr1::IrtsFr1(const IrtsFr1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel5_, &from.channel5_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFr1)
}

inline void IrtsFr1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel5_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
}

IrtsFr1::~IrtsFr1() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFr1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFr1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFr1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFr1::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFr1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel8_) -
      reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFr1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel5 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel6 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel7 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel8 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFr1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFr1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel5(), target);
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel6(), target);
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel7(), target);
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFr1)
  return target;
}

size_t IrtsFr1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFr1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel5());
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel6());
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel7());
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFr1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFr1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFr1::GetClassData() const { return &_class_data_; }

void IrtsFr1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFr1 *>(to)->MergeFrom(
      static_cast<const IrtsFr1 &>(from));
}


void IrtsFr1::MergeFrom(const IrtsFr1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFr1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel5() != 0) {
    _internal_set_channel5(from._internal_channel5());
  }
  if (from._internal_channel6() != 0) {
    _internal_set_channel6(from._internal_channel6());
  }
  if (from._internal_channel7() != 0) {
    _internal_set_channel7(from._internal_channel7());
  }
  if (from._internal_channel8() != 0) {
    _internal_set_channel8(from._internal_channel8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFr1::CopyFrom(const IrtsFr1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFr1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFr1::IsInitialized() const {
  return true;
}

void IrtsFr1::InternalSwap(IrtsFr1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFr1, channel8_)
      + sizeof(IrtsFr1::channel8_)
      - PROTOBUF_FIELD_OFFSET(IrtsFr1, channel5_)>(
          reinterpret_cast<char*>(&channel5_),
          reinterpret_cast<char*>(&other->channel5_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFr1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[7]);
}

// ===================================================================

class IrtsFr2::_Internal {
 public:
};

IrtsFr2::IrtsFr2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFr2)
}
IrtsFr2::IrtsFr2(const IrtsFr2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel9_, &from.channel9_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFr2)
}

inline void IrtsFr2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel9_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
}

IrtsFr2::~IrtsFr2() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFr2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFr2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFr2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFr2::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFr2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel12_) -
      reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFr2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel9 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel9_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel10 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel11 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel12 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFr2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFr2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel9(), target);
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel10(), target);
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel11(), target);
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel12(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFr2)
  return target;
}

size_t IrtsFr2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFr2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel9());
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel10());
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel11());
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel12());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFr2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFr2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFr2::GetClassData() const { return &_class_data_; }

void IrtsFr2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFr2 *>(to)->MergeFrom(
      static_cast<const IrtsFr2 &>(from));
}


void IrtsFr2::MergeFrom(const IrtsFr2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFr2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel9() != 0) {
    _internal_set_channel9(from._internal_channel9());
  }
  if (from._internal_channel10() != 0) {
    _internal_set_channel10(from._internal_channel10());
  }
  if (from._internal_channel11() != 0) {
    _internal_set_channel11(from._internal_channel11());
  }
  if (from._internal_channel12() != 0) {
    _internal_set_channel12(from._internal_channel12());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFr2::CopyFrom(const IrtsFr2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFr2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFr2::IsInitialized() const {
  return true;
}

void IrtsFr2::InternalSwap(IrtsFr2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFr2, channel12_)
      + sizeof(IrtsFr2::channel12_)
      - PROTOBUF_FIELD_OFFSET(IrtsFr2, channel9_)>(
          reinterpret_cast<char*>(&channel9_),
          reinterpret_cast<char*>(&other->channel9_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFr2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[8]);
}

// ===================================================================

class IrtsFr3::_Internal {
 public:
};

IrtsFr3::IrtsFr3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsFr3)
}
IrtsFr3::IrtsFr3(const IrtsFr3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel13_, &from.channel13_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsFr3)
}

inline void IrtsFr3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel13_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
}

IrtsFr3::~IrtsFr3() {
  // @@protoc_insertion_point(destructor:secondary.IrtsFr3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsFr3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsFr3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsFr3::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsFr3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel13_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel16_) -
      reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsFr3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel13 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel14 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel15 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel16 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsFr3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsFr3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel13(), target);
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel14(), target);
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel15(), target);
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel16(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsFr3)
  return target;
}

size_t IrtsFr3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsFr3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel13());
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel14());
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel15());
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel16());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsFr3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsFr3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsFr3::GetClassData() const { return &_class_data_; }

void IrtsFr3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsFr3 *>(to)->MergeFrom(
      static_cast<const IrtsFr3 &>(from));
}


void IrtsFr3::MergeFrom(const IrtsFr3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsFr3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel13() != 0) {
    _internal_set_channel13(from._internal_channel13());
  }
  if (from._internal_channel14() != 0) {
    _internal_set_channel14(from._internal_channel14());
  }
  if (from._internal_channel15() != 0) {
    _internal_set_channel15(from._internal_channel15());
  }
  if (from._internal_channel16() != 0) {
    _internal_set_channel16(from._internal_channel16());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsFr3::CopyFrom(const IrtsFr3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsFr3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsFr3::IsInitialized() const {
  return true;
}

void IrtsFr3::InternalSwap(IrtsFr3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsFr3, channel16_)
      + sizeof(IrtsFr3::channel16_)
      - PROTOBUF_FIELD_OFFSET(IrtsFr3, channel13_)>(
          reinterpret_cast<char*>(&channel13_),
          reinterpret_cast<char*>(&other->channel13_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsFr3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[9]);
}

// ===================================================================

class IrtsRl0::_Internal {
 public:
};

IrtsRl0::IrtsRl0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRl0)
}
IrtsRl0::IrtsRl0(const IrtsRl0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel1_, &from.channel1_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRl0)
}

inline void IrtsRl0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
}

IrtsRl0::~IrtsRl0() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRl0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRl0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRl0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRl0::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRl0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel4_) -
      reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRl0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRl0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRl0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel1(), target);
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel2(), target);
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel3(), target);
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRl0)
  return target;
}

size_t IrtsRl0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRl0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel1());
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel2());
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel3());
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRl0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRl0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRl0::GetClassData() const { return &_class_data_; }

void IrtsRl0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRl0 *>(to)->MergeFrom(
      static_cast<const IrtsRl0 &>(from));
}


void IrtsRl0::MergeFrom(const IrtsRl0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRl0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel1() != 0) {
    _internal_set_channel1(from._internal_channel1());
  }
  if (from._internal_channel2() != 0) {
    _internal_set_channel2(from._internal_channel2());
  }
  if (from._internal_channel3() != 0) {
    _internal_set_channel3(from._internal_channel3());
  }
  if (from._internal_channel4() != 0) {
    _internal_set_channel4(from._internal_channel4());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRl0::CopyFrom(const IrtsRl0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRl0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRl0::IsInitialized() const {
  return true;
}

void IrtsRl0::InternalSwap(IrtsRl0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRl0, channel4_)
      + sizeof(IrtsRl0::channel4_)
      - PROTOBUF_FIELD_OFFSET(IrtsRl0, channel1_)>(
          reinterpret_cast<char*>(&channel1_),
          reinterpret_cast<char*>(&other->channel1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRl0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[10]);
}

// ===================================================================

class IrtsRl1::_Internal {
 public:
};

IrtsRl1::IrtsRl1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRl1)
}
IrtsRl1::IrtsRl1(const IrtsRl1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel5_, &from.channel5_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRl1)
}

inline void IrtsRl1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel5_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
}

IrtsRl1::~IrtsRl1() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRl1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRl1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRl1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRl1::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRl1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel8_) -
      reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRl1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel5 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel6 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel7 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel8 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRl1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRl1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel5(), target);
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel6(), target);
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel7(), target);
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRl1)
  return target;
}

size_t IrtsRl1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRl1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel5());
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel6());
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel7());
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRl1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRl1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRl1::GetClassData() const { return &_class_data_; }

void IrtsRl1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRl1 *>(to)->MergeFrom(
      static_cast<const IrtsRl1 &>(from));
}


void IrtsRl1::MergeFrom(const IrtsRl1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRl1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel5() != 0) {
    _internal_set_channel5(from._internal_channel5());
  }
  if (from._internal_channel6() != 0) {
    _internal_set_channel6(from._internal_channel6());
  }
  if (from._internal_channel7() != 0) {
    _internal_set_channel7(from._internal_channel7());
  }
  if (from._internal_channel8() != 0) {
    _internal_set_channel8(from._internal_channel8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRl1::CopyFrom(const IrtsRl1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRl1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRl1::IsInitialized() const {
  return true;
}

void IrtsRl1::InternalSwap(IrtsRl1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRl1, channel8_)
      + sizeof(IrtsRl1::channel8_)
      - PROTOBUF_FIELD_OFFSET(IrtsRl1, channel5_)>(
          reinterpret_cast<char*>(&channel5_),
          reinterpret_cast<char*>(&other->channel5_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRl1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[11]);
}

// ===================================================================

class IrtsRl2::_Internal {
 public:
};

IrtsRl2::IrtsRl2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRl2)
}
IrtsRl2::IrtsRl2(const IrtsRl2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel9_, &from.channel9_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRl2)
}

inline void IrtsRl2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel9_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
}

IrtsRl2::~IrtsRl2() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRl2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRl2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRl2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRl2::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRl2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel12_) -
      reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRl2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel9 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel9_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel10 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel11 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel12 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRl2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRl2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel9(), target);
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel10(), target);
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel11(), target);
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel12(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRl2)
  return target;
}

size_t IrtsRl2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRl2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel9());
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel10());
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel11());
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel12());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRl2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRl2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRl2::GetClassData() const { return &_class_data_; }

void IrtsRl2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRl2 *>(to)->MergeFrom(
      static_cast<const IrtsRl2 &>(from));
}


void IrtsRl2::MergeFrom(const IrtsRl2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRl2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel9() != 0) {
    _internal_set_channel9(from._internal_channel9());
  }
  if (from._internal_channel10() != 0) {
    _internal_set_channel10(from._internal_channel10());
  }
  if (from._internal_channel11() != 0) {
    _internal_set_channel11(from._internal_channel11());
  }
  if (from._internal_channel12() != 0) {
    _internal_set_channel12(from._internal_channel12());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRl2::CopyFrom(const IrtsRl2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRl2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRl2::IsInitialized() const {
  return true;
}

void IrtsRl2::InternalSwap(IrtsRl2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRl2, channel12_)
      + sizeof(IrtsRl2::channel12_)
      - PROTOBUF_FIELD_OFFSET(IrtsRl2, channel9_)>(
          reinterpret_cast<char*>(&channel9_),
          reinterpret_cast<char*>(&other->channel9_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRl2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[12]);
}

// ===================================================================

class IrtsRl3::_Internal {
 public:
};

IrtsRl3::IrtsRl3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRl3)
}
IrtsRl3::IrtsRl3(const IrtsRl3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel13_, &from.channel13_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRl3)
}

inline void IrtsRl3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel13_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
}

IrtsRl3::~IrtsRl3() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRl3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRl3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRl3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRl3::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRl3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel13_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel16_) -
      reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRl3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel13 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel14 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel15 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel16 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRl3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRl3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel13(), target);
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel14(), target);
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel15(), target);
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel16(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRl3)
  return target;
}

size_t IrtsRl3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRl3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel13());
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel14());
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel15());
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel16());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRl3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRl3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRl3::GetClassData() const { return &_class_data_; }

void IrtsRl3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRl3 *>(to)->MergeFrom(
      static_cast<const IrtsRl3 &>(from));
}


void IrtsRl3::MergeFrom(const IrtsRl3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRl3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel13() != 0) {
    _internal_set_channel13(from._internal_channel13());
  }
  if (from._internal_channel14() != 0) {
    _internal_set_channel14(from._internal_channel14());
  }
  if (from._internal_channel15() != 0) {
    _internal_set_channel15(from._internal_channel15());
  }
  if (from._internal_channel16() != 0) {
    _internal_set_channel16(from._internal_channel16());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRl3::CopyFrom(const IrtsRl3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRl3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRl3::IsInitialized() const {
  return true;
}

void IrtsRl3::InternalSwap(IrtsRl3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRl3, channel16_)
      + sizeof(IrtsRl3::channel16_)
      - PROTOBUF_FIELD_OFFSET(IrtsRl3, channel13_)>(
          reinterpret_cast<char*>(&channel13_),
          reinterpret_cast<char*>(&other->channel13_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRl3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[13]);
}

// ===================================================================

class IrtsRr0::_Internal {
 public:
};

IrtsRr0::IrtsRr0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRr0)
}
IrtsRr0::IrtsRr0(const IrtsRr0& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel1_, &from.channel1_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRr0)
}

inline void IrtsRr0::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel4_) -
    reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
}

IrtsRr0::~IrtsRr0() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRr0)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRr0::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRr0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRr0::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRr0)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel4_) -
      reinterpret_cast<char*>(&channel1_)) + sizeof(channel4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRr0::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRr0::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRr0)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel1(), target);
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel2(), target);
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel3(), target);
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRr0)
  return target;
}

size_t IrtsRr0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRr0)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel1 = 1;
  if (this->_internal_channel1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel1());
  }

  // uint32 channel2 = 2;
  if (this->_internal_channel2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel2());
  }

  // uint32 channel3 = 3;
  if (this->_internal_channel3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel3());
  }

  // uint32 channel4 = 4;
  if (this->_internal_channel4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRr0::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRr0::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRr0::GetClassData() const { return &_class_data_; }

void IrtsRr0::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRr0 *>(to)->MergeFrom(
      static_cast<const IrtsRr0 &>(from));
}


void IrtsRr0::MergeFrom(const IrtsRr0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRr0)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel1() != 0) {
    _internal_set_channel1(from._internal_channel1());
  }
  if (from._internal_channel2() != 0) {
    _internal_set_channel2(from._internal_channel2());
  }
  if (from._internal_channel3() != 0) {
    _internal_set_channel3(from._internal_channel3());
  }
  if (from._internal_channel4() != 0) {
    _internal_set_channel4(from._internal_channel4());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRr0::CopyFrom(const IrtsRr0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRr0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRr0::IsInitialized() const {
  return true;
}

void IrtsRr0::InternalSwap(IrtsRr0* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRr0, channel4_)
      + sizeof(IrtsRr0::channel4_)
      - PROTOBUF_FIELD_OFFSET(IrtsRr0, channel1_)>(
          reinterpret_cast<char*>(&channel1_),
          reinterpret_cast<char*>(&other->channel1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRr0::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[14]);
}

// ===================================================================

class IrtsRr1::_Internal {
 public:
};

IrtsRr1::IrtsRr1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRr1)
}
IrtsRr1::IrtsRr1(const IrtsRr1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel5_, &from.channel5_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRr1)
}

inline void IrtsRr1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel5_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel8_) -
    reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
}

IrtsRr1::~IrtsRr1() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRr1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRr1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRr1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRr1::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRr1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel8_) -
      reinterpret_cast<char*>(&channel5_)) + sizeof(channel8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRr1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel5 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel6 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel7 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel8 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRr1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRr1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel5(), target);
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel6(), target);
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel7(), target);
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRr1)
  return target;
}

size_t IrtsRr1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRr1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel5 = 1;
  if (this->_internal_channel5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel5());
  }

  // uint32 channel6 = 2;
  if (this->_internal_channel6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel6());
  }

  // uint32 channel7 = 3;
  if (this->_internal_channel7() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel7());
  }

  // uint32 channel8 = 4;
  if (this->_internal_channel8() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRr1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRr1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRr1::GetClassData() const { return &_class_data_; }

void IrtsRr1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRr1 *>(to)->MergeFrom(
      static_cast<const IrtsRr1 &>(from));
}


void IrtsRr1::MergeFrom(const IrtsRr1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRr1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel5() != 0) {
    _internal_set_channel5(from._internal_channel5());
  }
  if (from._internal_channel6() != 0) {
    _internal_set_channel6(from._internal_channel6());
  }
  if (from._internal_channel7() != 0) {
    _internal_set_channel7(from._internal_channel7());
  }
  if (from._internal_channel8() != 0) {
    _internal_set_channel8(from._internal_channel8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRr1::CopyFrom(const IrtsRr1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRr1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRr1::IsInitialized() const {
  return true;
}

void IrtsRr1::InternalSwap(IrtsRr1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRr1, channel8_)
      + sizeof(IrtsRr1::channel8_)
      - PROTOBUF_FIELD_OFFSET(IrtsRr1, channel5_)>(
          reinterpret_cast<char*>(&channel5_),
          reinterpret_cast<char*>(&other->channel5_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRr1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[15]);
}

// ===================================================================

class IrtsRr2::_Internal {
 public:
};

IrtsRr2::IrtsRr2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRr2)
}
IrtsRr2::IrtsRr2(const IrtsRr2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel9_, &from.channel9_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRr2)
}

inline void IrtsRr2::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel9_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel12_) -
    reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
}

IrtsRr2::~IrtsRr2() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRr2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRr2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRr2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRr2::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRr2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel9_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel12_) -
      reinterpret_cast<char*>(&channel9_)) + sizeof(channel12_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRr2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel9 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel9_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel10 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel11 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel12 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRr2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRr2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel9(), target);
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel10(), target);
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel11(), target);
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel12(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRr2)
  return target;
}

size_t IrtsRr2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRr2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel9 = 1;
  if (this->_internal_channel9() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel9());
  }

  // uint32 channel10 = 2;
  if (this->_internal_channel10() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel10());
  }

  // uint32 channel11 = 3;
  if (this->_internal_channel11() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel11());
  }

  // uint32 channel12 = 4;
  if (this->_internal_channel12() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel12());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRr2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRr2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRr2::GetClassData() const { return &_class_data_; }

void IrtsRr2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRr2 *>(to)->MergeFrom(
      static_cast<const IrtsRr2 &>(from));
}


void IrtsRr2::MergeFrom(const IrtsRr2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRr2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel9() != 0) {
    _internal_set_channel9(from._internal_channel9());
  }
  if (from._internal_channel10() != 0) {
    _internal_set_channel10(from._internal_channel10());
  }
  if (from._internal_channel11() != 0) {
    _internal_set_channel11(from._internal_channel11());
  }
  if (from._internal_channel12() != 0) {
    _internal_set_channel12(from._internal_channel12());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRr2::CopyFrom(const IrtsRr2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRr2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRr2::IsInitialized() const {
  return true;
}

void IrtsRr2::InternalSwap(IrtsRr2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRr2, channel12_)
      + sizeof(IrtsRr2::channel12_)
      - PROTOBUF_FIELD_OFFSET(IrtsRr2, channel9_)>(
          reinterpret_cast<char*>(&channel9_),
          reinterpret_cast<char*>(&other->channel9_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRr2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[16]);
}

// ===================================================================

class IrtsRr3::_Internal {
 public:
};

IrtsRr3::IrtsRr3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.IrtsRr3)
}
IrtsRr3::IrtsRr3(const IrtsRr3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel13_, &from.channel13_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  // @@protoc_insertion_point(copy_constructor:secondary.IrtsRr3)
}

inline void IrtsRr3::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&channel13_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&channel16_) -
    reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
}

IrtsRr3::~IrtsRr3() {
  // @@protoc_insertion_point(destructor:secondary.IrtsRr3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrtsRr3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IrtsRr3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IrtsRr3::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.IrtsRr3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel13_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel16_) -
      reinterpret_cast<char*>(&channel13_)) + sizeof(channel16_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrtsRr3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 channel13 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          channel13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel14 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          channel14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel15 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          channel15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 channel16 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          channel16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrtsRr3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.IrtsRr3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_channel13(), target);
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel14(), target);
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel15(), target);
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_channel16(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.IrtsRr3)
  return target;
}

size_t IrtsRr3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.IrtsRr3)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 channel13 = 1;
  if (this->_internal_channel13() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel13());
  }

  // uint32 channel14 = 2;
  if (this->_internal_channel14() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel14());
  }

  // uint32 channel15 = 3;
  if (this->_internal_channel15() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel15());
  }

  // uint32 channel16 = 4;
  if (this->_internal_channel16() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_channel16());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrtsRr3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IrtsRr3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrtsRr3::GetClassData() const { return &_class_data_; }

void IrtsRr3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IrtsRr3 *>(to)->MergeFrom(
      static_cast<const IrtsRr3 &>(from));
}


void IrtsRr3::MergeFrom(const IrtsRr3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.IrtsRr3)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel13() != 0) {
    _internal_set_channel13(from._internal_channel13());
  }
  if (from._internal_channel14() != 0) {
    _internal_set_channel14(from._internal_channel14());
  }
  if (from._internal_channel15() != 0) {
    _internal_set_channel15(from._internal_channel15());
  }
  if (from._internal_channel16() != 0) {
    _internal_set_channel16(from._internal_channel16());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrtsRr3::CopyFrom(const IrtsRr3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.IrtsRr3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrtsRr3::IsInitialized() const {
  return true;
}

void IrtsRr3::InternalSwap(IrtsRr3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IrtsRr3, channel16_)
      + sizeof(IrtsRr3::channel16_)
      - PROTOBUF_FIELD_OFFSET(IrtsRr3, channel13_)>(
          reinterpret_cast<char*>(&channel13_),
          reinterpret_cast<char*>(&other->channel13_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IrtsRr3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[17]);
}

// ===================================================================

class GpsCoords::_Internal {
 public:
};

GpsCoords::GpsCoords(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.GpsCoords)
}
GpsCoords::GpsCoords(const GpsCoords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:secondary.GpsCoords)
}

inline void GpsCoords::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&latitude_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
}

GpsCoords::~GpsCoords() {
  // @@protoc_insertion_point(destructor:secondary.GpsCoords)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GpsCoords::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GpsCoords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GpsCoords::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.GpsCoords)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GpsCoords::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float latitude = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float longitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GpsCoords::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.GpsCoords)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_latitude(), target);
  }

  // float longitude = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_longitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.GpsCoords)
  return target;
}

size_t GpsCoords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.GpsCoords)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 1 + 4;
  }

  // float longitude = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GpsCoords::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GpsCoords::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GpsCoords::GetClassData() const { return &_class_data_; }

void GpsCoords::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GpsCoords *>(to)->MergeFrom(
      static_cast<const GpsCoords &>(from));
}


void GpsCoords::MergeFrom(const GpsCoords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.GpsCoords)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_latitude = from._internal_latitude();
  uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _internal_set_latitude(from._internal_latitude());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_longitude = from._internal_longitude();
  uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _internal_set_longitude(from._internal_longitude());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GpsCoords::CopyFrom(const GpsCoords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.GpsCoords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpsCoords::IsInitialized() const {
  return true;
}

void GpsCoords::InternalSwap(GpsCoords* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpsCoords, longitude_)
      + sizeof(GpsCoords::longitude_)
      - PROTOBUF_FIELD_OFFSET(GpsCoords, latitude_)>(
          reinterpret_cast<char*>(&latitude_),
          reinterpret_cast<char*>(&other->latitude_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GpsCoords::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[18]);
}

// ===================================================================

class GpsSpeed::_Internal {
 public:
};

GpsSpeed::GpsSpeed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.GpsSpeed)
}
GpsSpeed::GpsSpeed(const GpsSpeed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:secondary.GpsSpeed)
}

inline void GpsSpeed::SharedCtor() {
speed_ = 0u;
}

GpsSpeed::~GpsSpeed() {
  // @@protoc_insertion_point(destructor:secondary.GpsSpeed)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GpsSpeed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GpsSpeed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GpsSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.GpsSpeed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speed_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GpsSpeed::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 speed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GpsSpeed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.GpsSpeed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 speed = 1;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.GpsSpeed)
  return target;
}

size_t GpsSpeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.GpsSpeed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 speed = 1;
  if (this->_internal_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GpsSpeed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GpsSpeed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GpsSpeed::GetClassData() const { return &_class_data_; }

void GpsSpeed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GpsSpeed *>(to)->MergeFrom(
      static_cast<const GpsSpeed &>(from));
}


void GpsSpeed::MergeFrom(const GpsSpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.GpsSpeed)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GpsSpeed::CopyFrom(const GpsSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.GpsSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpsSpeed::IsInitialized() const {
  return true;
}

void GpsSpeed::InternalSwap(GpsSpeed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GpsSpeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[19]);
}

// ===================================================================

class LapCount::_Internal {
 public:
};

LapCount::LapCount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:secondary.LapCount)
}
LapCount::LapCount(const LapCount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lap_count_, &from.lap_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&lap_count_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:secondary.LapCount)
}

inline void LapCount::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lap_count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&lap_count_)) + sizeof(timestamp_));
}

LapCount::~LapCount() {
  // @@protoc_insertion_point(destructor:secondary.LapCount)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LapCount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LapCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LapCount::Clear() {
// @@protoc_insertion_point(message_clear_start:secondary.LapCount)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lap_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&lap_count_)) + sizeof(timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LapCount::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 lap_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lap_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LapCount::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:secondary.LapCount)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lap_count = 1;
  if (this->_internal_lap_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lap_count(), target);
  }

  // uint32 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secondary.LapCount)
  return target;
}

size_t LapCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secondary.LapCount)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 lap_count = 1;
  if (this->_internal_lap_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_lap_count());
  }

  // uint32 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LapCount::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LapCount::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LapCount::GetClassData() const { return &_class_data_; }

void LapCount::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LapCount *>(to)->MergeFrom(
      static_cast<const LapCount &>(from));
}


void LapCount::MergeFrom(const LapCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secondary.LapCount)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lap_count() != 0) {
    _internal_set_lap_count(from._internal_lap_count());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LapCount::CopyFrom(const LapCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secondary.LapCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LapCount::IsInitialized() const {
  return true;
}

void LapCount::InternalSwap(LapCount* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LapCount, timestamp_)
      + sizeof(LapCount::timestamp_)
      - PROTOBUF_FIELD_OFFSET(LapCount, lap_count_)>(
          reinterpret_cast<char*>(&lap_count_),
          reinterpret_cast<char*>(&other->lap_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LapCount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_secondary_2eproto_getter, &descriptor_table_secondary_2eproto_once,
      file_level_metadata_secondary_2eproto[20]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace secondary
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::secondary::ImuAngularRate*
Arena::CreateMaybeMessage< ::secondary::ImuAngularRate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::ImuAngularRate >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::ImuAcceleration*
Arena::CreateMaybeMessage< ::secondary::ImuAcceleration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::ImuAcceleration >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFl0*
Arena::CreateMaybeMessage< ::secondary::IrtsFl0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFl0 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFl1*
Arena::CreateMaybeMessage< ::secondary::IrtsFl1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFl1 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFl2*
Arena::CreateMaybeMessage< ::secondary::IrtsFl2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFl2 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFl3*
Arena::CreateMaybeMessage< ::secondary::IrtsFl3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFl3 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFr0*
Arena::CreateMaybeMessage< ::secondary::IrtsFr0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFr0 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFr1*
Arena::CreateMaybeMessage< ::secondary::IrtsFr1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFr1 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFr2*
Arena::CreateMaybeMessage< ::secondary::IrtsFr2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFr2 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsFr3*
Arena::CreateMaybeMessage< ::secondary::IrtsFr3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsFr3 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRl0*
Arena::CreateMaybeMessage< ::secondary::IrtsRl0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRl0 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRl1*
Arena::CreateMaybeMessage< ::secondary::IrtsRl1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRl1 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRl2*
Arena::CreateMaybeMessage< ::secondary::IrtsRl2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRl2 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRl3*
Arena::CreateMaybeMessage< ::secondary::IrtsRl3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRl3 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRr0*
Arena::CreateMaybeMessage< ::secondary::IrtsRr0 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRr0 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRr1*
Arena::CreateMaybeMessage< ::secondary::IrtsRr1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRr1 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRr2*
Arena::CreateMaybeMessage< ::secondary::IrtsRr2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRr2 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::IrtsRr3*
Arena::CreateMaybeMessage< ::secondary::IrtsRr3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::IrtsRr3 >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::GpsCoords*
Arena::CreateMaybeMessage< ::secondary::GpsCoords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::GpsCoords >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::GpsSpeed*
Arena::CreateMaybeMessage< ::secondary::GpsSpeed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::GpsSpeed >(arena);
}
template<> PROTOBUF_NOINLINE ::secondary::LapCount*
Arena::CreateMaybeMessage< ::secondary::LapCount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::secondary::LapCount >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
