// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secondary.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_secondary_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_secondary_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_secondary_2eproto;
namespace secondary {
class GpsCoords;
struct GpsCoordsDefaultTypeInternal;
extern GpsCoordsDefaultTypeInternal _GpsCoords_default_instance_;
class GpsSpeed;
struct GpsSpeedDefaultTypeInternal;
extern GpsSpeedDefaultTypeInternal _GpsSpeed_default_instance_;
class ImuAcceleration;
struct ImuAccelerationDefaultTypeInternal;
extern ImuAccelerationDefaultTypeInternal _ImuAcceleration_default_instance_;
class ImuAngularRate;
struct ImuAngularRateDefaultTypeInternal;
extern ImuAngularRateDefaultTypeInternal _ImuAngularRate_default_instance_;
class IrtsFl0;
struct IrtsFl0DefaultTypeInternal;
extern IrtsFl0DefaultTypeInternal _IrtsFl0_default_instance_;
class IrtsFl1;
struct IrtsFl1DefaultTypeInternal;
extern IrtsFl1DefaultTypeInternal _IrtsFl1_default_instance_;
class IrtsFl2;
struct IrtsFl2DefaultTypeInternal;
extern IrtsFl2DefaultTypeInternal _IrtsFl2_default_instance_;
class IrtsFl3;
struct IrtsFl3DefaultTypeInternal;
extern IrtsFl3DefaultTypeInternal _IrtsFl3_default_instance_;
class IrtsFr0;
struct IrtsFr0DefaultTypeInternal;
extern IrtsFr0DefaultTypeInternal _IrtsFr0_default_instance_;
class IrtsFr1;
struct IrtsFr1DefaultTypeInternal;
extern IrtsFr1DefaultTypeInternal _IrtsFr1_default_instance_;
class IrtsFr2;
struct IrtsFr2DefaultTypeInternal;
extern IrtsFr2DefaultTypeInternal _IrtsFr2_default_instance_;
class IrtsFr3;
struct IrtsFr3DefaultTypeInternal;
extern IrtsFr3DefaultTypeInternal _IrtsFr3_default_instance_;
class IrtsRl0;
struct IrtsRl0DefaultTypeInternal;
extern IrtsRl0DefaultTypeInternal _IrtsRl0_default_instance_;
class IrtsRl1;
struct IrtsRl1DefaultTypeInternal;
extern IrtsRl1DefaultTypeInternal _IrtsRl1_default_instance_;
class IrtsRl2;
struct IrtsRl2DefaultTypeInternal;
extern IrtsRl2DefaultTypeInternal _IrtsRl2_default_instance_;
class IrtsRl3;
struct IrtsRl3DefaultTypeInternal;
extern IrtsRl3DefaultTypeInternal _IrtsRl3_default_instance_;
class IrtsRr0;
struct IrtsRr0DefaultTypeInternal;
extern IrtsRr0DefaultTypeInternal _IrtsRr0_default_instance_;
class IrtsRr1;
struct IrtsRr1DefaultTypeInternal;
extern IrtsRr1DefaultTypeInternal _IrtsRr1_default_instance_;
class IrtsRr2;
struct IrtsRr2DefaultTypeInternal;
extern IrtsRr2DefaultTypeInternal _IrtsRr2_default_instance_;
class IrtsRr3;
struct IrtsRr3DefaultTypeInternal;
extern IrtsRr3DefaultTypeInternal _IrtsRr3_default_instance_;
class LapCount;
struct LapCountDefaultTypeInternal;
extern LapCountDefaultTypeInternal _LapCount_default_instance_;
}  // namespace secondary
PROTOBUF_NAMESPACE_OPEN
template<> ::secondary::GpsCoords* Arena::CreateMaybeMessage<::secondary::GpsCoords>(Arena*);
template<> ::secondary::GpsSpeed* Arena::CreateMaybeMessage<::secondary::GpsSpeed>(Arena*);
template<> ::secondary::ImuAcceleration* Arena::CreateMaybeMessage<::secondary::ImuAcceleration>(Arena*);
template<> ::secondary::ImuAngularRate* Arena::CreateMaybeMessage<::secondary::ImuAngularRate>(Arena*);
template<> ::secondary::IrtsFl0* Arena::CreateMaybeMessage<::secondary::IrtsFl0>(Arena*);
template<> ::secondary::IrtsFl1* Arena::CreateMaybeMessage<::secondary::IrtsFl1>(Arena*);
template<> ::secondary::IrtsFl2* Arena::CreateMaybeMessage<::secondary::IrtsFl2>(Arena*);
template<> ::secondary::IrtsFl3* Arena::CreateMaybeMessage<::secondary::IrtsFl3>(Arena*);
template<> ::secondary::IrtsFr0* Arena::CreateMaybeMessage<::secondary::IrtsFr0>(Arena*);
template<> ::secondary::IrtsFr1* Arena::CreateMaybeMessage<::secondary::IrtsFr1>(Arena*);
template<> ::secondary::IrtsFr2* Arena::CreateMaybeMessage<::secondary::IrtsFr2>(Arena*);
template<> ::secondary::IrtsFr3* Arena::CreateMaybeMessage<::secondary::IrtsFr3>(Arena*);
template<> ::secondary::IrtsRl0* Arena::CreateMaybeMessage<::secondary::IrtsRl0>(Arena*);
template<> ::secondary::IrtsRl1* Arena::CreateMaybeMessage<::secondary::IrtsRl1>(Arena*);
template<> ::secondary::IrtsRl2* Arena::CreateMaybeMessage<::secondary::IrtsRl2>(Arena*);
template<> ::secondary::IrtsRl3* Arena::CreateMaybeMessage<::secondary::IrtsRl3>(Arena*);
template<> ::secondary::IrtsRr0* Arena::CreateMaybeMessage<::secondary::IrtsRr0>(Arena*);
template<> ::secondary::IrtsRr1* Arena::CreateMaybeMessage<::secondary::IrtsRr1>(Arena*);
template<> ::secondary::IrtsRr2* Arena::CreateMaybeMessage<::secondary::IrtsRr2>(Arena*);
template<> ::secondary::IrtsRr3* Arena::CreateMaybeMessage<::secondary::IrtsRr3>(Arena*);
template<> ::secondary::LapCount* Arena::CreateMaybeMessage<::secondary::LapCount>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace secondary {

// ===================================================================

class ImuAngularRate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.ImuAngularRate) */ {
 public:
  inline ImuAngularRate() : ImuAngularRate(nullptr) {}
  ~ImuAngularRate() override;
  explicit PROTOBUF_CONSTEXPR ImuAngularRate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImuAngularRate(const ImuAngularRate& from);
  ImuAngularRate(ImuAngularRate&& from) noexcept
    : ImuAngularRate() {
    *this = ::std::move(from);
  }

  inline ImuAngularRate& operator=(const ImuAngularRate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImuAngularRate& operator=(ImuAngularRate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImuAngularRate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImuAngularRate* internal_default_instance() {
    return reinterpret_cast<const ImuAngularRate*>(
               &_ImuAngularRate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ImuAngularRate& a, ImuAngularRate& b) {
    a.Swap(&b);
  }
  inline void Swap(ImuAngularRate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImuAngularRate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImuAngularRate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ImuAngularRate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ImuAngularRate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ImuAngularRate& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImuAngularRate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.ImuAngularRate";
  }
  protected:
  explicit ImuAngularRate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAngRateXFieldNumber = 1,
    kAngRateYFieldNumber = 2,
    kAngRateZFieldNumber = 3,
  };
  // uint32 ang_rate_x = 1;
  void clear_ang_rate_x();
  uint32_t ang_rate_x() const;
  void set_ang_rate_x(uint32_t value);
  private:
  uint32_t _internal_ang_rate_x() const;
  void _internal_set_ang_rate_x(uint32_t value);
  public:

  // uint32 ang_rate_y = 2;
  void clear_ang_rate_y();
  uint32_t ang_rate_y() const;
  void set_ang_rate_y(uint32_t value);
  private:
  uint32_t _internal_ang_rate_y() const;
  void _internal_set_ang_rate_y(uint32_t value);
  public:

  // uint32 ang_rate_z = 3;
  void clear_ang_rate_z();
  uint32_t ang_rate_z() const;
  void set_ang_rate_z(uint32_t value);
  private:
  uint32_t _internal_ang_rate_z() const;
  void _internal_set_ang_rate_z(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.ImuAngularRate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t ang_rate_x_;
  uint32_t ang_rate_y_;
  uint32_t ang_rate_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class ImuAcceleration final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.ImuAcceleration) */ {
 public:
  inline ImuAcceleration() : ImuAcceleration(nullptr) {}
  ~ImuAcceleration() override;
  explicit PROTOBUF_CONSTEXPR ImuAcceleration(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImuAcceleration(const ImuAcceleration& from);
  ImuAcceleration(ImuAcceleration&& from) noexcept
    : ImuAcceleration() {
    *this = ::std::move(from);
  }

  inline ImuAcceleration& operator=(const ImuAcceleration& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImuAcceleration& operator=(ImuAcceleration&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImuAcceleration& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImuAcceleration* internal_default_instance() {
    return reinterpret_cast<const ImuAcceleration*>(
               &_ImuAcceleration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ImuAcceleration& a, ImuAcceleration& b) {
    a.Swap(&b);
  }
  inline void Swap(ImuAcceleration* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImuAcceleration* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImuAcceleration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ImuAcceleration>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ImuAcceleration& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ImuAcceleration& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImuAcceleration* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.ImuAcceleration";
  }
  protected:
  explicit ImuAcceleration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccelXFieldNumber = 1,
    kAccelYFieldNumber = 2,
    kAccelZFieldNumber = 3,
  };
  // uint32 accel_x = 1;
  void clear_accel_x();
  uint32_t accel_x() const;
  void set_accel_x(uint32_t value);
  private:
  uint32_t _internal_accel_x() const;
  void _internal_set_accel_x(uint32_t value);
  public:

  // uint32 accel_y = 2;
  void clear_accel_y();
  uint32_t accel_y() const;
  void set_accel_y(uint32_t value);
  private:
  uint32_t _internal_accel_y() const;
  void _internal_set_accel_y(uint32_t value);
  public:

  // uint32 accel_z = 3;
  void clear_accel_z();
  uint32_t accel_z() const;
  void set_accel_z(uint32_t value);
  private:
  uint32_t _internal_accel_z() const;
  void _internal_set_accel_z(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.ImuAcceleration)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t accel_x_;
  uint32_t accel_y_;
  uint32_t accel_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFl0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFl0) */ {
 public:
  inline IrtsFl0() : IrtsFl0(nullptr) {}
  ~IrtsFl0() override;
  explicit PROTOBUF_CONSTEXPR IrtsFl0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFl0(const IrtsFl0& from);
  IrtsFl0(IrtsFl0&& from) noexcept
    : IrtsFl0() {
    *this = ::std::move(from);
  }

  inline IrtsFl0& operator=(const IrtsFl0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFl0& operator=(IrtsFl0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFl0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFl0* internal_default_instance() {
    return reinterpret_cast<const IrtsFl0*>(
               &_IrtsFl0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IrtsFl0& a, IrtsFl0& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFl0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFl0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFl0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFl0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFl0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFl0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFl0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFl0";
  }
  protected:
  explicit IrtsFl0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFl0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFl1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFl1) */ {
 public:
  inline IrtsFl1() : IrtsFl1(nullptr) {}
  ~IrtsFl1() override;
  explicit PROTOBUF_CONSTEXPR IrtsFl1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFl1(const IrtsFl1& from);
  IrtsFl1(IrtsFl1&& from) noexcept
    : IrtsFl1() {
    *this = ::std::move(from);
  }

  inline IrtsFl1& operator=(const IrtsFl1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFl1& operator=(IrtsFl1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFl1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFl1* internal_default_instance() {
    return reinterpret_cast<const IrtsFl1*>(
               &_IrtsFl1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(IrtsFl1& a, IrtsFl1& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFl1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFl1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFl1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFl1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFl1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFl1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFl1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFl1";
  }
  protected:
  explicit IrtsFl1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFl1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFl2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFl2) */ {
 public:
  inline IrtsFl2() : IrtsFl2(nullptr) {}
  ~IrtsFl2() override;
  explicit PROTOBUF_CONSTEXPR IrtsFl2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFl2(const IrtsFl2& from);
  IrtsFl2(IrtsFl2&& from) noexcept
    : IrtsFl2() {
    *this = ::std::move(from);
  }

  inline IrtsFl2& operator=(const IrtsFl2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFl2& operator=(IrtsFl2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFl2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFl2* internal_default_instance() {
    return reinterpret_cast<const IrtsFl2*>(
               &_IrtsFl2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(IrtsFl2& a, IrtsFl2& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFl2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFl2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFl2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFl2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFl2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFl2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFl2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFl2";
  }
  protected:
  explicit IrtsFl2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFl2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFl3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFl3) */ {
 public:
  inline IrtsFl3() : IrtsFl3(nullptr) {}
  ~IrtsFl3() override;
  explicit PROTOBUF_CONSTEXPR IrtsFl3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFl3(const IrtsFl3& from);
  IrtsFl3(IrtsFl3&& from) noexcept
    : IrtsFl3() {
    *this = ::std::move(from);
  }

  inline IrtsFl3& operator=(const IrtsFl3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFl3& operator=(IrtsFl3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFl3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFl3* internal_default_instance() {
    return reinterpret_cast<const IrtsFl3*>(
               &_IrtsFl3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(IrtsFl3& a, IrtsFl3& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFl3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFl3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFl3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFl3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFl3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFl3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFl3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFl3";
  }
  protected:
  explicit IrtsFl3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFl3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFr0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFr0) */ {
 public:
  inline IrtsFr0() : IrtsFr0(nullptr) {}
  ~IrtsFr0() override;
  explicit PROTOBUF_CONSTEXPR IrtsFr0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFr0(const IrtsFr0& from);
  IrtsFr0(IrtsFr0&& from) noexcept
    : IrtsFr0() {
    *this = ::std::move(from);
  }

  inline IrtsFr0& operator=(const IrtsFr0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFr0& operator=(IrtsFr0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFr0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFr0* internal_default_instance() {
    return reinterpret_cast<const IrtsFr0*>(
               &_IrtsFr0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IrtsFr0& a, IrtsFr0& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFr0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFr0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFr0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFr0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFr0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFr0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFr0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFr0";
  }
  protected:
  explicit IrtsFr0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFr0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFr1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFr1) */ {
 public:
  inline IrtsFr1() : IrtsFr1(nullptr) {}
  ~IrtsFr1() override;
  explicit PROTOBUF_CONSTEXPR IrtsFr1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFr1(const IrtsFr1& from);
  IrtsFr1(IrtsFr1&& from) noexcept
    : IrtsFr1() {
    *this = ::std::move(from);
  }

  inline IrtsFr1& operator=(const IrtsFr1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFr1& operator=(IrtsFr1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFr1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFr1* internal_default_instance() {
    return reinterpret_cast<const IrtsFr1*>(
               &_IrtsFr1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IrtsFr1& a, IrtsFr1& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFr1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFr1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFr1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFr1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFr1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFr1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFr1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFr1";
  }
  protected:
  explicit IrtsFr1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFr1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFr2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFr2) */ {
 public:
  inline IrtsFr2() : IrtsFr2(nullptr) {}
  ~IrtsFr2() override;
  explicit PROTOBUF_CONSTEXPR IrtsFr2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFr2(const IrtsFr2& from);
  IrtsFr2(IrtsFr2&& from) noexcept
    : IrtsFr2() {
    *this = ::std::move(from);
  }

  inline IrtsFr2& operator=(const IrtsFr2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFr2& operator=(IrtsFr2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFr2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFr2* internal_default_instance() {
    return reinterpret_cast<const IrtsFr2*>(
               &_IrtsFr2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(IrtsFr2& a, IrtsFr2& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFr2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFr2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFr2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFr2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFr2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFr2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFr2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFr2";
  }
  protected:
  explicit IrtsFr2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFr2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsFr3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsFr3) */ {
 public:
  inline IrtsFr3() : IrtsFr3(nullptr) {}
  ~IrtsFr3() override;
  explicit PROTOBUF_CONSTEXPR IrtsFr3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsFr3(const IrtsFr3& from);
  IrtsFr3(IrtsFr3&& from) noexcept
    : IrtsFr3() {
    *this = ::std::move(from);
  }

  inline IrtsFr3& operator=(const IrtsFr3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsFr3& operator=(IrtsFr3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsFr3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsFr3* internal_default_instance() {
    return reinterpret_cast<const IrtsFr3*>(
               &_IrtsFr3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IrtsFr3& a, IrtsFr3& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsFr3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsFr3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsFr3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsFr3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsFr3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsFr3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsFr3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsFr3";
  }
  protected:
  explicit IrtsFr3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsFr3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRl0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRl0) */ {
 public:
  inline IrtsRl0() : IrtsRl0(nullptr) {}
  ~IrtsRl0() override;
  explicit PROTOBUF_CONSTEXPR IrtsRl0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRl0(const IrtsRl0& from);
  IrtsRl0(IrtsRl0&& from) noexcept
    : IrtsRl0() {
    *this = ::std::move(from);
  }

  inline IrtsRl0& operator=(const IrtsRl0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRl0& operator=(IrtsRl0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRl0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRl0* internal_default_instance() {
    return reinterpret_cast<const IrtsRl0*>(
               &_IrtsRl0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IrtsRl0& a, IrtsRl0& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRl0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRl0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRl0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRl0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRl0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRl0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRl0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRl0";
  }
  protected:
  explicit IrtsRl0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRl0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRl1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRl1) */ {
 public:
  inline IrtsRl1() : IrtsRl1(nullptr) {}
  ~IrtsRl1() override;
  explicit PROTOBUF_CONSTEXPR IrtsRl1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRl1(const IrtsRl1& from);
  IrtsRl1(IrtsRl1&& from) noexcept
    : IrtsRl1() {
    *this = ::std::move(from);
  }

  inline IrtsRl1& operator=(const IrtsRl1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRl1& operator=(IrtsRl1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRl1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRl1* internal_default_instance() {
    return reinterpret_cast<const IrtsRl1*>(
               &_IrtsRl1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(IrtsRl1& a, IrtsRl1& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRl1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRl1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRl1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRl1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRl1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRl1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRl1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRl1";
  }
  protected:
  explicit IrtsRl1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRl1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRl2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRl2) */ {
 public:
  inline IrtsRl2() : IrtsRl2(nullptr) {}
  ~IrtsRl2() override;
  explicit PROTOBUF_CONSTEXPR IrtsRl2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRl2(const IrtsRl2& from);
  IrtsRl2(IrtsRl2&& from) noexcept
    : IrtsRl2() {
    *this = ::std::move(from);
  }

  inline IrtsRl2& operator=(const IrtsRl2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRl2& operator=(IrtsRl2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRl2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRl2* internal_default_instance() {
    return reinterpret_cast<const IrtsRl2*>(
               &_IrtsRl2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(IrtsRl2& a, IrtsRl2& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRl2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRl2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRl2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRl2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRl2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRl2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRl2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRl2";
  }
  protected:
  explicit IrtsRl2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRl2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRl3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRl3) */ {
 public:
  inline IrtsRl3() : IrtsRl3(nullptr) {}
  ~IrtsRl3() override;
  explicit PROTOBUF_CONSTEXPR IrtsRl3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRl3(const IrtsRl3& from);
  IrtsRl3(IrtsRl3&& from) noexcept
    : IrtsRl3() {
    *this = ::std::move(from);
  }

  inline IrtsRl3& operator=(const IrtsRl3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRl3& operator=(IrtsRl3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRl3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRl3* internal_default_instance() {
    return reinterpret_cast<const IrtsRl3*>(
               &_IrtsRl3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(IrtsRl3& a, IrtsRl3& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRl3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRl3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRl3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRl3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRl3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRl3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRl3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRl3";
  }
  protected:
  explicit IrtsRl3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRl3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRr0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRr0) */ {
 public:
  inline IrtsRr0() : IrtsRr0(nullptr) {}
  ~IrtsRr0() override;
  explicit PROTOBUF_CONSTEXPR IrtsRr0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRr0(const IrtsRr0& from);
  IrtsRr0(IrtsRr0&& from) noexcept
    : IrtsRr0() {
    *this = ::std::move(from);
  }

  inline IrtsRr0& operator=(const IrtsRr0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRr0& operator=(IrtsRr0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRr0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRr0* internal_default_instance() {
    return reinterpret_cast<const IrtsRr0*>(
               &_IrtsRr0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(IrtsRr0& a, IrtsRr0& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRr0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRr0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRr0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRr0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRr0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRr0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRr0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRr0";
  }
  protected:
  explicit IrtsRr0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRr0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRr1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRr1) */ {
 public:
  inline IrtsRr1() : IrtsRr1(nullptr) {}
  ~IrtsRr1() override;
  explicit PROTOBUF_CONSTEXPR IrtsRr1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRr1(const IrtsRr1& from);
  IrtsRr1(IrtsRr1&& from) noexcept
    : IrtsRr1() {
    *this = ::std::move(from);
  }

  inline IrtsRr1& operator=(const IrtsRr1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRr1& operator=(IrtsRr1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRr1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRr1* internal_default_instance() {
    return reinterpret_cast<const IrtsRr1*>(
               &_IrtsRr1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(IrtsRr1& a, IrtsRr1& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRr1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRr1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRr1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRr1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRr1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRr1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRr1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRr1";
  }
  protected:
  explicit IrtsRr1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRr1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRr2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRr2) */ {
 public:
  inline IrtsRr2() : IrtsRr2(nullptr) {}
  ~IrtsRr2() override;
  explicit PROTOBUF_CONSTEXPR IrtsRr2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRr2(const IrtsRr2& from);
  IrtsRr2(IrtsRr2&& from) noexcept
    : IrtsRr2() {
    *this = ::std::move(from);
  }

  inline IrtsRr2& operator=(const IrtsRr2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRr2& operator=(IrtsRr2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRr2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRr2* internal_default_instance() {
    return reinterpret_cast<const IrtsRr2*>(
               &_IrtsRr2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(IrtsRr2& a, IrtsRr2& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRr2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRr2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRr2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRr2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRr2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRr2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRr2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRr2";
  }
  protected:
  explicit IrtsRr2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRr2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IrtsRr3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IrtsRr3) */ {
 public:
  inline IrtsRr3() : IrtsRr3(nullptr) {}
  ~IrtsRr3() override;
  explicit PROTOBUF_CONSTEXPR IrtsRr3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrtsRr3(const IrtsRr3& from);
  IrtsRr3(IrtsRr3&& from) noexcept
    : IrtsRr3() {
    *this = ::std::move(from);
  }

  inline IrtsRr3& operator=(const IrtsRr3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrtsRr3& operator=(IrtsRr3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrtsRr3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrtsRr3* internal_default_instance() {
    return reinterpret_cast<const IrtsRr3*>(
               &_IrtsRr3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(IrtsRr3& a, IrtsRr3& b) {
    a.Swap(&b);
  }
  inline void Swap(IrtsRr3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrtsRr3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IrtsRr3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IrtsRr3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IrtsRr3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IrtsRr3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrtsRr3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IrtsRr3";
  }
  protected:
  explicit IrtsRr3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IrtsRr3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class GpsCoords final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.GpsCoords) */ {
 public:
  inline GpsCoords() : GpsCoords(nullptr) {}
  ~GpsCoords() override;
  explicit PROTOBUF_CONSTEXPR GpsCoords(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpsCoords(const GpsCoords& from);
  GpsCoords(GpsCoords&& from) noexcept
    : GpsCoords() {
    *this = ::std::move(from);
  }

  inline GpsCoords& operator=(const GpsCoords& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpsCoords& operator=(GpsCoords&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpsCoords& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpsCoords* internal_default_instance() {
    return reinterpret_cast<const GpsCoords*>(
               &_GpsCoords_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GpsCoords& a, GpsCoords& b) {
    a.Swap(&b);
  }
  inline void Swap(GpsCoords* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpsCoords* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpsCoords* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpsCoords>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpsCoords& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GpsCoords& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpsCoords* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.GpsCoords";
  }
  protected:
  explicit GpsCoords(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // float latitude = 1;
  void clear_latitude();
  float latitude() const;
  void set_latitude(float value);
  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);
  public:

  // float longitude = 2;
  void clear_longitude();
  float longitude() const;
  void set_longitude(float value);
  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.GpsCoords)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float latitude_;
  float longitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class GpsSpeed final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.GpsSpeed) */ {
 public:
  inline GpsSpeed() : GpsSpeed(nullptr) {}
  ~GpsSpeed() override;
  explicit PROTOBUF_CONSTEXPR GpsSpeed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GpsSpeed(const GpsSpeed& from);
  GpsSpeed(GpsSpeed&& from) noexcept
    : GpsSpeed() {
    *this = ::std::move(from);
  }

  inline GpsSpeed& operator=(const GpsSpeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline GpsSpeed& operator=(GpsSpeed&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GpsSpeed& default_instance() {
    return *internal_default_instance();
  }
  static inline const GpsSpeed* internal_default_instance() {
    return reinterpret_cast<const GpsSpeed*>(
               &_GpsSpeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GpsSpeed& a, GpsSpeed& b) {
    a.Swap(&b);
  }
  inline void Swap(GpsSpeed* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GpsSpeed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GpsSpeed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GpsSpeed>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GpsSpeed& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GpsSpeed& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpsSpeed* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.GpsSpeed";
  }
  protected:
  explicit GpsSpeed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeedFieldNumber = 1,
  };
  // uint32 speed = 1;
  void clear_speed();
  uint32_t speed() const;
  void set_speed(uint32_t value);
  private:
  uint32_t _internal_speed() const;
  void _internal_set_speed(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.GpsSpeed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class LapCount final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.LapCount) */ {
 public:
  inline LapCount() : LapCount(nullptr) {}
  ~LapCount() override;
  explicit PROTOBUF_CONSTEXPR LapCount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LapCount(const LapCount& from);
  LapCount(LapCount&& from) noexcept
    : LapCount() {
    *this = ::std::move(from);
  }

  inline LapCount& operator=(const LapCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline LapCount& operator=(LapCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LapCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const LapCount* internal_default_instance() {
    return reinterpret_cast<const LapCount*>(
               &_LapCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(LapCount& a, LapCount& b) {
    a.Swap(&b);
  }
  inline void Swap(LapCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LapCount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LapCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LapCount>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LapCount& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const LapCount& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LapCount* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.LapCount";
  }
  protected:
  explicit LapCount(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLapCountFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // uint32 lap_count = 1;
  void clear_lap_count();
  uint32_t lap_count() const;
  void set_lap_count(uint32_t value);
  private:
  uint32_t _internal_lap_count() const;
  void _internal_set_lap_count(uint32_t value);
  public:

  // uint32 timestamp = 2;
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.LapCount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t lap_count_;
  uint32_t timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImuAngularRate

// uint32 ang_rate_x = 1;
inline void ImuAngularRate::clear_ang_rate_x() {
  ang_rate_x_ = 0u;
}
inline uint32_t ImuAngularRate::_internal_ang_rate_x() const {
  return ang_rate_x_;
}
inline uint32_t ImuAngularRate::ang_rate_x() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAngularRate.ang_rate_x)
  return _internal_ang_rate_x();
}
inline void ImuAngularRate::_internal_set_ang_rate_x(uint32_t value) {
  
  ang_rate_x_ = value;
}
inline void ImuAngularRate::set_ang_rate_x(uint32_t value) {
  _internal_set_ang_rate_x(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAngularRate.ang_rate_x)
}

// uint32 ang_rate_y = 2;
inline void ImuAngularRate::clear_ang_rate_y() {
  ang_rate_y_ = 0u;
}
inline uint32_t ImuAngularRate::_internal_ang_rate_y() const {
  return ang_rate_y_;
}
inline uint32_t ImuAngularRate::ang_rate_y() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAngularRate.ang_rate_y)
  return _internal_ang_rate_y();
}
inline void ImuAngularRate::_internal_set_ang_rate_y(uint32_t value) {
  
  ang_rate_y_ = value;
}
inline void ImuAngularRate::set_ang_rate_y(uint32_t value) {
  _internal_set_ang_rate_y(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAngularRate.ang_rate_y)
}

// uint32 ang_rate_z = 3;
inline void ImuAngularRate::clear_ang_rate_z() {
  ang_rate_z_ = 0u;
}
inline uint32_t ImuAngularRate::_internal_ang_rate_z() const {
  return ang_rate_z_;
}
inline uint32_t ImuAngularRate::ang_rate_z() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAngularRate.ang_rate_z)
  return _internal_ang_rate_z();
}
inline void ImuAngularRate::_internal_set_ang_rate_z(uint32_t value) {
  
  ang_rate_z_ = value;
}
inline void ImuAngularRate::set_ang_rate_z(uint32_t value) {
  _internal_set_ang_rate_z(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAngularRate.ang_rate_z)
}

// -------------------------------------------------------------------

// ImuAcceleration

// uint32 accel_x = 1;
inline void ImuAcceleration::clear_accel_x() {
  accel_x_ = 0u;
}
inline uint32_t ImuAcceleration::_internal_accel_x() const {
  return accel_x_;
}
inline uint32_t ImuAcceleration::accel_x() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAcceleration.accel_x)
  return _internal_accel_x();
}
inline void ImuAcceleration::_internal_set_accel_x(uint32_t value) {
  
  accel_x_ = value;
}
inline void ImuAcceleration::set_accel_x(uint32_t value) {
  _internal_set_accel_x(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAcceleration.accel_x)
}

// uint32 accel_y = 2;
inline void ImuAcceleration::clear_accel_y() {
  accel_y_ = 0u;
}
inline uint32_t ImuAcceleration::_internal_accel_y() const {
  return accel_y_;
}
inline uint32_t ImuAcceleration::accel_y() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAcceleration.accel_y)
  return _internal_accel_y();
}
inline void ImuAcceleration::_internal_set_accel_y(uint32_t value) {
  
  accel_y_ = value;
}
inline void ImuAcceleration::set_accel_y(uint32_t value) {
  _internal_set_accel_y(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAcceleration.accel_y)
}

// uint32 accel_z = 3;
inline void ImuAcceleration::clear_accel_z() {
  accel_z_ = 0u;
}
inline uint32_t ImuAcceleration::_internal_accel_z() const {
  return accel_z_;
}
inline uint32_t ImuAcceleration::accel_z() const {
  // @@protoc_insertion_point(field_get:secondary.ImuAcceleration.accel_z)
  return _internal_accel_z();
}
inline void ImuAcceleration::_internal_set_accel_z(uint32_t value) {
  
  accel_z_ = value;
}
inline void ImuAcceleration::set_accel_z(uint32_t value) {
  _internal_set_accel_z(value);
  // @@protoc_insertion_point(field_set:secondary.ImuAcceleration.accel_z)
}

// -------------------------------------------------------------------

// IrtsFl0

// uint32 channel1 = 1;
inline void IrtsFl0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IrtsFl0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IrtsFl0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl0.channel1)
  return _internal_channel1();
}
inline void IrtsFl0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IrtsFl0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl0.channel1)
}

// uint32 channel2 = 2;
inline void IrtsFl0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IrtsFl0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IrtsFl0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl0.channel2)
  return _internal_channel2();
}
inline void IrtsFl0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IrtsFl0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl0.channel2)
}

// uint32 channel3 = 3;
inline void IrtsFl0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IrtsFl0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IrtsFl0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl0.channel3)
  return _internal_channel3();
}
inline void IrtsFl0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IrtsFl0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl0.channel3)
}

// uint32 channel4 = 4;
inline void IrtsFl0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IrtsFl0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IrtsFl0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl0.channel4)
  return _internal_channel4();
}
inline void IrtsFl0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IrtsFl0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl0.channel4)
}

// -------------------------------------------------------------------

// IrtsFl1

// uint32 channel5 = 1;
inline void IrtsFl1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IrtsFl1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IrtsFl1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl1.channel5)
  return _internal_channel5();
}
inline void IrtsFl1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IrtsFl1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl1.channel5)
}

// uint32 channel6 = 2;
inline void IrtsFl1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IrtsFl1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IrtsFl1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl1.channel6)
  return _internal_channel6();
}
inline void IrtsFl1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IrtsFl1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl1.channel6)
}

// uint32 channel7 = 3;
inline void IrtsFl1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IrtsFl1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IrtsFl1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl1.channel7)
  return _internal_channel7();
}
inline void IrtsFl1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IrtsFl1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl1.channel7)
}

// uint32 channel8 = 4;
inline void IrtsFl1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IrtsFl1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IrtsFl1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl1.channel8)
  return _internal_channel8();
}
inline void IrtsFl1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IrtsFl1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl1.channel8)
}

// -------------------------------------------------------------------

// IrtsFl2

// uint32 channel9 = 1;
inline void IrtsFl2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IrtsFl2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IrtsFl2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl2.channel9)
  return _internal_channel9();
}
inline void IrtsFl2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IrtsFl2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl2.channel9)
}

// uint32 channel10 = 2;
inline void IrtsFl2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IrtsFl2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IrtsFl2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl2.channel10)
  return _internal_channel10();
}
inline void IrtsFl2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IrtsFl2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl2.channel10)
}

// uint32 channel11 = 3;
inline void IrtsFl2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IrtsFl2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IrtsFl2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl2.channel11)
  return _internal_channel11();
}
inline void IrtsFl2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IrtsFl2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl2.channel11)
}

// uint32 channel12 = 4;
inline void IrtsFl2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IrtsFl2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IrtsFl2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl2.channel12)
  return _internal_channel12();
}
inline void IrtsFl2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IrtsFl2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl2.channel12)
}

// -------------------------------------------------------------------

// IrtsFl3

// uint32 channel13 = 1;
inline void IrtsFl3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IrtsFl3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IrtsFl3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl3.channel13)
  return _internal_channel13();
}
inline void IrtsFl3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IrtsFl3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl3.channel13)
}

// uint32 channel14 = 2;
inline void IrtsFl3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IrtsFl3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IrtsFl3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl3.channel14)
  return _internal_channel14();
}
inline void IrtsFl3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IrtsFl3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl3.channel14)
}

// uint32 channel15 = 3;
inline void IrtsFl3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IrtsFl3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IrtsFl3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl3.channel15)
  return _internal_channel15();
}
inline void IrtsFl3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IrtsFl3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl3.channel15)
}

// uint32 channel16 = 4;
inline void IrtsFl3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IrtsFl3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IrtsFl3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFl3.channel16)
  return _internal_channel16();
}
inline void IrtsFl3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IrtsFl3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFl3.channel16)
}

// -------------------------------------------------------------------

// IrtsFr0

// uint32 channel1 = 1;
inline void IrtsFr0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IrtsFr0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IrtsFr0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr0.channel1)
  return _internal_channel1();
}
inline void IrtsFr0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IrtsFr0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr0.channel1)
}

// uint32 channel2 = 2;
inline void IrtsFr0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IrtsFr0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IrtsFr0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr0.channel2)
  return _internal_channel2();
}
inline void IrtsFr0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IrtsFr0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr0.channel2)
}

// uint32 channel3 = 3;
inline void IrtsFr0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IrtsFr0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IrtsFr0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr0.channel3)
  return _internal_channel3();
}
inline void IrtsFr0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IrtsFr0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr0.channel3)
}

// uint32 channel4 = 4;
inline void IrtsFr0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IrtsFr0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IrtsFr0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr0.channel4)
  return _internal_channel4();
}
inline void IrtsFr0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IrtsFr0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr0.channel4)
}

// -------------------------------------------------------------------

// IrtsFr1

// uint32 channel5 = 1;
inline void IrtsFr1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IrtsFr1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IrtsFr1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr1.channel5)
  return _internal_channel5();
}
inline void IrtsFr1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IrtsFr1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr1.channel5)
}

// uint32 channel6 = 2;
inline void IrtsFr1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IrtsFr1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IrtsFr1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr1.channel6)
  return _internal_channel6();
}
inline void IrtsFr1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IrtsFr1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr1.channel6)
}

// uint32 channel7 = 3;
inline void IrtsFr1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IrtsFr1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IrtsFr1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr1.channel7)
  return _internal_channel7();
}
inline void IrtsFr1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IrtsFr1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr1.channel7)
}

// uint32 channel8 = 4;
inline void IrtsFr1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IrtsFr1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IrtsFr1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr1.channel8)
  return _internal_channel8();
}
inline void IrtsFr1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IrtsFr1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr1.channel8)
}

// -------------------------------------------------------------------

// IrtsFr2

// uint32 channel9 = 1;
inline void IrtsFr2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IrtsFr2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IrtsFr2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr2.channel9)
  return _internal_channel9();
}
inline void IrtsFr2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IrtsFr2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr2.channel9)
}

// uint32 channel10 = 2;
inline void IrtsFr2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IrtsFr2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IrtsFr2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr2.channel10)
  return _internal_channel10();
}
inline void IrtsFr2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IrtsFr2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr2.channel10)
}

// uint32 channel11 = 3;
inline void IrtsFr2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IrtsFr2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IrtsFr2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr2.channel11)
  return _internal_channel11();
}
inline void IrtsFr2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IrtsFr2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr2.channel11)
}

// uint32 channel12 = 4;
inline void IrtsFr2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IrtsFr2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IrtsFr2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr2.channel12)
  return _internal_channel12();
}
inline void IrtsFr2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IrtsFr2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr2.channel12)
}

// -------------------------------------------------------------------

// IrtsFr3

// uint32 channel13 = 1;
inline void IrtsFr3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IrtsFr3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IrtsFr3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr3.channel13)
  return _internal_channel13();
}
inline void IrtsFr3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IrtsFr3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr3.channel13)
}

// uint32 channel14 = 2;
inline void IrtsFr3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IrtsFr3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IrtsFr3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr3.channel14)
  return _internal_channel14();
}
inline void IrtsFr3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IrtsFr3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr3.channel14)
}

// uint32 channel15 = 3;
inline void IrtsFr3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IrtsFr3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IrtsFr3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr3.channel15)
  return _internal_channel15();
}
inline void IrtsFr3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IrtsFr3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr3.channel15)
}

// uint32 channel16 = 4;
inline void IrtsFr3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IrtsFr3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IrtsFr3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsFr3.channel16)
  return _internal_channel16();
}
inline void IrtsFr3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IrtsFr3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsFr3.channel16)
}

// -------------------------------------------------------------------

// IrtsRl0

// uint32 channel1 = 1;
inline void IrtsRl0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IrtsRl0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IrtsRl0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl0.channel1)
  return _internal_channel1();
}
inline void IrtsRl0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IrtsRl0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl0.channel1)
}

// uint32 channel2 = 2;
inline void IrtsRl0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IrtsRl0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IrtsRl0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl0.channel2)
  return _internal_channel2();
}
inline void IrtsRl0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IrtsRl0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl0.channel2)
}

// uint32 channel3 = 3;
inline void IrtsRl0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IrtsRl0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IrtsRl0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl0.channel3)
  return _internal_channel3();
}
inline void IrtsRl0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IrtsRl0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl0.channel3)
}

// uint32 channel4 = 4;
inline void IrtsRl0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IrtsRl0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IrtsRl0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl0.channel4)
  return _internal_channel4();
}
inline void IrtsRl0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IrtsRl0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl0.channel4)
}

// -------------------------------------------------------------------

// IrtsRl1

// uint32 channel5 = 1;
inline void IrtsRl1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IrtsRl1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IrtsRl1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl1.channel5)
  return _internal_channel5();
}
inline void IrtsRl1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IrtsRl1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl1.channel5)
}

// uint32 channel6 = 2;
inline void IrtsRl1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IrtsRl1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IrtsRl1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl1.channel6)
  return _internal_channel6();
}
inline void IrtsRl1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IrtsRl1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl1.channel6)
}

// uint32 channel7 = 3;
inline void IrtsRl1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IrtsRl1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IrtsRl1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl1.channel7)
  return _internal_channel7();
}
inline void IrtsRl1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IrtsRl1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl1.channel7)
}

// uint32 channel8 = 4;
inline void IrtsRl1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IrtsRl1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IrtsRl1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl1.channel8)
  return _internal_channel8();
}
inline void IrtsRl1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IrtsRl1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl1.channel8)
}

// -------------------------------------------------------------------

// IrtsRl2

// uint32 channel9 = 1;
inline void IrtsRl2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IrtsRl2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IrtsRl2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl2.channel9)
  return _internal_channel9();
}
inline void IrtsRl2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IrtsRl2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl2.channel9)
}

// uint32 channel10 = 2;
inline void IrtsRl2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IrtsRl2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IrtsRl2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl2.channel10)
  return _internal_channel10();
}
inline void IrtsRl2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IrtsRl2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl2.channel10)
}

// uint32 channel11 = 3;
inline void IrtsRl2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IrtsRl2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IrtsRl2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl2.channel11)
  return _internal_channel11();
}
inline void IrtsRl2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IrtsRl2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl2.channel11)
}

// uint32 channel12 = 4;
inline void IrtsRl2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IrtsRl2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IrtsRl2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl2.channel12)
  return _internal_channel12();
}
inline void IrtsRl2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IrtsRl2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl2.channel12)
}

// -------------------------------------------------------------------

// IrtsRl3

// uint32 channel13 = 1;
inline void IrtsRl3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IrtsRl3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IrtsRl3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl3.channel13)
  return _internal_channel13();
}
inline void IrtsRl3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IrtsRl3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl3.channel13)
}

// uint32 channel14 = 2;
inline void IrtsRl3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IrtsRl3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IrtsRl3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl3.channel14)
  return _internal_channel14();
}
inline void IrtsRl3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IrtsRl3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl3.channel14)
}

// uint32 channel15 = 3;
inline void IrtsRl3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IrtsRl3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IrtsRl3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl3.channel15)
  return _internal_channel15();
}
inline void IrtsRl3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IrtsRl3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl3.channel15)
}

// uint32 channel16 = 4;
inline void IrtsRl3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IrtsRl3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IrtsRl3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRl3.channel16)
  return _internal_channel16();
}
inline void IrtsRl3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IrtsRl3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRl3.channel16)
}

// -------------------------------------------------------------------

// IrtsRr0

// uint32 channel1 = 1;
inline void IrtsRr0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IrtsRr0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IrtsRr0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr0.channel1)
  return _internal_channel1();
}
inline void IrtsRr0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IrtsRr0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr0.channel1)
}

// uint32 channel2 = 2;
inline void IrtsRr0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IrtsRr0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IrtsRr0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr0.channel2)
  return _internal_channel2();
}
inline void IrtsRr0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IrtsRr0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr0.channel2)
}

// uint32 channel3 = 3;
inline void IrtsRr0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IrtsRr0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IrtsRr0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr0.channel3)
  return _internal_channel3();
}
inline void IrtsRr0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IrtsRr0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr0.channel3)
}

// uint32 channel4 = 4;
inline void IrtsRr0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IrtsRr0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IrtsRr0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr0.channel4)
  return _internal_channel4();
}
inline void IrtsRr0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IrtsRr0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr0.channel4)
}

// -------------------------------------------------------------------

// IrtsRr1

// uint32 channel5 = 1;
inline void IrtsRr1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IrtsRr1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IrtsRr1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr1.channel5)
  return _internal_channel5();
}
inline void IrtsRr1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IrtsRr1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr1.channel5)
}

// uint32 channel6 = 2;
inline void IrtsRr1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IrtsRr1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IrtsRr1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr1.channel6)
  return _internal_channel6();
}
inline void IrtsRr1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IrtsRr1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr1.channel6)
}

// uint32 channel7 = 3;
inline void IrtsRr1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IrtsRr1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IrtsRr1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr1.channel7)
  return _internal_channel7();
}
inline void IrtsRr1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IrtsRr1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr1.channel7)
}

// uint32 channel8 = 4;
inline void IrtsRr1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IrtsRr1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IrtsRr1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr1.channel8)
  return _internal_channel8();
}
inline void IrtsRr1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IrtsRr1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr1.channel8)
}

// -------------------------------------------------------------------

// IrtsRr2

// uint32 channel9 = 1;
inline void IrtsRr2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IrtsRr2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IrtsRr2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr2.channel9)
  return _internal_channel9();
}
inline void IrtsRr2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IrtsRr2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr2.channel9)
}

// uint32 channel10 = 2;
inline void IrtsRr2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IrtsRr2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IrtsRr2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr2.channel10)
  return _internal_channel10();
}
inline void IrtsRr2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IrtsRr2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr2.channel10)
}

// uint32 channel11 = 3;
inline void IrtsRr2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IrtsRr2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IrtsRr2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr2.channel11)
  return _internal_channel11();
}
inline void IrtsRr2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IrtsRr2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr2.channel11)
}

// uint32 channel12 = 4;
inline void IrtsRr2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IrtsRr2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IrtsRr2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr2.channel12)
  return _internal_channel12();
}
inline void IrtsRr2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IrtsRr2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr2.channel12)
}

// -------------------------------------------------------------------

// IrtsRr3

// uint32 channel13 = 1;
inline void IrtsRr3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IrtsRr3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IrtsRr3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr3.channel13)
  return _internal_channel13();
}
inline void IrtsRr3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IrtsRr3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr3.channel13)
}

// uint32 channel14 = 2;
inline void IrtsRr3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IrtsRr3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IrtsRr3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr3.channel14)
  return _internal_channel14();
}
inline void IrtsRr3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IrtsRr3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr3.channel14)
}

// uint32 channel15 = 3;
inline void IrtsRr3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IrtsRr3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IrtsRr3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr3.channel15)
  return _internal_channel15();
}
inline void IrtsRr3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IrtsRr3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr3.channel15)
}

// uint32 channel16 = 4;
inline void IrtsRr3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IrtsRr3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IrtsRr3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IrtsRr3.channel16)
  return _internal_channel16();
}
inline void IrtsRr3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IrtsRr3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IrtsRr3.channel16)
}

// -------------------------------------------------------------------

// GpsCoords

// float latitude = 1;
inline void GpsCoords::clear_latitude() {
  latitude_ = 0;
}
inline float GpsCoords::_internal_latitude() const {
  return latitude_;
}
inline float GpsCoords::latitude() const {
  // @@protoc_insertion_point(field_get:secondary.GpsCoords.latitude)
  return _internal_latitude();
}
inline void GpsCoords::_internal_set_latitude(float value) {
  
  latitude_ = value;
}
inline void GpsCoords::set_latitude(float value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:secondary.GpsCoords.latitude)
}

// float longitude = 2;
inline void GpsCoords::clear_longitude() {
  longitude_ = 0;
}
inline float GpsCoords::_internal_longitude() const {
  return longitude_;
}
inline float GpsCoords::longitude() const {
  // @@protoc_insertion_point(field_get:secondary.GpsCoords.longitude)
  return _internal_longitude();
}
inline void GpsCoords::_internal_set_longitude(float value) {
  
  longitude_ = value;
}
inline void GpsCoords::set_longitude(float value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:secondary.GpsCoords.longitude)
}

// -------------------------------------------------------------------

// GpsSpeed

// uint32 speed = 1;
inline void GpsSpeed::clear_speed() {
  speed_ = 0u;
}
inline uint32_t GpsSpeed::_internal_speed() const {
  return speed_;
}
inline uint32_t GpsSpeed::speed() const {
  // @@protoc_insertion_point(field_get:secondary.GpsSpeed.speed)
  return _internal_speed();
}
inline void GpsSpeed::_internal_set_speed(uint32_t value) {
  
  speed_ = value;
}
inline void GpsSpeed::set_speed(uint32_t value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:secondary.GpsSpeed.speed)
}

// -------------------------------------------------------------------

// LapCount

// uint32 lap_count = 1;
inline void LapCount::clear_lap_count() {
  lap_count_ = 0u;
}
inline uint32_t LapCount::_internal_lap_count() const {
  return lap_count_;
}
inline uint32_t LapCount::lap_count() const {
  // @@protoc_insertion_point(field_get:secondary.LapCount.lap_count)
  return _internal_lap_count();
}
inline void LapCount::_internal_set_lap_count(uint32_t value) {
  
  lap_count_ = value;
}
inline void LapCount::set_lap_count(uint32_t value) {
  _internal_set_lap_count(value);
  // @@protoc_insertion_point(field_set:secondary.LapCount.lap_count)
}

// uint32 timestamp = 2;
inline void LapCount::clear_timestamp() {
  timestamp_ = 0u;
}
inline uint32_t LapCount::_internal_timestamp() const {
  return timestamp_;
}
inline uint32_t LapCount::timestamp() const {
  // @@protoc_insertion_point(field_get:secondary.LapCount.timestamp)
  return _internal_timestamp();
}
inline void LapCount::_internal_set_timestamp(uint32_t value) {
  
  timestamp_ = value;
}
inline void LapCount::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:secondary.LapCount.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace secondary

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto
