// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secondary.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_secondary_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_secondary_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_secondary_2eproto;
namespace secondary {
class GPS_COORDS;
struct GPS_COORDSDefaultTypeInternal;
extern GPS_COORDSDefaultTypeInternal _GPS_COORDS_default_instance_;
class GPS_SPEED;
struct GPS_SPEEDDefaultTypeInternal;
extern GPS_SPEEDDefaultTypeInternal _GPS_SPEED_default_instance_;
class IMU_ACCELERATION;
struct IMU_ACCELERATIONDefaultTypeInternal;
extern IMU_ACCELERATIONDefaultTypeInternal _IMU_ACCELERATION_default_instance_;
class IMU_ANGULAR_RATE;
struct IMU_ANGULAR_RATEDefaultTypeInternal;
extern IMU_ANGULAR_RATEDefaultTypeInternal _IMU_ANGULAR_RATE_default_instance_;
class IRTS_FL_0;
struct IRTS_FL_0DefaultTypeInternal;
extern IRTS_FL_0DefaultTypeInternal _IRTS_FL_0_default_instance_;
class IRTS_FL_1;
struct IRTS_FL_1DefaultTypeInternal;
extern IRTS_FL_1DefaultTypeInternal _IRTS_FL_1_default_instance_;
class IRTS_FL_2;
struct IRTS_FL_2DefaultTypeInternal;
extern IRTS_FL_2DefaultTypeInternal _IRTS_FL_2_default_instance_;
class IRTS_FL_3;
struct IRTS_FL_3DefaultTypeInternal;
extern IRTS_FL_3DefaultTypeInternal _IRTS_FL_3_default_instance_;
class IRTS_FR_0;
struct IRTS_FR_0DefaultTypeInternal;
extern IRTS_FR_0DefaultTypeInternal _IRTS_FR_0_default_instance_;
class IRTS_FR_1;
struct IRTS_FR_1DefaultTypeInternal;
extern IRTS_FR_1DefaultTypeInternal _IRTS_FR_1_default_instance_;
class IRTS_FR_2;
struct IRTS_FR_2DefaultTypeInternal;
extern IRTS_FR_2DefaultTypeInternal _IRTS_FR_2_default_instance_;
class IRTS_FR_3;
struct IRTS_FR_3DefaultTypeInternal;
extern IRTS_FR_3DefaultTypeInternal _IRTS_FR_3_default_instance_;
class IRTS_RL_0;
struct IRTS_RL_0DefaultTypeInternal;
extern IRTS_RL_0DefaultTypeInternal _IRTS_RL_0_default_instance_;
class IRTS_RL_1;
struct IRTS_RL_1DefaultTypeInternal;
extern IRTS_RL_1DefaultTypeInternal _IRTS_RL_1_default_instance_;
class IRTS_RL_2;
struct IRTS_RL_2DefaultTypeInternal;
extern IRTS_RL_2DefaultTypeInternal _IRTS_RL_2_default_instance_;
class IRTS_RL_3;
struct IRTS_RL_3DefaultTypeInternal;
extern IRTS_RL_3DefaultTypeInternal _IRTS_RL_3_default_instance_;
class IRTS_RR_0;
struct IRTS_RR_0DefaultTypeInternal;
extern IRTS_RR_0DefaultTypeInternal _IRTS_RR_0_default_instance_;
class IRTS_RR_1;
struct IRTS_RR_1DefaultTypeInternal;
extern IRTS_RR_1DefaultTypeInternal _IRTS_RR_1_default_instance_;
class IRTS_RR_2;
struct IRTS_RR_2DefaultTypeInternal;
extern IRTS_RR_2DefaultTypeInternal _IRTS_RR_2_default_instance_;
class IRTS_RR_3;
struct IRTS_RR_3DefaultTypeInternal;
extern IRTS_RR_3DefaultTypeInternal _IRTS_RR_3_default_instance_;
class LAP_COUNT;
struct LAP_COUNTDefaultTypeInternal;
extern LAP_COUNTDefaultTypeInternal _LAP_COUNT_default_instance_;
}  // namespace secondary
PROTOBUF_NAMESPACE_OPEN
template<> ::secondary::GPS_COORDS* Arena::CreateMaybeMessage<::secondary::GPS_COORDS>(Arena*);
template<> ::secondary::GPS_SPEED* Arena::CreateMaybeMessage<::secondary::GPS_SPEED>(Arena*);
template<> ::secondary::IMU_ACCELERATION* Arena::CreateMaybeMessage<::secondary::IMU_ACCELERATION>(Arena*);
template<> ::secondary::IMU_ANGULAR_RATE* Arena::CreateMaybeMessage<::secondary::IMU_ANGULAR_RATE>(Arena*);
template<> ::secondary::IRTS_FL_0* Arena::CreateMaybeMessage<::secondary::IRTS_FL_0>(Arena*);
template<> ::secondary::IRTS_FL_1* Arena::CreateMaybeMessage<::secondary::IRTS_FL_1>(Arena*);
template<> ::secondary::IRTS_FL_2* Arena::CreateMaybeMessage<::secondary::IRTS_FL_2>(Arena*);
template<> ::secondary::IRTS_FL_3* Arena::CreateMaybeMessage<::secondary::IRTS_FL_3>(Arena*);
template<> ::secondary::IRTS_FR_0* Arena::CreateMaybeMessage<::secondary::IRTS_FR_0>(Arena*);
template<> ::secondary::IRTS_FR_1* Arena::CreateMaybeMessage<::secondary::IRTS_FR_1>(Arena*);
template<> ::secondary::IRTS_FR_2* Arena::CreateMaybeMessage<::secondary::IRTS_FR_2>(Arena*);
template<> ::secondary::IRTS_FR_3* Arena::CreateMaybeMessage<::secondary::IRTS_FR_3>(Arena*);
template<> ::secondary::IRTS_RL_0* Arena::CreateMaybeMessage<::secondary::IRTS_RL_0>(Arena*);
template<> ::secondary::IRTS_RL_1* Arena::CreateMaybeMessage<::secondary::IRTS_RL_1>(Arena*);
template<> ::secondary::IRTS_RL_2* Arena::CreateMaybeMessage<::secondary::IRTS_RL_2>(Arena*);
template<> ::secondary::IRTS_RL_3* Arena::CreateMaybeMessage<::secondary::IRTS_RL_3>(Arena*);
template<> ::secondary::IRTS_RR_0* Arena::CreateMaybeMessage<::secondary::IRTS_RR_0>(Arena*);
template<> ::secondary::IRTS_RR_1* Arena::CreateMaybeMessage<::secondary::IRTS_RR_1>(Arena*);
template<> ::secondary::IRTS_RR_2* Arena::CreateMaybeMessage<::secondary::IRTS_RR_2>(Arena*);
template<> ::secondary::IRTS_RR_3* Arena::CreateMaybeMessage<::secondary::IRTS_RR_3>(Arena*);
template<> ::secondary::LAP_COUNT* Arena::CreateMaybeMessage<::secondary::LAP_COUNT>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace secondary {

// ===================================================================

class IMU_ANGULAR_RATE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IMU_ANGULAR_RATE) */ {
 public:
  inline IMU_ANGULAR_RATE() : IMU_ANGULAR_RATE(nullptr) {}
  ~IMU_ANGULAR_RATE() override;
  explicit constexpr IMU_ANGULAR_RATE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IMU_ANGULAR_RATE(const IMU_ANGULAR_RATE& from);
  IMU_ANGULAR_RATE(IMU_ANGULAR_RATE&& from) noexcept
    : IMU_ANGULAR_RATE() {
    *this = ::std::move(from);
  }

  inline IMU_ANGULAR_RATE& operator=(const IMU_ANGULAR_RATE& from) {
    CopyFrom(from);
    return *this;
  }
  inline IMU_ANGULAR_RATE& operator=(IMU_ANGULAR_RATE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IMU_ANGULAR_RATE& default_instance() {
    return *internal_default_instance();
  }
  static inline const IMU_ANGULAR_RATE* internal_default_instance() {
    return reinterpret_cast<const IMU_ANGULAR_RATE*>(
               &_IMU_ANGULAR_RATE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IMU_ANGULAR_RATE& a, IMU_ANGULAR_RATE& b) {
    a.Swap(&b);
  }
  inline void Swap(IMU_ANGULAR_RATE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IMU_ANGULAR_RATE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IMU_ANGULAR_RATE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IMU_ANGULAR_RATE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IMU_ANGULAR_RATE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IMU_ANGULAR_RATE& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMU_ANGULAR_RATE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IMU_ANGULAR_RATE";
  }
  protected:
  explicit IMU_ANGULAR_RATE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAngRateXFieldNumber = 1,
    kAngRateYFieldNumber = 2,
    kAngRateZFieldNumber = 3,
  };
  // uint32 ang_rate_x = 1;
  void clear_ang_rate_x();
  uint32_t ang_rate_x() const;
  void set_ang_rate_x(uint32_t value);
  private:
  uint32_t _internal_ang_rate_x() const;
  void _internal_set_ang_rate_x(uint32_t value);
  public:

  // uint32 ang_rate_y = 2;
  void clear_ang_rate_y();
  uint32_t ang_rate_y() const;
  void set_ang_rate_y(uint32_t value);
  private:
  uint32_t _internal_ang_rate_y() const;
  void _internal_set_ang_rate_y(uint32_t value);
  public:

  // uint32 ang_rate_z = 3;
  void clear_ang_rate_z();
  uint32_t ang_rate_z() const;
  void set_ang_rate_z(uint32_t value);
  private:
  uint32_t _internal_ang_rate_z() const;
  void _internal_set_ang_rate_z(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IMU_ANGULAR_RATE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t ang_rate_x_;
  uint32_t ang_rate_y_;
  uint32_t ang_rate_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IMU_ACCELERATION final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IMU_ACCELERATION) */ {
 public:
  inline IMU_ACCELERATION() : IMU_ACCELERATION(nullptr) {}
  ~IMU_ACCELERATION() override;
  explicit constexpr IMU_ACCELERATION(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IMU_ACCELERATION(const IMU_ACCELERATION& from);
  IMU_ACCELERATION(IMU_ACCELERATION&& from) noexcept
    : IMU_ACCELERATION() {
    *this = ::std::move(from);
  }

  inline IMU_ACCELERATION& operator=(const IMU_ACCELERATION& from) {
    CopyFrom(from);
    return *this;
  }
  inline IMU_ACCELERATION& operator=(IMU_ACCELERATION&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IMU_ACCELERATION& default_instance() {
    return *internal_default_instance();
  }
  static inline const IMU_ACCELERATION* internal_default_instance() {
    return reinterpret_cast<const IMU_ACCELERATION*>(
               &_IMU_ACCELERATION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IMU_ACCELERATION& a, IMU_ACCELERATION& b) {
    a.Swap(&b);
  }
  inline void Swap(IMU_ACCELERATION* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IMU_ACCELERATION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IMU_ACCELERATION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IMU_ACCELERATION>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IMU_ACCELERATION& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IMU_ACCELERATION& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMU_ACCELERATION* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IMU_ACCELERATION";
  }
  protected:
  explicit IMU_ACCELERATION(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccelXFieldNumber = 1,
    kAccelYFieldNumber = 2,
    kAccelZFieldNumber = 3,
  };
  // uint32 accel_x = 1;
  void clear_accel_x();
  uint32_t accel_x() const;
  void set_accel_x(uint32_t value);
  private:
  uint32_t _internal_accel_x() const;
  void _internal_set_accel_x(uint32_t value);
  public:

  // uint32 accel_y = 2;
  void clear_accel_y();
  uint32_t accel_y() const;
  void set_accel_y(uint32_t value);
  private:
  uint32_t _internal_accel_y() const;
  void _internal_set_accel_y(uint32_t value);
  public:

  // uint32 accel_z = 3;
  void clear_accel_z();
  uint32_t accel_z() const;
  void set_accel_z(uint32_t value);
  private:
  uint32_t _internal_accel_z() const;
  void _internal_set_accel_z(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IMU_ACCELERATION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t accel_x_;
  uint32_t accel_y_;
  uint32_t accel_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FL_0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FL_0) */ {
 public:
  inline IRTS_FL_0() : IRTS_FL_0(nullptr) {}
  ~IRTS_FL_0() override;
  explicit constexpr IRTS_FL_0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FL_0(const IRTS_FL_0& from);
  IRTS_FL_0(IRTS_FL_0&& from) noexcept
    : IRTS_FL_0() {
    *this = ::std::move(from);
  }

  inline IRTS_FL_0& operator=(const IRTS_FL_0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FL_0& operator=(IRTS_FL_0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FL_0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FL_0* internal_default_instance() {
    return reinterpret_cast<const IRTS_FL_0*>(
               &_IRTS_FL_0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IRTS_FL_0& a, IRTS_FL_0& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FL_0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FL_0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FL_0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FL_0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FL_0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FL_0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FL_0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FL_0";
  }
  protected:
  explicit IRTS_FL_0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FL_0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FL_1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FL_1) */ {
 public:
  inline IRTS_FL_1() : IRTS_FL_1(nullptr) {}
  ~IRTS_FL_1() override;
  explicit constexpr IRTS_FL_1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FL_1(const IRTS_FL_1& from);
  IRTS_FL_1(IRTS_FL_1&& from) noexcept
    : IRTS_FL_1() {
    *this = ::std::move(from);
  }

  inline IRTS_FL_1& operator=(const IRTS_FL_1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FL_1& operator=(IRTS_FL_1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FL_1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FL_1* internal_default_instance() {
    return reinterpret_cast<const IRTS_FL_1*>(
               &_IRTS_FL_1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(IRTS_FL_1& a, IRTS_FL_1& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FL_1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FL_1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FL_1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FL_1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FL_1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FL_1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FL_1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FL_1";
  }
  protected:
  explicit IRTS_FL_1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FL_1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FL_2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FL_2) */ {
 public:
  inline IRTS_FL_2() : IRTS_FL_2(nullptr) {}
  ~IRTS_FL_2() override;
  explicit constexpr IRTS_FL_2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FL_2(const IRTS_FL_2& from);
  IRTS_FL_2(IRTS_FL_2&& from) noexcept
    : IRTS_FL_2() {
    *this = ::std::move(from);
  }

  inline IRTS_FL_2& operator=(const IRTS_FL_2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FL_2& operator=(IRTS_FL_2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FL_2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FL_2* internal_default_instance() {
    return reinterpret_cast<const IRTS_FL_2*>(
               &_IRTS_FL_2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(IRTS_FL_2& a, IRTS_FL_2& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FL_2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FL_2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FL_2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FL_2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FL_2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FL_2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FL_2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FL_2";
  }
  protected:
  explicit IRTS_FL_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FL_2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FL_3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FL_3) */ {
 public:
  inline IRTS_FL_3() : IRTS_FL_3(nullptr) {}
  ~IRTS_FL_3() override;
  explicit constexpr IRTS_FL_3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FL_3(const IRTS_FL_3& from);
  IRTS_FL_3(IRTS_FL_3&& from) noexcept
    : IRTS_FL_3() {
    *this = ::std::move(from);
  }

  inline IRTS_FL_3& operator=(const IRTS_FL_3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FL_3& operator=(IRTS_FL_3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FL_3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FL_3* internal_default_instance() {
    return reinterpret_cast<const IRTS_FL_3*>(
               &_IRTS_FL_3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(IRTS_FL_3& a, IRTS_FL_3& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FL_3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FL_3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FL_3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FL_3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FL_3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FL_3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FL_3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FL_3";
  }
  protected:
  explicit IRTS_FL_3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FL_3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FR_0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FR_0) */ {
 public:
  inline IRTS_FR_0() : IRTS_FR_0(nullptr) {}
  ~IRTS_FR_0() override;
  explicit constexpr IRTS_FR_0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FR_0(const IRTS_FR_0& from);
  IRTS_FR_0(IRTS_FR_0&& from) noexcept
    : IRTS_FR_0() {
    *this = ::std::move(from);
  }

  inline IRTS_FR_0& operator=(const IRTS_FR_0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FR_0& operator=(IRTS_FR_0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FR_0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FR_0* internal_default_instance() {
    return reinterpret_cast<const IRTS_FR_0*>(
               &_IRTS_FR_0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IRTS_FR_0& a, IRTS_FR_0& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FR_0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FR_0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FR_0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FR_0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FR_0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FR_0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FR_0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FR_0";
  }
  protected:
  explicit IRTS_FR_0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FR_0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FR_1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FR_1) */ {
 public:
  inline IRTS_FR_1() : IRTS_FR_1(nullptr) {}
  ~IRTS_FR_1() override;
  explicit constexpr IRTS_FR_1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FR_1(const IRTS_FR_1& from);
  IRTS_FR_1(IRTS_FR_1&& from) noexcept
    : IRTS_FR_1() {
    *this = ::std::move(from);
  }

  inline IRTS_FR_1& operator=(const IRTS_FR_1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FR_1& operator=(IRTS_FR_1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FR_1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FR_1* internal_default_instance() {
    return reinterpret_cast<const IRTS_FR_1*>(
               &_IRTS_FR_1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IRTS_FR_1& a, IRTS_FR_1& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FR_1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FR_1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FR_1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FR_1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FR_1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FR_1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FR_1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FR_1";
  }
  protected:
  explicit IRTS_FR_1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FR_1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FR_2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FR_2) */ {
 public:
  inline IRTS_FR_2() : IRTS_FR_2(nullptr) {}
  ~IRTS_FR_2() override;
  explicit constexpr IRTS_FR_2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FR_2(const IRTS_FR_2& from);
  IRTS_FR_2(IRTS_FR_2&& from) noexcept
    : IRTS_FR_2() {
    *this = ::std::move(from);
  }

  inline IRTS_FR_2& operator=(const IRTS_FR_2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FR_2& operator=(IRTS_FR_2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FR_2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FR_2* internal_default_instance() {
    return reinterpret_cast<const IRTS_FR_2*>(
               &_IRTS_FR_2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(IRTS_FR_2& a, IRTS_FR_2& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FR_2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FR_2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FR_2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FR_2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FR_2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FR_2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FR_2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FR_2";
  }
  protected:
  explicit IRTS_FR_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FR_2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_FR_3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_FR_3) */ {
 public:
  inline IRTS_FR_3() : IRTS_FR_3(nullptr) {}
  ~IRTS_FR_3() override;
  explicit constexpr IRTS_FR_3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_FR_3(const IRTS_FR_3& from);
  IRTS_FR_3(IRTS_FR_3&& from) noexcept
    : IRTS_FR_3() {
    *this = ::std::move(from);
  }

  inline IRTS_FR_3& operator=(const IRTS_FR_3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_FR_3& operator=(IRTS_FR_3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_FR_3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_FR_3* internal_default_instance() {
    return reinterpret_cast<const IRTS_FR_3*>(
               &_IRTS_FR_3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IRTS_FR_3& a, IRTS_FR_3& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_FR_3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_FR_3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_FR_3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_FR_3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_FR_3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_FR_3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_FR_3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_FR_3";
  }
  protected:
  explicit IRTS_FR_3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_FR_3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RL_0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RL_0) */ {
 public:
  inline IRTS_RL_0() : IRTS_RL_0(nullptr) {}
  ~IRTS_RL_0() override;
  explicit constexpr IRTS_RL_0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RL_0(const IRTS_RL_0& from);
  IRTS_RL_0(IRTS_RL_0&& from) noexcept
    : IRTS_RL_0() {
    *this = ::std::move(from);
  }

  inline IRTS_RL_0& operator=(const IRTS_RL_0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RL_0& operator=(IRTS_RL_0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RL_0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RL_0* internal_default_instance() {
    return reinterpret_cast<const IRTS_RL_0*>(
               &_IRTS_RL_0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IRTS_RL_0& a, IRTS_RL_0& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RL_0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RL_0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RL_0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RL_0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RL_0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RL_0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RL_0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RL_0";
  }
  protected:
  explicit IRTS_RL_0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RL_0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RL_1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RL_1) */ {
 public:
  inline IRTS_RL_1() : IRTS_RL_1(nullptr) {}
  ~IRTS_RL_1() override;
  explicit constexpr IRTS_RL_1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RL_1(const IRTS_RL_1& from);
  IRTS_RL_1(IRTS_RL_1&& from) noexcept
    : IRTS_RL_1() {
    *this = ::std::move(from);
  }

  inline IRTS_RL_1& operator=(const IRTS_RL_1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RL_1& operator=(IRTS_RL_1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RL_1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RL_1* internal_default_instance() {
    return reinterpret_cast<const IRTS_RL_1*>(
               &_IRTS_RL_1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(IRTS_RL_1& a, IRTS_RL_1& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RL_1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RL_1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RL_1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RL_1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RL_1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RL_1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RL_1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RL_1";
  }
  protected:
  explicit IRTS_RL_1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RL_1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RL_2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RL_2) */ {
 public:
  inline IRTS_RL_2() : IRTS_RL_2(nullptr) {}
  ~IRTS_RL_2() override;
  explicit constexpr IRTS_RL_2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RL_2(const IRTS_RL_2& from);
  IRTS_RL_2(IRTS_RL_2&& from) noexcept
    : IRTS_RL_2() {
    *this = ::std::move(from);
  }

  inline IRTS_RL_2& operator=(const IRTS_RL_2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RL_2& operator=(IRTS_RL_2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RL_2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RL_2* internal_default_instance() {
    return reinterpret_cast<const IRTS_RL_2*>(
               &_IRTS_RL_2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(IRTS_RL_2& a, IRTS_RL_2& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RL_2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RL_2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RL_2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RL_2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RL_2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RL_2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RL_2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RL_2";
  }
  protected:
  explicit IRTS_RL_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RL_2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RL_3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RL_3) */ {
 public:
  inline IRTS_RL_3() : IRTS_RL_3(nullptr) {}
  ~IRTS_RL_3() override;
  explicit constexpr IRTS_RL_3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RL_3(const IRTS_RL_3& from);
  IRTS_RL_3(IRTS_RL_3&& from) noexcept
    : IRTS_RL_3() {
    *this = ::std::move(from);
  }

  inline IRTS_RL_3& operator=(const IRTS_RL_3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RL_3& operator=(IRTS_RL_3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RL_3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RL_3* internal_default_instance() {
    return reinterpret_cast<const IRTS_RL_3*>(
               &_IRTS_RL_3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(IRTS_RL_3& a, IRTS_RL_3& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RL_3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RL_3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RL_3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RL_3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RL_3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RL_3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RL_3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RL_3";
  }
  protected:
  explicit IRTS_RL_3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RL_3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RR_0 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RR_0) */ {
 public:
  inline IRTS_RR_0() : IRTS_RR_0(nullptr) {}
  ~IRTS_RR_0() override;
  explicit constexpr IRTS_RR_0(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RR_0(const IRTS_RR_0& from);
  IRTS_RR_0(IRTS_RR_0&& from) noexcept
    : IRTS_RR_0() {
    *this = ::std::move(from);
  }

  inline IRTS_RR_0& operator=(const IRTS_RR_0& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RR_0& operator=(IRTS_RR_0&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RR_0& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RR_0* internal_default_instance() {
    return reinterpret_cast<const IRTS_RR_0*>(
               &_IRTS_RR_0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(IRTS_RR_0& a, IRTS_RR_0& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RR_0* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RR_0* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RR_0* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RR_0>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RR_0& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RR_0& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RR_0* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RR_0";
  }
  protected:
  explicit IRTS_RR_0(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel1FieldNumber = 1,
    kChannel2FieldNumber = 2,
    kChannel3FieldNumber = 3,
    kChannel4FieldNumber = 4,
  };
  // uint32 channel1 = 1;
  void clear_channel1();
  uint32_t channel1() const;
  void set_channel1(uint32_t value);
  private:
  uint32_t _internal_channel1() const;
  void _internal_set_channel1(uint32_t value);
  public:

  // uint32 channel2 = 2;
  void clear_channel2();
  uint32_t channel2() const;
  void set_channel2(uint32_t value);
  private:
  uint32_t _internal_channel2() const;
  void _internal_set_channel2(uint32_t value);
  public:

  // uint32 channel3 = 3;
  void clear_channel3();
  uint32_t channel3() const;
  void set_channel3(uint32_t value);
  private:
  uint32_t _internal_channel3() const;
  void _internal_set_channel3(uint32_t value);
  public:

  // uint32 channel4 = 4;
  void clear_channel4();
  uint32_t channel4() const;
  void set_channel4(uint32_t value);
  private:
  uint32_t _internal_channel4() const;
  void _internal_set_channel4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RR_0)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel1_;
  uint32_t channel2_;
  uint32_t channel3_;
  uint32_t channel4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RR_1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RR_1) */ {
 public:
  inline IRTS_RR_1() : IRTS_RR_1(nullptr) {}
  ~IRTS_RR_1() override;
  explicit constexpr IRTS_RR_1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RR_1(const IRTS_RR_1& from);
  IRTS_RR_1(IRTS_RR_1&& from) noexcept
    : IRTS_RR_1() {
    *this = ::std::move(from);
  }

  inline IRTS_RR_1& operator=(const IRTS_RR_1& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RR_1& operator=(IRTS_RR_1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RR_1& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RR_1* internal_default_instance() {
    return reinterpret_cast<const IRTS_RR_1*>(
               &_IRTS_RR_1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(IRTS_RR_1& a, IRTS_RR_1& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RR_1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RR_1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RR_1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RR_1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RR_1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RR_1& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RR_1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RR_1";
  }
  protected:
  explicit IRTS_RR_1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel5FieldNumber = 1,
    kChannel6FieldNumber = 2,
    kChannel7FieldNumber = 3,
    kChannel8FieldNumber = 4,
  };
  // uint32 channel5 = 1;
  void clear_channel5();
  uint32_t channel5() const;
  void set_channel5(uint32_t value);
  private:
  uint32_t _internal_channel5() const;
  void _internal_set_channel5(uint32_t value);
  public:

  // uint32 channel6 = 2;
  void clear_channel6();
  uint32_t channel6() const;
  void set_channel6(uint32_t value);
  private:
  uint32_t _internal_channel6() const;
  void _internal_set_channel6(uint32_t value);
  public:

  // uint32 channel7 = 3;
  void clear_channel7();
  uint32_t channel7() const;
  void set_channel7(uint32_t value);
  private:
  uint32_t _internal_channel7() const;
  void _internal_set_channel7(uint32_t value);
  public:

  // uint32 channel8 = 4;
  void clear_channel8();
  uint32_t channel8() const;
  void set_channel8(uint32_t value);
  private:
  uint32_t _internal_channel8() const;
  void _internal_set_channel8(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RR_1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel5_;
  uint32_t channel6_;
  uint32_t channel7_;
  uint32_t channel8_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RR_2 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RR_2) */ {
 public:
  inline IRTS_RR_2() : IRTS_RR_2(nullptr) {}
  ~IRTS_RR_2() override;
  explicit constexpr IRTS_RR_2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RR_2(const IRTS_RR_2& from);
  IRTS_RR_2(IRTS_RR_2&& from) noexcept
    : IRTS_RR_2() {
    *this = ::std::move(from);
  }

  inline IRTS_RR_2& operator=(const IRTS_RR_2& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RR_2& operator=(IRTS_RR_2&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RR_2& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RR_2* internal_default_instance() {
    return reinterpret_cast<const IRTS_RR_2*>(
               &_IRTS_RR_2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(IRTS_RR_2& a, IRTS_RR_2& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RR_2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RR_2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RR_2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RR_2>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RR_2& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RR_2& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RR_2* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RR_2";
  }
  protected:
  explicit IRTS_RR_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel9FieldNumber = 1,
    kChannel10FieldNumber = 2,
    kChannel11FieldNumber = 3,
    kChannel12FieldNumber = 4,
  };
  // uint32 channel9 = 1;
  void clear_channel9();
  uint32_t channel9() const;
  void set_channel9(uint32_t value);
  private:
  uint32_t _internal_channel9() const;
  void _internal_set_channel9(uint32_t value);
  public:

  // uint32 channel10 = 2;
  void clear_channel10();
  uint32_t channel10() const;
  void set_channel10(uint32_t value);
  private:
  uint32_t _internal_channel10() const;
  void _internal_set_channel10(uint32_t value);
  public:

  // uint32 channel11 = 3;
  void clear_channel11();
  uint32_t channel11() const;
  void set_channel11(uint32_t value);
  private:
  uint32_t _internal_channel11() const;
  void _internal_set_channel11(uint32_t value);
  public:

  // uint32 channel12 = 4;
  void clear_channel12();
  uint32_t channel12() const;
  void set_channel12(uint32_t value);
  private:
  uint32_t _internal_channel12() const;
  void _internal_set_channel12(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RR_2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel9_;
  uint32_t channel10_;
  uint32_t channel11_;
  uint32_t channel12_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class IRTS_RR_3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.IRTS_RR_3) */ {
 public:
  inline IRTS_RR_3() : IRTS_RR_3(nullptr) {}
  ~IRTS_RR_3() override;
  explicit constexpr IRTS_RR_3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IRTS_RR_3(const IRTS_RR_3& from);
  IRTS_RR_3(IRTS_RR_3&& from) noexcept
    : IRTS_RR_3() {
    *this = ::std::move(from);
  }

  inline IRTS_RR_3& operator=(const IRTS_RR_3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IRTS_RR_3& operator=(IRTS_RR_3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IRTS_RR_3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IRTS_RR_3* internal_default_instance() {
    return reinterpret_cast<const IRTS_RR_3*>(
               &_IRTS_RR_3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(IRTS_RR_3& a, IRTS_RR_3& b) {
    a.Swap(&b);
  }
  inline void Swap(IRTS_RR_3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IRTS_RR_3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IRTS_RR_3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IRTS_RR_3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IRTS_RR_3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IRTS_RR_3& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IRTS_RR_3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.IRTS_RR_3";
  }
  protected:
  explicit IRTS_RR_3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannel13FieldNumber = 1,
    kChannel14FieldNumber = 2,
    kChannel15FieldNumber = 3,
    kChannel16FieldNumber = 4,
  };
  // uint32 channel13 = 1;
  void clear_channel13();
  uint32_t channel13() const;
  void set_channel13(uint32_t value);
  private:
  uint32_t _internal_channel13() const;
  void _internal_set_channel13(uint32_t value);
  public:

  // uint32 channel14 = 2;
  void clear_channel14();
  uint32_t channel14() const;
  void set_channel14(uint32_t value);
  private:
  uint32_t _internal_channel14() const;
  void _internal_set_channel14(uint32_t value);
  public:

  // uint32 channel15 = 3;
  void clear_channel15();
  uint32_t channel15() const;
  void set_channel15(uint32_t value);
  private:
  uint32_t _internal_channel15() const;
  void _internal_set_channel15(uint32_t value);
  public:

  // uint32 channel16 = 4;
  void clear_channel16();
  uint32_t channel16() const;
  void set_channel16(uint32_t value);
  private:
  uint32_t _internal_channel16() const;
  void _internal_set_channel16(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.IRTS_RR_3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t channel13_;
  uint32_t channel14_;
  uint32_t channel15_;
  uint32_t channel16_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class GPS_COORDS final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.GPS_COORDS) */ {
 public:
  inline GPS_COORDS() : GPS_COORDS(nullptr) {}
  ~GPS_COORDS() override;
  explicit constexpr GPS_COORDS(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GPS_COORDS(const GPS_COORDS& from);
  GPS_COORDS(GPS_COORDS&& from) noexcept
    : GPS_COORDS() {
    *this = ::std::move(from);
  }

  inline GPS_COORDS& operator=(const GPS_COORDS& from) {
    CopyFrom(from);
    return *this;
  }
  inline GPS_COORDS& operator=(GPS_COORDS&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GPS_COORDS& default_instance() {
    return *internal_default_instance();
  }
  static inline const GPS_COORDS* internal_default_instance() {
    return reinterpret_cast<const GPS_COORDS*>(
               &_GPS_COORDS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GPS_COORDS& a, GPS_COORDS& b) {
    a.Swap(&b);
  }
  inline void Swap(GPS_COORDS* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GPS_COORDS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GPS_COORDS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GPS_COORDS>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GPS_COORDS& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GPS_COORDS& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GPS_COORDS* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.GPS_COORDS";
  }
  protected:
  explicit GPS_COORDS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // float latitude = 1;
  void clear_latitude();
  float latitude() const;
  void set_latitude(float value);
  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);
  public:

  // float longitude = 2;
  void clear_longitude();
  float longitude() const;
  void set_longitude(float value);
  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.GPS_COORDS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float latitude_;
  float longitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class GPS_SPEED final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.GPS_SPEED) */ {
 public:
  inline GPS_SPEED() : GPS_SPEED(nullptr) {}
  ~GPS_SPEED() override;
  explicit constexpr GPS_SPEED(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GPS_SPEED(const GPS_SPEED& from);
  GPS_SPEED(GPS_SPEED&& from) noexcept
    : GPS_SPEED() {
    *this = ::std::move(from);
  }

  inline GPS_SPEED& operator=(const GPS_SPEED& from) {
    CopyFrom(from);
    return *this;
  }
  inline GPS_SPEED& operator=(GPS_SPEED&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GPS_SPEED& default_instance() {
    return *internal_default_instance();
  }
  static inline const GPS_SPEED* internal_default_instance() {
    return reinterpret_cast<const GPS_SPEED*>(
               &_GPS_SPEED_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GPS_SPEED& a, GPS_SPEED& b) {
    a.Swap(&b);
  }
  inline void Swap(GPS_SPEED* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GPS_SPEED* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GPS_SPEED* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GPS_SPEED>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GPS_SPEED& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GPS_SPEED& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GPS_SPEED* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.GPS_SPEED";
  }
  protected:
  explicit GPS_SPEED(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeedFieldNumber = 1,
  };
  // uint32 speed = 1;
  void clear_speed();
  uint32_t speed() const;
  void set_speed(uint32_t value);
  private:
  uint32_t _internal_speed() const;
  void _internal_set_speed(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.GPS_SPEED)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// -------------------------------------------------------------------

class LAP_COUNT final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:secondary.LAP_COUNT) */ {
 public:
  inline LAP_COUNT() : LAP_COUNT(nullptr) {}
  ~LAP_COUNT() override;
  explicit constexpr LAP_COUNT(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LAP_COUNT(const LAP_COUNT& from);
  LAP_COUNT(LAP_COUNT&& from) noexcept
    : LAP_COUNT() {
    *this = ::std::move(from);
  }

  inline LAP_COUNT& operator=(const LAP_COUNT& from) {
    CopyFrom(from);
    return *this;
  }
  inline LAP_COUNT& operator=(LAP_COUNT&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LAP_COUNT& default_instance() {
    return *internal_default_instance();
  }
  static inline const LAP_COUNT* internal_default_instance() {
    return reinterpret_cast<const LAP_COUNT*>(
               &_LAP_COUNT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(LAP_COUNT& a, LAP_COUNT& b) {
    a.Swap(&b);
  }
  inline void Swap(LAP_COUNT* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LAP_COUNT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LAP_COUNT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LAP_COUNT>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LAP_COUNT& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const LAP_COUNT& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LAP_COUNT* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "secondary.LAP_COUNT";
  }
  protected:
  explicit LAP_COUNT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLapCountFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // uint32 lap_count = 1;
  void clear_lap_count();
  uint32_t lap_count() const;
  void set_lap_count(uint32_t value);
  private:
  uint32_t _internal_lap_count() const;
  void _internal_set_lap_count(uint32_t value);
  public:

  // uint32 timestamp = 2;
  void clear_timestamp();
  uint32_t timestamp() const;
  void set_timestamp(uint32_t value);
  private:
  uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:secondary.LAP_COUNT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t lap_count_;
  uint32_t timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_secondary_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IMU_ANGULAR_RATE

// uint32 ang_rate_x = 1;
inline void IMU_ANGULAR_RATE::clear_ang_rate_x() {
  ang_rate_x_ = 0u;
}
inline uint32_t IMU_ANGULAR_RATE::_internal_ang_rate_x() const {
  return ang_rate_x_;
}
inline uint32_t IMU_ANGULAR_RATE::ang_rate_x() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ANGULAR_RATE.ang_rate_x)
  return _internal_ang_rate_x();
}
inline void IMU_ANGULAR_RATE::_internal_set_ang_rate_x(uint32_t value) {
  
  ang_rate_x_ = value;
}
inline void IMU_ANGULAR_RATE::set_ang_rate_x(uint32_t value) {
  _internal_set_ang_rate_x(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ANGULAR_RATE.ang_rate_x)
}

// uint32 ang_rate_y = 2;
inline void IMU_ANGULAR_RATE::clear_ang_rate_y() {
  ang_rate_y_ = 0u;
}
inline uint32_t IMU_ANGULAR_RATE::_internal_ang_rate_y() const {
  return ang_rate_y_;
}
inline uint32_t IMU_ANGULAR_RATE::ang_rate_y() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ANGULAR_RATE.ang_rate_y)
  return _internal_ang_rate_y();
}
inline void IMU_ANGULAR_RATE::_internal_set_ang_rate_y(uint32_t value) {
  
  ang_rate_y_ = value;
}
inline void IMU_ANGULAR_RATE::set_ang_rate_y(uint32_t value) {
  _internal_set_ang_rate_y(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ANGULAR_RATE.ang_rate_y)
}

// uint32 ang_rate_z = 3;
inline void IMU_ANGULAR_RATE::clear_ang_rate_z() {
  ang_rate_z_ = 0u;
}
inline uint32_t IMU_ANGULAR_RATE::_internal_ang_rate_z() const {
  return ang_rate_z_;
}
inline uint32_t IMU_ANGULAR_RATE::ang_rate_z() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ANGULAR_RATE.ang_rate_z)
  return _internal_ang_rate_z();
}
inline void IMU_ANGULAR_RATE::_internal_set_ang_rate_z(uint32_t value) {
  
  ang_rate_z_ = value;
}
inline void IMU_ANGULAR_RATE::set_ang_rate_z(uint32_t value) {
  _internal_set_ang_rate_z(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ANGULAR_RATE.ang_rate_z)
}

// -------------------------------------------------------------------

// IMU_ACCELERATION

// uint32 accel_x = 1;
inline void IMU_ACCELERATION::clear_accel_x() {
  accel_x_ = 0u;
}
inline uint32_t IMU_ACCELERATION::_internal_accel_x() const {
  return accel_x_;
}
inline uint32_t IMU_ACCELERATION::accel_x() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ACCELERATION.accel_x)
  return _internal_accel_x();
}
inline void IMU_ACCELERATION::_internal_set_accel_x(uint32_t value) {
  
  accel_x_ = value;
}
inline void IMU_ACCELERATION::set_accel_x(uint32_t value) {
  _internal_set_accel_x(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ACCELERATION.accel_x)
}

// uint32 accel_y = 2;
inline void IMU_ACCELERATION::clear_accel_y() {
  accel_y_ = 0u;
}
inline uint32_t IMU_ACCELERATION::_internal_accel_y() const {
  return accel_y_;
}
inline uint32_t IMU_ACCELERATION::accel_y() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ACCELERATION.accel_y)
  return _internal_accel_y();
}
inline void IMU_ACCELERATION::_internal_set_accel_y(uint32_t value) {
  
  accel_y_ = value;
}
inline void IMU_ACCELERATION::set_accel_y(uint32_t value) {
  _internal_set_accel_y(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ACCELERATION.accel_y)
}

// uint32 accel_z = 3;
inline void IMU_ACCELERATION::clear_accel_z() {
  accel_z_ = 0u;
}
inline uint32_t IMU_ACCELERATION::_internal_accel_z() const {
  return accel_z_;
}
inline uint32_t IMU_ACCELERATION::accel_z() const {
  // @@protoc_insertion_point(field_get:secondary.IMU_ACCELERATION.accel_z)
  return _internal_accel_z();
}
inline void IMU_ACCELERATION::_internal_set_accel_z(uint32_t value) {
  
  accel_z_ = value;
}
inline void IMU_ACCELERATION::set_accel_z(uint32_t value) {
  _internal_set_accel_z(value);
  // @@protoc_insertion_point(field_set:secondary.IMU_ACCELERATION.accel_z)
}

// -------------------------------------------------------------------

// IRTS_FL_0

// uint32 channel1 = 1;
inline void IRTS_FL_0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IRTS_FL_0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IRTS_FL_0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_0.channel1)
  return _internal_channel1();
}
inline void IRTS_FL_0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IRTS_FL_0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_0.channel1)
}

// uint32 channel2 = 2;
inline void IRTS_FL_0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IRTS_FL_0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IRTS_FL_0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_0.channel2)
  return _internal_channel2();
}
inline void IRTS_FL_0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IRTS_FL_0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_0.channel2)
}

// uint32 channel3 = 3;
inline void IRTS_FL_0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IRTS_FL_0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IRTS_FL_0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_0.channel3)
  return _internal_channel3();
}
inline void IRTS_FL_0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IRTS_FL_0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_0.channel3)
}

// uint32 channel4 = 4;
inline void IRTS_FL_0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IRTS_FL_0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IRTS_FL_0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_0.channel4)
  return _internal_channel4();
}
inline void IRTS_FL_0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IRTS_FL_0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_0.channel4)
}

// -------------------------------------------------------------------

// IRTS_FL_1

// uint32 channel5 = 1;
inline void IRTS_FL_1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IRTS_FL_1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IRTS_FL_1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_1.channel5)
  return _internal_channel5();
}
inline void IRTS_FL_1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IRTS_FL_1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_1.channel5)
}

// uint32 channel6 = 2;
inline void IRTS_FL_1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IRTS_FL_1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IRTS_FL_1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_1.channel6)
  return _internal_channel6();
}
inline void IRTS_FL_1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IRTS_FL_1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_1.channel6)
}

// uint32 channel7 = 3;
inline void IRTS_FL_1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IRTS_FL_1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IRTS_FL_1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_1.channel7)
  return _internal_channel7();
}
inline void IRTS_FL_1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IRTS_FL_1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_1.channel7)
}

// uint32 channel8 = 4;
inline void IRTS_FL_1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IRTS_FL_1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IRTS_FL_1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_1.channel8)
  return _internal_channel8();
}
inline void IRTS_FL_1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IRTS_FL_1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_1.channel8)
}

// -------------------------------------------------------------------

// IRTS_FL_2

// uint32 channel9 = 1;
inline void IRTS_FL_2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IRTS_FL_2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IRTS_FL_2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_2.channel9)
  return _internal_channel9();
}
inline void IRTS_FL_2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IRTS_FL_2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_2.channel9)
}

// uint32 channel10 = 2;
inline void IRTS_FL_2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IRTS_FL_2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IRTS_FL_2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_2.channel10)
  return _internal_channel10();
}
inline void IRTS_FL_2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IRTS_FL_2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_2.channel10)
}

// uint32 channel11 = 3;
inline void IRTS_FL_2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IRTS_FL_2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IRTS_FL_2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_2.channel11)
  return _internal_channel11();
}
inline void IRTS_FL_2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IRTS_FL_2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_2.channel11)
}

// uint32 channel12 = 4;
inline void IRTS_FL_2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IRTS_FL_2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IRTS_FL_2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_2.channel12)
  return _internal_channel12();
}
inline void IRTS_FL_2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IRTS_FL_2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_2.channel12)
}

// -------------------------------------------------------------------

// IRTS_FL_3

// uint32 channel13 = 1;
inline void IRTS_FL_3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IRTS_FL_3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IRTS_FL_3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_3.channel13)
  return _internal_channel13();
}
inline void IRTS_FL_3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IRTS_FL_3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_3.channel13)
}

// uint32 channel14 = 2;
inline void IRTS_FL_3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IRTS_FL_3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IRTS_FL_3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_3.channel14)
  return _internal_channel14();
}
inline void IRTS_FL_3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IRTS_FL_3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_3.channel14)
}

// uint32 channel15 = 3;
inline void IRTS_FL_3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IRTS_FL_3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IRTS_FL_3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_3.channel15)
  return _internal_channel15();
}
inline void IRTS_FL_3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IRTS_FL_3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_3.channel15)
}

// uint32 channel16 = 4;
inline void IRTS_FL_3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IRTS_FL_3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IRTS_FL_3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FL_3.channel16)
  return _internal_channel16();
}
inline void IRTS_FL_3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IRTS_FL_3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FL_3.channel16)
}

// -------------------------------------------------------------------

// IRTS_FR_0

// uint32 channel1 = 1;
inline void IRTS_FR_0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IRTS_FR_0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IRTS_FR_0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_0.channel1)
  return _internal_channel1();
}
inline void IRTS_FR_0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IRTS_FR_0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_0.channel1)
}

// uint32 channel2 = 2;
inline void IRTS_FR_0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IRTS_FR_0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IRTS_FR_0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_0.channel2)
  return _internal_channel2();
}
inline void IRTS_FR_0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IRTS_FR_0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_0.channel2)
}

// uint32 channel3 = 3;
inline void IRTS_FR_0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IRTS_FR_0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IRTS_FR_0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_0.channel3)
  return _internal_channel3();
}
inline void IRTS_FR_0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IRTS_FR_0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_0.channel3)
}

// uint32 channel4 = 4;
inline void IRTS_FR_0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IRTS_FR_0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IRTS_FR_0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_0.channel4)
  return _internal_channel4();
}
inline void IRTS_FR_0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IRTS_FR_0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_0.channel4)
}

// -------------------------------------------------------------------

// IRTS_FR_1

// uint32 channel5 = 1;
inline void IRTS_FR_1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IRTS_FR_1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IRTS_FR_1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_1.channel5)
  return _internal_channel5();
}
inline void IRTS_FR_1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IRTS_FR_1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_1.channel5)
}

// uint32 channel6 = 2;
inline void IRTS_FR_1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IRTS_FR_1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IRTS_FR_1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_1.channel6)
  return _internal_channel6();
}
inline void IRTS_FR_1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IRTS_FR_1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_1.channel6)
}

// uint32 channel7 = 3;
inline void IRTS_FR_1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IRTS_FR_1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IRTS_FR_1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_1.channel7)
  return _internal_channel7();
}
inline void IRTS_FR_1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IRTS_FR_1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_1.channel7)
}

// uint32 channel8 = 4;
inline void IRTS_FR_1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IRTS_FR_1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IRTS_FR_1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_1.channel8)
  return _internal_channel8();
}
inline void IRTS_FR_1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IRTS_FR_1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_1.channel8)
}

// -------------------------------------------------------------------

// IRTS_FR_2

// uint32 channel9 = 1;
inline void IRTS_FR_2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IRTS_FR_2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IRTS_FR_2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_2.channel9)
  return _internal_channel9();
}
inline void IRTS_FR_2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IRTS_FR_2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_2.channel9)
}

// uint32 channel10 = 2;
inline void IRTS_FR_2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IRTS_FR_2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IRTS_FR_2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_2.channel10)
  return _internal_channel10();
}
inline void IRTS_FR_2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IRTS_FR_2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_2.channel10)
}

// uint32 channel11 = 3;
inline void IRTS_FR_2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IRTS_FR_2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IRTS_FR_2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_2.channel11)
  return _internal_channel11();
}
inline void IRTS_FR_2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IRTS_FR_2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_2.channel11)
}

// uint32 channel12 = 4;
inline void IRTS_FR_2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IRTS_FR_2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IRTS_FR_2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_2.channel12)
  return _internal_channel12();
}
inline void IRTS_FR_2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IRTS_FR_2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_2.channel12)
}

// -------------------------------------------------------------------

// IRTS_FR_3

// uint32 channel13 = 1;
inline void IRTS_FR_3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IRTS_FR_3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IRTS_FR_3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_3.channel13)
  return _internal_channel13();
}
inline void IRTS_FR_3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IRTS_FR_3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_3.channel13)
}

// uint32 channel14 = 2;
inline void IRTS_FR_3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IRTS_FR_3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IRTS_FR_3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_3.channel14)
  return _internal_channel14();
}
inline void IRTS_FR_3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IRTS_FR_3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_3.channel14)
}

// uint32 channel15 = 3;
inline void IRTS_FR_3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IRTS_FR_3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IRTS_FR_3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_3.channel15)
  return _internal_channel15();
}
inline void IRTS_FR_3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IRTS_FR_3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_3.channel15)
}

// uint32 channel16 = 4;
inline void IRTS_FR_3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IRTS_FR_3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IRTS_FR_3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_FR_3.channel16)
  return _internal_channel16();
}
inline void IRTS_FR_3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IRTS_FR_3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_FR_3.channel16)
}

// -------------------------------------------------------------------

// IRTS_RL_0

// uint32 channel1 = 1;
inline void IRTS_RL_0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IRTS_RL_0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IRTS_RL_0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_0.channel1)
  return _internal_channel1();
}
inline void IRTS_RL_0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IRTS_RL_0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_0.channel1)
}

// uint32 channel2 = 2;
inline void IRTS_RL_0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IRTS_RL_0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IRTS_RL_0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_0.channel2)
  return _internal_channel2();
}
inline void IRTS_RL_0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IRTS_RL_0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_0.channel2)
}

// uint32 channel3 = 3;
inline void IRTS_RL_0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IRTS_RL_0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IRTS_RL_0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_0.channel3)
  return _internal_channel3();
}
inline void IRTS_RL_0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IRTS_RL_0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_0.channel3)
}

// uint32 channel4 = 4;
inline void IRTS_RL_0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IRTS_RL_0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IRTS_RL_0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_0.channel4)
  return _internal_channel4();
}
inline void IRTS_RL_0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IRTS_RL_0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_0.channel4)
}

// -------------------------------------------------------------------

// IRTS_RL_1

// uint32 channel5 = 1;
inline void IRTS_RL_1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IRTS_RL_1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IRTS_RL_1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_1.channel5)
  return _internal_channel5();
}
inline void IRTS_RL_1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IRTS_RL_1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_1.channel5)
}

// uint32 channel6 = 2;
inline void IRTS_RL_1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IRTS_RL_1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IRTS_RL_1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_1.channel6)
  return _internal_channel6();
}
inline void IRTS_RL_1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IRTS_RL_1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_1.channel6)
}

// uint32 channel7 = 3;
inline void IRTS_RL_1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IRTS_RL_1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IRTS_RL_1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_1.channel7)
  return _internal_channel7();
}
inline void IRTS_RL_1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IRTS_RL_1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_1.channel7)
}

// uint32 channel8 = 4;
inline void IRTS_RL_1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IRTS_RL_1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IRTS_RL_1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_1.channel8)
  return _internal_channel8();
}
inline void IRTS_RL_1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IRTS_RL_1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_1.channel8)
}

// -------------------------------------------------------------------

// IRTS_RL_2

// uint32 channel9 = 1;
inline void IRTS_RL_2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IRTS_RL_2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IRTS_RL_2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_2.channel9)
  return _internal_channel9();
}
inline void IRTS_RL_2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IRTS_RL_2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_2.channel9)
}

// uint32 channel10 = 2;
inline void IRTS_RL_2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IRTS_RL_2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IRTS_RL_2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_2.channel10)
  return _internal_channel10();
}
inline void IRTS_RL_2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IRTS_RL_2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_2.channel10)
}

// uint32 channel11 = 3;
inline void IRTS_RL_2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IRTS_RL_2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IRTS_RL_2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_2.channel11)
  return _internal_channel11();
}
inline void IRTS_RL_2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IRTS_RL_2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_2.channel11)
}

// uint32 channel12 = 4;
inline void IRTS_RL_2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IRTS_RL_2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IRTS_RL_2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_2.channel12)
  return _internal_channel12();
}
inline void IRTS_RL_2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IRTS_RL_2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_2.channel12)
}

// -------------------------------------------------------------------

// IRTS_RL_3

// uint32 channel13 = 1;
inline void IRTS_RL_3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IRTS_RL_3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IRTS_RL_3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_3.channel13)
  return _internal_channel13();
}
inline void IRTS_RL_3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IRTS_RL_3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_3.channel13)
}

// uint32 channel14 = 2;
inline void IRTS_RL_3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IRTS_RL_3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IRTS_RL_3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_3.channel14)
  return _internal_channel14();
}
inline void IRTS_RL_3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IRTS_RL_3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_3.channel14)
}

// uint32 channel15 = 3;
inline void IRTS_RL_3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IRTS_RL_3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IRTS_RL_3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_3.channel15)
  return _internal_channel15();
}
inline void IRTS_RL_3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IRTS_RL_3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_3.channel15)
}

// uint32 channel16 = 4;
inline void IRTS_RL_3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IRTS_RL_3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IRTS_RL_3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RL_3.channel16)
  return _internal_channel16();
}
inline void IRTS_RL_3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IRTS_RL_3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RL_3.channel16)
}

// -------------------------------------------------------------------

// IRTS_RR_0

// uint32 channel1 = 1;
inline void IRTS_RR_0::clear_channel1() {
  channel1_ = 0u;
}
inline uint32_t IRTS_RR_0::_internal_channel1() const {
  return channel1_;
}
inline uint32_t IRTS_RR_0::channel1() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_0.channel1)
  return _internal_channel1();
}
inline void IRTS_RR_0::_internal_set_channel1(uint32_t value) {
  
  channel1_ = value;
}
inline void IRTS_RR_0::set_channel1(uint32_t value) {
  _internal_set_channel1(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_0.channel1)
}

// uint32 channel2 = 2;
inline void IRTS_RR_0::clear_channel2() {
  channel2_ = 0u;
}
inline uint32_t IRTS_RR_0::_internal_channel2() const {
  return channel2_;
}
inline uint32_t IRTS_RR_0::channel2() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_0.channel2)
  return _internal_channel2();
}
inline void IRTS_RR_0::_internal_set_channel2(uint32_t value) {
  
  channel2_ = value;
}
inline void IRTS_RR_0::set_channel2(uint32_t value) {
  _internal_set_channel2(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_0.channel2)
}

// uint32 channel3 = 3;
inline void IRTS_RR_0::clear_channel3() {
  channel3_ = 0u;
}
inline uint32_t IRTS_RR_0::_internal_channel3() const {
  return channel3_;
}
inline uint32_t IRTS_RR_0::channel3() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_0.channel3)
  return _internal_channel3();
}
inline void IRTS_RR_0::_internal_set_channel3(uint32_t value) {
  
  channel3_ = value;
}
inline void IRTS_RR_0::set_channel3(uint32_t value) {
  _internal_set_channel3(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_0.channel3)
}

// uint32 channel4 = 4;
inline void IRTS_RR_0::clear_channel4() {
  channel4_ = 0u;
}
inline uint32_t IRTS_RR_0::_internal_channel4() const {
  return channel4_;
}
inline uint32_t IRTS_RR_0::channel4() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_0.channel4)
  return _internal_channel4();
}
inline void IRTS_RR_0::_internal_set_channel4(uint32_t value) {
  
  channel4_ = value;
}
inline void IRTS_RR_0::set_channel4(uint32_t value) {
  _internal_set_channel4(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_0.channel4)
}

// -------------------------------------------------------------------

// IRTS_RR_1

// uint32 channel5 = 1;
inline void IRTS_RR_1::clear_channel5() {
  channel5_ = 0u;
}
inline uint32_t IRTS_RR_1::_internal_channel5() const {
  return channel5_;
}
inline uint32_t IRTS_RR_1::channel5() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_1.channel5)
  return _internal_channel5();
}
inline void IRTS_RR_1::_internal_set_channel5(uint32_t value) {
  
  channel5_ = value;
}
inline void IRTS_RR_1::set_channel5(uint32_t value) {
  _internal_set_channel5(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_1.channel5)
}

// uint32 channel6 = 2;
inline void IRTS_RR_1::clear_channel6() {
  channel6_ = 0u;
}
inline uint32_t IRTS_RR_1::_internal_channel6() const {
  return channel6_;
}
inline uint32_t IRTS_RR_1::channel6() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_1.channel6)
  return _internal_channel6();
}
inline void IRTS_RR_1::_internal_set_channel6(uint32_t value) {
  
  channel6_ = value;
}
inline void IRTS_RR_1::set_channel6(uint32_t value) {
  _internal_set_channel6(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_1.channel6)
}

// uint32 channel7 = 3;
inline void IRTS_RR_1::clear_channel7() {
  channel7_ = 0u;
}
inline uint32_t IRTS_RR_1::_internal_channel7() const {
  return channel7_;
}
inline uint32_t IRTS_RR_1::channel7() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_1.channel7)
  return _internal_channel7();
}
inline void IRTS_RR_1::_internal_set_channel7(uint32_t value) {
  
  channel7_ = value;
}
inline void IRTS_RR_1::set_channel7(uint32_t value) {
  _internal_set_channel7(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_1.channel7)
}

// uint32 channel8 = 4;
inline void IRTS_RR_1::clear_channel8() {
  channel8_ = 0u;
}
inline uint32_t IRTS_RR_1::_internal_channel8() const {
  return channel8_;
}
inline uint32_t IRTS_RR_1::channel8() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_1.channel8)
  return _internal_channel8();
}
inline void IRTS_RR_1::_internal_set_channel8(uint32_t value) {
  
  channel8_ = value;
}
inline void IRTS_RR_1::set_channel8(uint32_t value) {
  _internal_set_channel8(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_1.channel8)
}

// -------------------------------------------------------------------

// IRTS_RR_2

// uint32 channel9 = 1;
inline void IRTS_RR_2::clear_channel9() {
  channel9_ = 0u;
}
inline uint32_t IRTS_RR_2::_internal_channel9() const {
  return channel9_;
}
inline uint32_t IRTS_RR_2::channel9() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_2.channel9)
  return _internal_channel9();
}
inline void IRTS_RR_2::_internal_set_channel9(uint32_t value) {
  
  channel9_ = value;
}
inline void IRTS_RR_2::set_channel9(uint32_t value) {
  _internal_set_channel9(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_2.channel9)
}

// uint32 channel10 = 2;
inline void IRTS_RR_2::clear_channel10() {
  channel10_ = 0u;
}
inline uint32_t IRTS_RR_2::_internal_channel10() const {
  return channel10_;
}
inline uint32_t IRTS_RR_2::channel10() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_2.channel10)
  return _internal_channel10();
}
inline void IRTS_RR_2::_internal_set_channel10(uint32_t value) {
  
  channel10_ = value;
}
inline void IRTS_RR_2::set_channel10(uint32_t value) {
  _internal_set_channel10(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_2.channel10)
}

// uint32 channel11 = 3;
inline void IRTS_RR_2::clear_channel11() {
  channel11_ = 0u;
}
inline uint32_t IRTS_RR_2::_internal_channel11() const {
  return channel11_;
}
inline uint32_t IRTS_RR_2::channel11() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_2.channel11)
  return _internal_channel11();
}
inline void IRTS_RR_2::_internal_set_channel11(uint32_t value) {
  
  channel11_ = value;
}
inline void IRTS_RR_2::set_channel11(uint32_t value) {
  _internal_set_channel11(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_2.channel11)
}

// uint32 channel12 = 4;
inline void IRTS_RR_2::clear_channel12() {
  channel12_ = 0u;
}
inline uint32_t IRTS_RR_2::_internal_channel12() const {
  return channel12_;
}
inline uint32_t IRTS_RR_2::channel12() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_2.channel12)
  return _internal_channel12();
}
inline void IRTS_RR_2::_internal_set_channel12(uint32_t value) {
  
  channel12_ = value;
}
inline void IRTS_RR_2::set_channel12(uint32_t value) {
  _internal_set_channel12(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_2.channel12)
}

// -------------------------------------------------------------------

// IRTS_RR_3

// uint32 channel13 = 1;
inline void IRTS_RR_3::clear_channel13() {
  channel13_ = 0u;
}
inline uint32_t IRTS_RR_3::_internal_channel13() const {
  return channel13_;
}
inline uint32_t IRTS_RR_3::channel13() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_3.channel13)
  return _internal_channel13();
}
inline void IRTS_RR_3::_internal_set_channel13(uint32_t value) {
  
  channel13_ = value;
}
inline void IRTS_RR_3::set_channel13(uint32_t value) {
  _internal_set_channel13(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_3.channel13)
}

// uint32 channel14 = 2;
inline void IRTS_RR_3::clear_channel14() {
  channel14_ = 0u;
}
inline uint32_t IRTS_RR_3::_internal_channel14() const {
  return channel14_;
}
inline uint32_t IRTS_RR_3::channel14() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_3.channel14)
  return _internal_channel14();
}
inline void IRTS_RR_3::_internal_set_channel14(uint32_t value) {
  
  channel14_ = value;
}
inline void IRTS_RR_3::set_channel14(uint32_t value) {
  _internal_set_channel14(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_3.channel14)
}

// uint32 channel15 = 3;
inline void IRTS_RR_3::clear_channel15() {
  channel15_ = 0u;
}
inline uint32_t IRTS_RR_3::_internal_channel15() const {
  return channel15_;
}
inline uint32_t IRTS_RR_3::channel15() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_3.channel15)
  return _internal_channel15();
}
inline void IRTS_RR_3::_internal_set_channel15(uint32_t value) {
  
  channel15_ = value;
}
inline void IRTS_RR_3::set_channel15(uint32_t value) {
  _internal_set_channel15(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_3.channel15)
}

// uint32 channel16 = 4;
inline void IRTS_RR_3::clear_channel16() {
  channel16_ = 0u;
}
inline uint32_t IRTS_RR_3::_internal_channel16() const {
  return channel16_;
}
inline uint32_t IRTS_RR_3::channel16() const {
  // @@protoc_insertion_point(field_get:secondary.IRTS_RR_3.channel16)
  return _internal_channel16();
}
inline void IRTS_RR_3::_internal_set_channel16(uint32_t value) {
  
  channel16_ = value;
}
inline void IRTS_RR_3::set_channel16(uint32_t value) {
  _internal_set_channel16(value);
  // @@protoc_insertion_point(field_set:secondary.IRTS_RR_3.channel16)
}

// -------------------------------------------------------------------

// GPS_COORDS

// float latitude = 1;
inline void GPS_COORDS::clear_latitude() {
  latitude_ = 0;
}
inline float GPS_COORDS::_internal_latitude() const {
  return latitude_;
}
inline float GPS_COORDS::latitude() const {
  // @@protoc_insertion_point(field_get:secondary.GPS_COORDS.latitude)
  return _internal_latitude();
}
inline void GPS_COORDS::_internal_set_latitude(float value) {
  
  latitude_ = value;
}
inline void GPS_COORDS::set_latitude(float value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:secondary.GPS_COORDS.latitude)
}

// float longitude = 2;
inline void GPS_COORDS::clear_longitude() {
  longitude_ = 0;
}
inline float GPS_COORDS::_internal_longitude() const {
  return longitude_;
}
inline float GPS_COORDS::longitude() const {
  // @@protoc_insertion_point(field_get:secondary.GPS_COORDS.longitude)
  return _internal_longitude();
}
inline void GPS_COORDS::_internal_set_longitude(float value) {
  
  longitude_ = value;
}
inline void GPS_COORDS::set_longitude(float value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:secondary.GPS_COORDS.longitude)
}

// -------------------------------------------------------------------

// GPS_SPEED

// uint32 speed = 1;
inline void GPS_SPEED::clear_speed() {
  speed_ = 0u;
}
inline uint32_t GPS_SPEED::_internal_speed() const {
  return speed_;
}
inline uint32_t GPS_SPEED::speed() const {
  // @@protoc_insertion_point(field_get:secondary.GPS_SPEED.speed)
  return _internal_speed();
}
inline void GPS_SPEED::_internal_set_speed(uint32_t value) {
  
  speed_ = value;
}
inline void GPS_SPEED::set_speed(uint32_t value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:secondary.GPS_SPEED.speed)
}

// -------------------------------------------------------------------

// LAP_COUNT

// uint32 lap_count = 1;
inline void LAP_COUNT::clear_lap_count() {
  lap_count_ = 0u;
}
inline uint32_t LAP_COUNT::_internal_lap_count() const {
  return lap_count_;
}
inline uint32_t LAP_COUNT::lap_count() const {
  // @@protoc_insertion_point(field_get:secondary.LAP_COUNT.lap_count)
  return _internal_lap_count();
}
inline void LAP_COUNT::_internal_set_lap_count(uint32_t value) {
  
  lap_count_ = value;
}
inline void LAP_COUNT::set_lap_count(uint32_t value) {
  _internal_set_lap_count(value);
  // @@protoc_insertion_point(field_set:secondary.LAP_COUNT.lap_count)
}

// uint32 timestamp = 2;
inline void LAP_COUNT::clear_timestamp() {
  timestamp_ = 0u;
}
inline uint32_t LAP_COUNT::_internal_timestamp() const {
  return timestamp_;
}
inline uint32_t LAP_COUNT::timestamp() const {
  // @@protoc_insertion_point(field_get:secondary.LAP_COUNT.timestamp)
  return _internal_timestamp();
}
inline void LAP_COUNT::_internal_set_timestamp(uint32_t value) {
  
  timestamp_ = value;
}
inline void LAP_COUNT::set_timestamp(uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:secondary.LAP_COUNT.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace secondary

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_secondary_2eproto
