# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: primary.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rprimary.proto\x12\x07primary\"B\n\x0cSteerVersion\x12\x19\n\x11\x63omponent_version\x18\x01 \x01(\r\x12\x17\n\x0f\x63\x61ncicd_version\x18\x02 \x01(\r\"@\n\nDasVersion\x12\x19\n\x11\x63omponent_version\x18\x01 \x01(\r\x12\x17\n\x0f\x63\x61ncicd_version\x18\x02 \x01(\r\"?\n\tHvVersion\x12\x19\n\x11\x63omponent_version\x18\x01 \x01(\r\x12\x17\n\x0f\x63\x61ncicd_version\x18\x02 \x01(\r\"?\n\tLvVersion\x12\x19\n\x11\x63omponent_version\x18\x01 \x01(\r\x12\x17\n\x0f\x63\x61ncicd_version\x18\x02 \x01(\r\"@\n\nTlmVersion\x12\x19\n\x11\x63omponent_version\x18\x01 \x01(\r\x12\x17\n\x0f\x63\x61ncicd_version\x18\x02 \x01(\r\"\x1e\n\tTimestamp\x12\x11\n\ttimestamp\x18\x01 \x01(\r\"\x8c\x01\n\x0cSetTlmStatus\x12\x31\n\x0etlm_status_set\x18\x01 \x01(\x0e\x32\x19.primary.TlmStatusSetType\x12(\n\trace_type\x18\x02 \x01(\x0e\x32\x15.primary.RaceTypeType\x12\x0e\n\x06\x64river\x18\x03 \x01(\r\x12\x0f\n\x07\x63ircuit\x18\x04 \x01(\r\"%\n\x11SteerSystemStatus\x12\x10\n\x08soc_temp\x18\x01 \x01(\r\"\x08\n\x06Marker\"\x82\x01\n\tTlmStatus\x12*\n\ntlm_status\x18\x01 \x01(\x0e\x32\x16.primary.TlmStatusType\x12(\n\trace_type\x18\x02 \x01(\x0e\x32\x15.primary.RaceTypeType\x12\x0e\n\x06\x64river\x18\x03 \x01(\r\x12\x0f\n\x07\x63ircuit\x18\x04 \x01(\r\"\x99\x01\n\tCarStatus\x12/\n\ninverter_l\x18\x01 \x01(\x0e\x32\x1b.primary.InverterStatusType\x12/\n\ninverter_r\x18\x02 \x01(\x0e\x32\x1b.primary.InverterStatusType\x12*\n\ncar_status\x18\x03 \x01(\x0e\x32\x16.primary.CarStatusType\"\x1e\n\tDasErrors\x12\x11\n\tdas_error\x18\x01 \x01(\r\"U\n\x05Speed\x12\x11\n\tencoder_r\x18\x01 \x01(\r\x12\x11\n\tencoder_l\x18\x02 \x01(\r\x12\x12\n\ninverter_r\x18\x03 \x01(\r\x12\x12\n\ninverter_l\x18\x04 \x01(\r\"j\n\tHvVoltage\x12\x14\n\x0cpack_voltage\x18\x01 \x01(\r\x12\x13\n\x0b\x62us_voltage\x18\x02 \x01(\r\x12\x18\n\x10max_cell_voltage\x18\x03 \x01(\r\x12\x18\n\x10min_cell_voltage\x18\x04 \x01(\r\"+\n\tHvCurrent\x12\x0f\n\x07\x63urrent\x18\x01 \x01(\r\x12\r\n\x05power\x18\x02 \x01(\x05\"B\n\x06HvTemp\x12\x14\n\x0c\x61verage_temp\x18\x01 \x01(\r\x12\x10\n\x08max_temp\x18\x02 \x01(\r\x12\x10\n\x08min_temp\x18\x03 \x01(\r\",\n\x08HvErrors\x12\x10\n\x08warnings\x18\x01 \x01(\r\x12\x0e\n\x06\x65rrors\x18\x02 \x01(\r\"4\n\x08TsStatus\x12(\n\tts_status\x18\x01 \x01(\x0e\x32\x15.primary.TsStatusType\">\n\x0bSetTsStatus\x12/\n\rts_status_set\x18\x01 \x01(\x0e\x32\x18.primary.TsStatusSetType\"W\n\x16SetCellBalancingStatus\x12=\n\x14set_balancing_status\x18\x01 \x01(\x0e\x32\x1f.primary.SetBalancingStatusType\"#\n\x0eHandcartStatus\x12\x11\n\tconnected\x18\x01 \x01(\x08\"d\n\x0bSteerStatus\x12\x36\n\x10traction_control\x18\x01 \x01(\x0e\x32\x1c.primary.TractionControlType\x12\x1d\n\x03map\x18\x02 \x01(\x0e\x32\x10.primary.MapType\"A\n\x0cSetCarStatus\x12\x31\n\x0e\x63\x61r_status_set\x18\x01 \x01(\x0e\x32\x19.primary.CarStatusSetType\"V\n\x0eSetPedalsRange\x12!\n\x05\x62ound\x18\x01 \x01(\x0e\x32\x12.primary.BoundType\x12!\n\x05pedal\x18\x02 \x01(\x0e\x32\x12.primary.PedalType\"\x1c\n\tLvCurrent\x12\x0f\n\x07\x63urrent\x18\x01 \x01(\r\"n\n\tLvVoltage\x12\x15\n\rtotal_voltage\x18\x01 \x01(\r\x12\x11\n\tvoltage_1\x18\x02 \x01(\r\x12\x11\n\tvoltage_2\x18\x03 \x01(\r\x12\x11\n\tvoltage_3\x18\x04 \x01(\r\x12\x11\n\tvoltage_4\x18\x05 \x01(\r\"A\n\rLvTemperature\x12\x16\n\x0e\x62p_temperature\x18\x01 \x01(\r\x12\x18\n\x10\x64\x63\x64\x63_temperature\x18\x02 \x01(\r\"O\n\rCoolingStatus\x12\x14\n\x0chv_fan_speed\x18\x01 \x01(\r\x12\x14\n\x0clv_fan_speed\x18\x02 \x01(\r\x12\x12\n\npump_speed\x18\x03 \x01(\r\"]\n\x0eHvCellsVoltage\x12\x12\n\ncell_index\x18\x01 \x01(\r\x12\x11\n\tvoltage_0\x18\x02 \x01(\r\x12\x11\n\tvoltage_1\x18\x03 \x01(\r\x12\x11\n\tvoltage_2\x18\x04 \x01(\r\"\x91\x01\n\x0bHvCellsTemp\x12\x12\n\ncell_index\x18\x01 \x01(\r\x12\x0e\n\x06temp_0\x18\x02 \x01(\r\x12\x0e\n\x06temp_1\x18\x03 \x01(\r\x12\x0e\n\x06temp_2\x18\x04 \x01(\r\x12\x0e\n\x06temp_3\x18\x05 \x01(\r\x12\x0e\n\x06temp_4\x18\x06 \x01(\r\x12\x0e\n\x06temp_5\x18\x07 \x01(\r\x12\x0e\n\x06temp_6\x18\x08 \x01(\r\"O\n\x15HvCellBalancingStatus\x12\x36\n\x10\x62\x61lancing_status\x18\x01 \x01(\x0e\x32\x1c.primary.BalancingStatusType\"8\n\rInvLSetTorque\x12\r\n\x05regid\x18\x01 \x01(\r\x12\x0b\n\x03lsb\x18\x02 \x01(\r\x12\x0b\n\x03msb\x18\x03 \x01(\r\"/\n\x0cInvLResponse\x12\x0e\n\x06reg_id\x18\x01 \x01(\r\x12\x0f\n\x07reg_val\x18\x02 \x01(\r*A\n\x10TlmStatusSetType\x12\x16\n\x12TLM_STATUS_SET_OFF\x10\x00\x12\x15\n\x11TLM_STATUS_SET_ON\x10\x01*s\n\x0cRaceTypeType\x12\x1a\n\x16RACE_TYPE_ACCELERATION\x10\x00\x12\x15\n\x11RACE_TYPE_SKIDPAD\x10\x01\x12\x17\n\x13RACE_TYPE_AUTOCROSS\x10\x02\x12\x17\n\x13RACE_TYPE_ENDURANCE\x10\x03*6\n\rTlmStatusType\x12\x11\n\rTLM_STATUS_ON\x10\x00\x12\x12\n\x0eTLM_STATUS_OFF\x10\x01*_\n\x12InverterStatusType\x12\x17\n\x13INVERTER_STATUS_OFF\x10\x00\x12\x18\n\x14INVERTER_STATUS_IDLE\x10\x01\x12\x16\n\x12INVERTER_STATUS_ON\x10\x02*N\n\rCarStatusType\x12\x13\n\x0f\x43\x41R_STATUS_IDLE\x10\x00\x12\x14\n\x10\x43\x41R_STATUS_SETUP\x10\x01\x12\x12\n\x0e\x43\x41R_STATUS_RUN\x10\x02*a\n\x0cTsStatusType\x12\x11\n\rTS_STATUS_OFF\x10\x00\x12\x17\n\x13TS_STATUS_PRECHARGE\x10\x01\x12\x10\n\x0cTS_STATUS_ON\x10\x02\x12\x13\n\x0fTS_STATUS_FATAL\x10\x03*>\n\x0fTsStatusSetType\x12\x15\n\x11TS_STATUS_SET_OFF\x10\x00\x12\x14\n\x10TS_STATUS_SET_ON\x10\x01*S\n\x16SetBalancingStatusType\x12\x1c\n\x18SET_BALANCING_STATUS_OFF\x10\x00\x12\x1b\n\x17SET_BALANCING_STATUS_ON\x10\x01*\x98\x01\n\x13TractionControlType\x12\x18\n\x14TRACTION_CONTROL_OFF\x10\x00\x12!\n\x1dTRACTION_CONTROL_SLIP_CONTROL\x10\x01\x12%\n!TRACTION_CONTROL_TORQUE_VECTORING\x10\x02\x12\x1d\n\x19TRACTION_CONTROL_COMPLETE\x10\x03*V\n\x07MapType\x12\t\n\x05MAP_R\x10\x00\x12\x0b\n\x07MAP_D20\x10\x01\x12\x0b\n\x07MAP_D40\x10\x02\x12\x0b\n\x07MAP_D60\x10\x03\x12\x0b\n\x07MAP_D80\x10\x04\x12\x0c\n\x08MAP_D100\x10\x05*C\n\x10\x43\x61rStatusSetType\x12\x17\n\x13\x43\x41R_STATUS_SET_IDLE\x10\x00\x12\x16\n\x12\x43\x41R_STATUS_SET_RUN\x10\x01*1\n\tBoundType\x12\x11\n\rBOUND_SET_MAX\x10\x00\x12\x11\n\rBOUND_SET_MIN\x10\x01*3\n\tPedalType\x12\x15\n\x11PEDAL_ACCELERATOR\x10\x00\x12\x0f\n\x0bPEDAL_BRAKE\x10\x01*H\n\x13\x42\x61lancingStatusType\x12\x18\n\x14\x42\x41LANCING_STATUS_OFF\x10\x00\x12\x17\n\x13\x42\x41LANCING_STATUS_ON\x10\x01\x62\x06proto3')

_TLMSTATUSSETTYPE = DESCRIPTOR.enum_types_by_name['TlmStatusSetType']
TlmStatusSetType = enum_type_wrapper.EnumTypeWrapper(_TLMSTATUSSETTYPE)
_RACETYPETYPE = DESCRIPTOR.enum_types_by_name['RaceTypeType']
RaceTypeType = enum_type_wrapper.EnumTypeWrapper(_RACETYPETYPE)
_TLMSTATUSTYPE = DESCRIPTOR.enum_types_by_name['TlmStatusType']
TlmStatusType = enum_type_wrapper.EnumTypeWrapper(_TLMSTATUSTYPE)
_INVERTERSTATUSTYPE = DESCRIPTOR.enum_types_by_name['InverterStatusType']
InverterStatusType = enum_type_wrapper.EnumTypeWrapper(_INVERTERSTATUSTYPE)
_CARSTATUSTYPE = DESCRIPTOR.enum_types_by_name['CarStatusType']
CarStatusType = enum_type_wrapper.EnumTypeWrapper(_CARSTATUSTYPE)
_TSSTATUSTYPE = DESCRIPTOR.enum_types_by_name['TsStatusType']
TsStatusType = enum_type_wrapper.EnumTypeWrapper(_TSSTATUSTYPE)
_TSSTATUSSETTYPE = DESCRIPTOR.enum_types_by_name['TsStatusSetType']
TsStatusSetType = enum_type_wrapper.EnumTypeWrapper(_TSSTATUSSETTYPE)
_SETBALANCINGSTATUSTYPE = DESCRIPTOR.enum_types_by_name['SetBalancingStatusType']
SetBalancingStatusType = enum_type_wrapper.EnumTypeWrapper(_SETBALANCINGSTATUSTYPE)
_TRACTIONCONTROLTYPE = DESCRIPTOR.enum_types_by_name['TractionControlType']
TractionControlType = enum_type_wrapper.EnumTypeWrapper(_TRACTIONCONTROLTYPE)
_MAPTYPE = DESCRIPTOR.enum_types_by_name['MapType']
MapType = enum_type_wrapper.EnumTypeWrapper(_MAPTYPE)
_CARSTATUSSETTYPE = DESCRIPTOR.enum_types_by_name['CarStatusSetType']
CarStatusSetType = enum_type_wrapper.EnumTypeWrapper(_CARSTATUSSETTYPE)
_BOUNDTYPE = DESCRIPTOR.enum_types_by_name['BoundType']
BoundType = enum_type_wrapper.EnumTypeWrapper(_BOUNDTYPE)
_PEDALTYPE = DESCRIPTOR.enum_types_by_name['PedalType']
PedalType = enum_type_wrapper.EnumTypeWrapper(_PEDALTYPE)
_BALANCINGSTATUSTYPE = DESCRIPTOR.enum_types_by_name['BalancingStatusType']
BalancingStatusType = enum_type_wrapper.EnumTypeWrapper(_BALANCINGSTATUSTYPE)
TLM_STATUS_SET_OFF = 0
TLM_STATUS_SET_ON = 1
RACE_TYPE_ACCELERATION = 0
RACE_TYPE_SKIDPAD = 1
RACE_TYPE_AUTOCROSS = 2
RACE_TYPE_ENDURANCE = 3
TLM_STATUS_ON = 0
TLM_STATUS_OFF = 1
INVERTER_STATUS_OFF = 0
INVERTER_STATUS_IDLE = 1
INVERTER_STATUS_ON = 2
CAR_STATUS_IDLE = 0
CAR_STATUS_SETUP = 1
CAR_STATUS_RUN = 2
TS_STATUS_OFF = 0
TS_STATUS_PRECHARGE = 1
TS_STATUS_ON = 2
TS_STATUS_FATAL = 3
TS_STATUS_SET_OFF = 0
TS_STATUS_SET_ON = 1
SET_BALANCING_STATUS_OFF = 0
SET_BALANCING_STATUS_ON = 1
TRACTION_CONTROL_OFF = 0
TRACTION_CONTROL_SLIP_CONTROL = 1
TRACTION_CONTROL_TORQUE_VECTORING = 2
TRACTION_CONTROL_COMPLETE = 3
MAP_R = 0
MAP_D20 = 1
MAP_D40 = 2
MAP_D60 = 3
MAP_D80 = 4
MAP_D100 = 5
CAR_STATUS_SET_IDLE = 0
CAR_STATUS_SET_RUN = 1
BOUND_SET_MAX = 0
BOUND_SET_MIN = 1
PEDAL_ACCELERATOR = 0
PEDAL_BRAKE = 1
BALANCING_STATUS_OFF = 0
BALANCING_STATUS_ON = 1


_STEERVERSION = DESCRIPTOR.message_types_by_name['SteerVersion']
_DASVERSION = DESCRIPTOR.message_types_by_name['DasVersion']
_HVVERSION = DESCRIPTOR.message_types_by_name['HvVersion']
_LVVERSION = DESCRIPTOR.message_types_by_name['LvVersion']
_TLMVERSION = DESCRIPTOR.message_types_by_name['TlmVersion']
_TIMESTAMP = DESCRIPTOR.message_types_by_name['Timestamp']
_SETTLMSTATUS = DESCRIPTOR.message_types_by_name['SetTlmStatus']
_STEERSYSTEMSTATUS = DESCRIPTOR.message_types_by_name['SteerSystemStatus']
_MARKER = DESCRIPTOR.message_types_by_name['Marker']
_TLMSTATUS = DESCRIPTOR.message_types_by_name['TlmStatus']
_CARSTATUS = DESCRIPTOR.message_types_by_name['CarStatus']
_DASERRORS = DESCRIPTOR.message_types_by_name['DasErrors']
_SPEED = DESCRIPTOR.message_types_by_name['Speed']
_HVVOLTAGE = DESCRIPTOR.message_types_by_name['HvVoltage']
_HVCURRENT = DESCRIPTOR.message_types_by_name['HvCurrent']
_HVTEMP = DESCRIPTOR.message_types_by_name['HvTemp']
_HVERRORS = DESCRIPTOR.message_types_by_name['HvErrors']
_TSSTATUS = DESCRIPTOR.message_types_by_name['TsStatus']
_SETTSSTATUS = DESCRIPTOR.message_types_by_name['SetTsStatus']
_SETCELLBALANCINGSTATUS = DESCRIPTOR.message_types_by_name['SetCellBalancingStatus']
_HANDCARTSTATUS = DESCRIPTOR.message_types_by_name['HandcartStatus']
_STEERSTATUS = DESCRIPTOR.message_types_by_name['SteerStatus']
_SETCARSTATUS = DESCRIPTOR.message_types_by_name['SetCarStatus']
_SETPEDALSRANGE = DESCRIPTOR.message_types_by_name['SetPedalsRange']
_LVCURRENT = DESCRIPTOR.message_types_by_name['LvCurrent']
_LVVOLTAGE = DESCRIPTOR.message_types_by_name['LvVoltage']
_LVTEMPERATURE = DESCRIPTOR.message_types_by_name['LvTemperature']
_COOLINGSTATUS = DESCRIPTOR.message_types_by_name['CoolingStatus']
_HVCELLSVOLTAGE = DESCRIPTOR.message_types_by_name['HvCellsVoltage']
_HVCELLSTEMP = DESCRIPTOR.message_types_by_name['HvCellsTemp']
_HVCELLBALANCINGSTATUS = DESCRIPTOR.message_types_by_name['HvCellBalancingStatus']
_INVLSETTORQUE = DESCRIPTOR.message_types_by_name['InvLSetTorque']
_INVLRESPONSE = DESCRIPTOR.message_types_by_name['InvLResponse']
SteerVersion = _reflection.GeneratedProtocolMessageType('SteerVersion', (_message.Message,), {
  'DESCRIPTOR' : _STEERVERSION,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SteerVersion)
  })
_sym_db.RegisterMessage(SteerVersion)

DasVersion = _reflection.GeneratedProtocolMessageType('DasVersion', (_message.Message,), {
  'DESCRIPTOR' : _DASVERSION,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.DasVersion)
  })
_sym_db.RegisterMessage(DasVersion)

HvVersion = _reflection.GeneratedProtocolMessageType('HvVersion', (_message.Message,), {
  'DESCRIPTOR' : _HVVERSION,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvVersion)
  })
_sym_db.RegisterMessage(HvVersion)

LvVersion = _reflection.GeneratedProtocolMessageType('LvVersion', (_message.Message,), {
  'DESCRIPTOR' : _LVVERSION,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.LvVersion)
  })
_sym_db.RegisterMessage(LvVersion)

TlmVersion = _reflection.GeneratedProtocolMessageType('TlmVersion', (_message.Message,), {
  'DESCRIPTOR' : _TLMVERSION,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.TlmVersion)
  })
_sym_db.RegisterMessage(TlmVersion)

Timestamp = _reflection.GeneratedProtocolMessageType('Timestamp', (_message.Message,), {
  'DESCRIPTOR' : _TIMESTAMP,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.Timestamp)
  })
_sym_db.RegisterMessage(Timestamp)

SetTlmStatus = _reflection.GeneratedProtocolMessageType('SetTlmStatus', (_message.Message,), {
  'DESCRIPTOR' : _SETTLMSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SetTlmStatus)
  })
_sym_db.RegisterMessage(SetTlmStatus)

SteerSystemStatus = _reflection.GeneratedProtocolMessageType('SteerSystemStatus', (_message.Message,), {
  'DESCRIPTOR' : _STEERSYSTEMSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SteerSystemStatus)
  })
_sym_db.RegisterMessage(SteerSystemStatus)

Marker = _reflection.GeneratedProtocolMessageType('Marker', (_message.Message,), {
  'DESCRIPTOR' : _MARKER,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.Marker)
  })
_sym_db.RegisterMessage(Marker)

TlmStatus = _reflection.GeneratedProtocolMessageType('TlmStatus', (_message.Message,), {
  'DESCRIPTOR' : _TLMSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.TlmStatus)
  })
_sym_db.RegisterMessage(TlmStatus)

CarStatus = _reflection.GeneratedProtocolMessageType('CarStatus', (_message.Message,), {
  'DESCRIPTOR' : _CARSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.CarStatus)
  })
_sym_db.RegisterMessage(CarStatus)

DasErrors = _reflection.GeneratedProtocolMessageType('DasErrors', (_message.Message,), {
  'DESCRIPTOR' : _DASERRORS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.DasErrors)
  })
_sym_db.RegisterMessage(DasErrors)

Speed = _reflection.GeneratedProtocolMessageType('Speed', (_message.Message,), {
  'DESCRIPTOR' : _SPEED,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.Speed)
  })
_sym_db.RegisterMessage(Speed)

HvVoltage = _reflection.GeneratedProtocolMessageType('HvVoltage', (_message.Message,), {
  'DESCRIPTOR' : _HVVOLTAGE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvVoltage)
  })
_sym_db.RegisterMessage(HvVoltage)

HvCurrent = _reflection.GeneratedProtocolMessageType('HvCurrent', (_message.Message,), {
  'DESCRIPTOR' : _HVCURRENT,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvCurrent)
  })
_sym_db.RegisterMessage(HvCurrent)

HvTemp = _reflection.GeneratedProtocolMessageType('HvTemp', (_message.Message,), {
  'DESCRIPTOR' : _HVTEMP,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvTemp)
  })
_sym_db.RegisterMessage(HvTemp)

HvErrors = _reflection.GeneratedProtocolMessageType('HvErrors', (_message.Message,), {
  'DESCRIPTOR' : _HVERRORS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvErrors)
  })
_sym_db.RegisterMessage(HvErrors)

TsStatus = _reflection.GeneratedProtocolMessageType('TsStatus', (_message.Message,), {
  'DESCRIPTOR' : _TSSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.TsStatus)
  })
_sym_db.RegisterMessage(TsStatus)

SetTsStatus = _reflection.GeneratedProtocolMessageType('SetTsStatus', (_message.Message,), {
  'DESCRIPTOR' : _SETTSSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SetTsStatus)
  })
_sym_db.RegisterMessage(SetTsStatus)

SetCellBalancingStatus = _reflection.GeneratedProtocolMessageType('SetCellBalancingStatus', (_message.Message,), {
  'DESCRIPTOR' : _SETCELLBALANCINGSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SetCellBalancingStatus)
  })
_sym_db.RegisterMessage(SetCellBalancingStatus)

HandcartStatus = _reflection.GeneratedProtocolMessageType('HandcartStatus', (_message.Message,), {
  'DESCRIPTOR' : _HANDCARTSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HandcartStatus)
  })
_sym_db.RegisterMessage(HandcartStatus)

SteerStatus = _reflection.GeneratedProtocolMessageType('SteerStatus', (_message.Message,), {
  'DESCRIPTOR' : _STEERSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SteerStatus)
  })
_sym_db.RegisterMessage(SteerStatus)

SetCarStatus = _reflection.GeneratedProtocolMessageType('SetCarStatus', (_message.Message,), {
  'DESCRIPTOR' : _SETCARSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SetCarStatus)
  })
_sym_db.RegisterMessage(SetCarStatus)

SetPedalsRange = _reflection.GeneratedProtocolMessageType('SetPedalsRange', (_message.Message,), {
  'DESCRIPTOR' : _SETPEDALSRANGE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.SetPedalsRange)
  })
_sym_db.RegisterMessage(SetPedalsRange)

LvCurrent = _reflection.GeneratedProtocolMessageType('LvCurrent', (_message.Message,), {
  'DESCRIPTOR' : _LVCURRENT,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.LvCurrent)
  })
_sym_db.RegisterMessage(LvCurrent)

LvVoltage = _reflection.GeneratedProtocolMessageType('LvVoltage', (_message.Message,), {
  'DESCRIPTOR' : _LVVOLTAGE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.LvVoltage)
  })
_sym_db.RegisterMessage(LvVoltage)

LvTemperature = _reflection.GeneratedProtocolMessageType('LvTemperature', (_message.Message,), {
  'DESCRIPTOR' : _LVTEMPERATURE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.LvTemperature)
  })
_sym_db.RegisterMessage(LvTemperature)

CoolingStatus = _reflection.GeneratedProtocolMessageType('CoolingStatus', (_message.Message,), {
  'DESCRIPTOR' : _COOLINGSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.CoolingStatus)
  })
_sym_db.RegisterMessage(CoolingStatus)

HvCellsVoltage = _reflection.GeneratedProtocolMessageType('HvCellsVoltage', (_message.Message,), {
  'DESCRIPTOR' : _HVCELLSVOLTAGE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvCellsVoltage)
  })
_sym_db.RegisterMessage(HvCellsVoltage)

HvCellsTemp = _reflection.GeneratedProtocolMessageType('HvCellsTemp', (_message.Message,), {
  'DESCRIPTOR' : _HVCELLSTEMP,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvCellsTemp)
  })
_sym_db.RegisterMessage(HvCellsTemp)

HvCellBalancingStatus = _reflection.GeneratedProtocolMessageType('HvCellBalancingStatus', (_message.Message,), {
  'DESCRIPTOR' : _HVCELLBALANCINGSTATUS,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.HvCellBalancingStatus)
  })
_sym_db.RegisterMessage(HvCellBalancingStatus)

InvLSetTorque = _reflection.GeneratedProtocolMessageType('InvLSetTorque', (_message.Message,), {
  'DESCRIPTOR' : _INVLSETTORQUE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.InvLSetTorque)
  })
_sym_db.RegisterMessage(InvLSetTorque)

InvLResponse = _reflection.GeneratedProtocolMessageType('InvLResponse', (_message.Message,), {
  'DESCRIPTOR' : _INVLRESPONSE,
  '__module__' : 'primary_pb2'
  # @@protoc_insertion_point(class_scope:primary.InvLResponse)
  })
_sym_db.RegisterMessage(InvLResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TLMSTATUSSETTYPE._serialized_start=2477
  _TLMSTATUSSETTYPE._serialized_end=2542
  _RACETYPETYPE._serialized_start=2544
  _RACETYPETYPE._serialized_end=2659
  _TLMSTATUSTYPE._serialized_start=2661
  _TLMSTATUSTYPE._serialized_end=2715
  _INVERTERSTATUSTYPE._serialized_start=2717
  _INVERTERSTATUSTYPE._serialized_end=2812
  _CARSTATUSTYPE._serialized_start=2814
  _CARSTATUSTYPE._serialized_end=2892
  _TSSTATUSTYPE._serialized_start=2894
  _TSSTATUSTYPE._serialized_end=2991
  _TSSTATUSSETTYPE._serialized_start=2993
  _TSSTATUSSETTYPE._serialized_end=3055
  _SETBALANCINGSTATUSTYPE._serialized_start=3057
  _SETBALANCINGSTATUSTYPE._serialized_end=3140
  _TRACTIONCONTROLTYPE._serialized_start=3143
  _TRACTIONCONTROLTYPE._serialized_end=3295
  _MAPTYPE._serialized_start=3297
  _MAPTYPE._serialized_end=3383
  _CARSTATUSSETTYPE._serialized_start=3385
  _CARSTATUSSETTYPE._serialized_end=3452
  _BOUNDTYPE._serialized_start=3454
  _BOUNDTYPE._serialized_end=3503
  _PEDALTYPE._serialized_start=3505
  _PEDALTYPE._serialized_end=3556
  _BALANCINGSTATUSTYPE._serialized_start=3558
  _BALANCINGSTATUSTYPE._serialized_end=3630
  _STEERVERSION._serialized_start=26
  _STEERVERSION._serialized_end=92
  _DASVERSION._serialized_start=94
  _DASVERSION._serialized_end=158
  _HVVERSION._serialized_start=160
  _HVVERSION._serialized_end=223
  _LVVERSION._serialized_start=225
  _LVVERSION._serialized_end=288
  _TLMVERSION._serialized_start=290
  _TLMVERSION._serialized_end=354
  _TIMESTAMP._serialized_start=356
  _TIMESTAMP._serialized_end=386
  _SETTLMSTATUS._serialized_start=389
  _SETTLMSTATUS._serialized_end=529
  _STEERSYSTEMSTATUS._serialized_start=531
  _STEERSYSTEMSTATUS._serialized_end=568
  _MARKER._serialized_start=570
  _MARKER._serialized_end=578
  _TLMSTATUS._serialized_start=581
  _TLMSTATUS._serialized_end=711
  _CARSTATUS._serialized_start=714
  _CARSTATUS._serialized_end=867
  _DASERRORS._serialized_start=869
  _DASERRORS._serialized_end=899
  _SPEED._serialized_start=901
  _SPEED._serialized_end=986
  _HVVOLTAGE._serialized_start=988
  _HVVOLTAGE._serialized_end=1094
  _HVCURRENT._serialized_start=1096
  _HVCURRENT._serialized_end=1139
  _HVTEMP._serialized_start=1141
  _HVTEMP._serialized_end=1207
  _HVERRORS._serialized_start=1209
  _HVERRORS._serialized_end=1253
  _TSSTATUS._serialized_start=1255
  _TSSTATUS._serialized_end=1307
  _SETTSSTATUS._serialized_start=1309
  _SETTSSTATUS._serialized_end=1371
  _SETCELLBALANCINGSTATUS._serialized_start=1373
  _SETCELLBALANCINGSTATUS._serialized_end=1460
  _HANDCARTSTATUS._serialized_start=1462
  _HANDCARTSTATUS._serialized_end=1497
  _STEERSTATUS._serialized_start=1499
  _STEERSTATUS._serialized_end=1599
  _SETCARSTATUS._serialized_start=1601
  _SETCARSTATUS._serialized_end=1666
  _SETPEDALSRANGE._serialized_start=1668
  _SETPEDALSRANGE._serialized_end=1754
  _LVCURRENT._serialized_start=1756
  _LVCURRENT._serialized_end=1784
  _LVVOLTAGE._serialized_start=1786
  _LVVOLTAGE._serialized_end=1896
  _LVTEMPERATURE._serialized_start=1898
  _LVTEMPERATURE._serialized_end=1963
  _COOLINGSTATUS._serialized_start=1965
  _COOLINGSTATUS._serialized_end=2044
  _HVCELLSVOLTAGE._serialized_start=2046
  _HVCELLSVOLTAGE._serialized_end=2139
  _HVCELLSTEMP._serialized_start=2142
  _HVCELLSTEMP._serialized_end=2287
  _HVCELLBALANCINGSTATUS._serialized_start=2289
  _HVCELLBALANCINGSTATUS._serialized_end=2368
  _INVLSETTORQUE._serialized_start=2370
  _INVLSETTORQUE._serialized_end=2426
  _INVLRESPONSE._serialized_start=2428
  _INVLRESPONSE._serialized_end=2475
# @@protoc_insertion_point(module_scope)
