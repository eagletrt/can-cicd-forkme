syntax = "proto3";

package primary;

enum TlmStatusType {
  TLM_STATUS_ON = 0;
  TLM_STATUS_OFF = 1;
}

enum RaceTypeType {
  RACE_TYPE_ACCELERATION = 0;
  RACE_TYPE_SKIDPAD = 1;
  RACE_TYPE_AUTOCROSS = 2;
  RACE_TYPE_ENDURANCE = 3;
}

enum InverterStatusType {
  INVERTER_STATUS_OFF = 0;
  INVERTER_STATUS_IDLE = 1;
  INVERTER_STATUS_ON = 2;
}

enum CarStatusType {
  CAR_STATUS_IDLE = 0;
  CAR_STATUS_SETUP = 1;
  CAR_STATUS_RUN = 2;
}

enum TsStatusType {
  TS_STATUS_OFF = 0;
  TS_STATUS_PRECHARGE = 1;
  TS_STATUS_ON = 2;
  TS_STATUS_FATAL = 3;
}

enum TsStatusSetType {
  TS_STATUS_SET_OFF = 0;
  TS_STATUS_SET_ON = 1;
}

enum SetBalancingStatusType {
  SET_BALANCING_STATUS_OFF = 0;
  SET_BALANCING_STATUS_ON = 1;
}

enum TractionControlType {
  TRACTION_CONTROL_OFF = 0;
  TRACTION_CONTROL_SLIP_CONTROL = 1;
  TRACTION_CONTROL_TORQUE_VECTORING = 2;
  TRACTION_CONTROL_COMPLETE = 3;
}

enum MapType {
  MAP_R = 0;
  MAP_D20 = 1;
  MAP_D40 = 2;
  MAP_D60 = 3;
  MAP_D80 = 4;
  MAP_D100 = 5;
}

enum CarStatusSetType {
  CAR_STATUS_SET_IDLE = 0;
  CAR_STATUS_SET_RUN = 1;
}

enum BoundType {
  BOUND_SET_MAX = 0;
  BOUND_SET_MIN = 1;
}

enum PedalType {
  PEDAL_ACCELERATOR = 0;
  PEDAL_BRAKE = 1;
}

enum BalancingStatusType {
  BALANCING_STATUS_OFF = 0;
  BALANCING_STATUS_ON = 1;
}

message SteerVersion {
  uint32 component_version = 1;
  uint32 cancicd_version = 2;
  uint32 timestamp = 3;
}

message DasVersion {
  uint32 component_version = 1;
  uint32 cancicd_version = 2;
  uint32 timestamp = 3;
}

message HvVersion {
  uint32 component_version = 1;
  uint32 cancicd_version = 2;
  uint32 timestamp = 3;
}

message LvVersion {
  uint32 component_version = 1;
  uint32 cancicd_version = 2;
  uint32 timestamp = 3;
}

message TlmVersion {
  uint32 component_version = 1;
  uint32 cancicd_version = 2;
  uint32 timestamp = 3;
}

message Timestamp {
  uint32 timestamp = 1;
}

message SetTlmStatus {
  TlmStatusType tlm_status = 1;
  RaceTypeType race_type = 2;
  uint32 driver = 3;
  uint32 circuit = 4;
  uint32 timestamp = 5;
}

message SteerSystemStatus {
  uint32 soc_temp = 1;
  uint32 timestamp = 2;
}

message Marker {
  uint32 timestamp = 1;
}

message TlmStatus {
  TlmStatusType tlm_status = 1;
  RaceTypeType race_type = 2;
  uint32 driver = 3;
  uint32 circuit = 4;
  uint32 timestamp = 5;
}

message CarStatus {
  InverterStatusType inverter_l = 1;
  InverterStatusType inverter_r = 2;
  CarStatusType car_status = 3;
  uint32 timestamp = 4;
}

message DasErrors {
  uint32 das_error = 1;
  uint32 timestamp = 2;
}

message Speed {
  uint32 encoder_r = 1;
  uint32 encoder_l = 2;
  uint32 inverter_r = 3;
  uint32 inverter_l = 4;
  uint32 timestamp = 5;
}

message HvVoltage {
  uint32 pack_voltage = 1;
  uint32 bus_voltage = 2;
  uint32 max_cell_voltage = 3;
  uint32 min_cell_voltage = 4;
  uint32 timestamp = 5;
}

message HvCurrent {
  uint32 current = 1;
  int32 power = 2;
  uint32 timestamp = 3;
}

message HvTemp {
  uint32 average_temp = 1;
  uint32 max_temp = 2;
  uint32 min_temp = 3;
  uint32 timestamp = 4;
}

message HvErrors {
  uint32 warnings = 1;
  uint32 errors = 2;
  uint32 timestamp = 3;
}

message TsStatus {
  TsStatusType ts_status = 1;
  uint32 timestamp = 2;
}

message SetTsStatus {
  TsStatusSetType ts_status_set = 1;
  uint32 timestamp = 2;
}

message SetCellBalancingStatus {
  SetBalancingStatusType set_balancing_status = 1;
  uint32 timestamp = 2;
}

message HandcartStatus {
  bool connected = 1;
  uint32 timestamp = 2;
}

message SteerStatus {
  TractionControlType traction_control = 1;
  MapType map = 2;
  uint32 timestamp = 3;
}

message SetCarStatus {
  CarStatusSetType car_status_set = 1;
  uint32 timestamp = 2;
}

message SetPedalsRange {
  BoundType bound = 1;
  PedalType pedal = 2;
  uint32 timestamp = 3;
}

message LvCurrent {
  uint32 current = 1;
  uint32 timestamp = 2;
}

message LvVoltage {
  uint32 total_voltage = 1;
  uint32 voltage_1 = 2;
  uint32 voltage_2 = 3;
  uint32 voltage_3 = 4;
  uint32 voltage_4 = 5;
  uint32 timestamp = 6;
}

message LvTemperature {
  uint32 bp_temperature = 1;
  uint32 dcdc_temperature = 2;
  uint32 timestamp = 3;
}

message CoolingStatus {
  uint32 hv_fan_speed = 1;
  uint32 lv_fan_speed = 2;
  uint32 pump_speed = 3;
  uint32 timestamp = 4;
}

message HvCellsVoltage {
  uint32 cell_index = 1;
  uint32 voltage_0 = 2;
  uint32 voltage_1 = 3;
  uint32 voltage_2 = 4;
  uint32 timestamp = 5;
}

message HvCellsTemp {
  uint32 cell_index = 1;
  uint32 temp_0 = 2;
  uint32 temp_1 = 3;
  uint32 temp_2 = 4;
  uint32 temp_3 = 5;
  uint32 temp_4 = 6;
  uint32 temp_5 = 7;
  uint32 temp_6 = 8;
  uint32 timestamp = 9;
}

message HvCellBalancingStatus {
  BalancingStatusType balancing_status = 1;
  uint32 timestamp = 2;
}

message InvLSetTorque {
  uint32 regid = 1;
  uint32 lsb = 2;
  uint32 msb = 3;
  uint32 timestamp = 4;
}

message InvLResponse {
  uint32 reg_id = 1;
  uint32 reg_val = 2;
  uint32 timestamp = 3;
}

message PrimaryFenice {
  repeated SteerVersion steer_version = 1;
  repeated DasVersion das_version = 2;
  repeated HvVersion hv_version = 3;
  repeated LvVersion lv_version = 4;
  repeated TlmVersion tlm_version = 5;
  repeated Timestamp timestamp = 6;
  repeated SetTlmStatus set_tlm_status = 7;
  repeated SteerSystemStatus steer_system_status = 8;
  repeated Marker marker = 9;
  repeated TlmStatus tlm_status = 10;
  repeated CarStatus car_status = 11;
  repeated DasErrors das_errors = 12;
  repeated Speed speed = 13;
  repeated HvVoltage hv_voltage = 14;
  repeated HvCurrent hv_current = 15;
  repeated HvTemp hv_temp = 16;
  repeated HvErrors hv_errors = 17;
  repeated TsStatus ts_status = 18;
  repeated SetTsStatus set_ts_status = 19;
  repeated SetCellBalancingStatus set_cell_balancing_status = 20;
  repeated HandcartStatus handcart_status = 21;
  repeated SteerStatus steer_status = 22;
  repeated SetCarStatus set_car_status = 23;
  repeated SetPedalsRange set_pedals_range = 24;
  repeated LvCurrent lv_current = 25;
  repeated LvVoltage lv_voltage = 26;
  repeated LvTemperature lv_temperature = 27;
  repeated CoolingStatus cooling_status = 28;
  repeated HvCellsVoltage hv_cells_voltage = 29;
  repeated HvCellsTemp hv_cells_temp = 30;
  repeated HvCellBalancingStatus hv_cell_balancing_status = 31;
  repeated InvLSetTorque inv_l_set_torque = 32;
  repeated InvLResponse inv_l_response = 33;
}